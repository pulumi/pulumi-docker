# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from . import utilities, tables

class Network(pulumi.CustomResource):
    """
    Manages a Docker Network. This can be used alongside
    [docker\_container](https://www.terraform.io/docs/providers/docker/r/container.html)
    to create virtual networks within the docker environment.
    """
    def __init__(__self__, __name__, __opts__=None, attachable=None, check_duplicate=None, driver=None, ingress=None, internal=None, ipam_configs=None, ipam_driver=None, ipv6=None, labels=None, name=None, options=None):
        """Create a Network resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['attachable'] = attachable

        __props__['check_duplicate'] = check_duplicate

        __props__['driver'] = driver

        __props__['ingress'] = ingress

        __props__['internal'] = internal

        __props__['ipam_configs'] = ipam_configs

        __props__['ipam_driver'] = ipam_driver

        __props__['ipv6'] = ipv6

        __props__['labels'] = labels

        __props__['name'] = name

        __props__['options'] = options

        __props__['scope'] = None

        super(Network, __self__).__init__(
            'docker:index/network:Network',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

