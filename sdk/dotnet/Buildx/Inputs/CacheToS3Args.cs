// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Docker.Buildx.Inputs
{

    public sealed class CacheToS3Args : global::Pulumi.ResourceArgs
    {
        [Input("accessKeyId")]
        public Input<string>? AccessKeyId { get; set; }

        [Input("blobsPrefix")]
        public Input<string>? BlobsPrefix { get; set; }

        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("endpointUrl")]
        public Input<string>? EndpointUrl { get; set; }

        /// <summary>
        /// Ignore errors caused by failed cache exports.
        /// </summary>
        [Input("ignoreError")]
        public Input<bool>? IgnoreError { get; set; }

        [Input("manifestsPrefix")]
        public Input<string>? ManifestsPrefix { get; set; }

        [Input("mode")]
        public Input<Pulumi.Docker.Buildx.CacheMode>? Mode { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        [Input("secretAccessKey")]
        private Input<string>? _secretAccessKey;
        public Input<string>? SecretAccessKey
        {
            get => _secretAccessKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secretAccessKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("sessionToken")]
        private Input<string>? _sessionToken;
        public Input<string>? SessionToken
        {
            get => _sessionToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sessionToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("usePathStyle")]
        public Input<bool>? UsePathStyle { get; set; }

        public CacheToS3Args()
        {
            AccessKeyId = Utilities.GetEnv("AWS_ACCESS_KEY_ID") ?? "";
            IgnoreError = false;
            Mode = Pulumi.Docker.Buildx.CacheMode.Min;
            Region = Utilities.GetEnv("AWS_REGION") ?? "";
            SecretAccessKey = Utilities.GetEnv("AWS_SECRET_ACCESS_KEY") ?? "";
            SessionToken = Utilities.GetEnv("AWS_SESSION_TOKEN") ?? "";
        }
        public static new CacheToS3Args Empty => new CacheToS3Args();
    }
}
