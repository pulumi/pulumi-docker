// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Docker.Inputs
{

    public sealed class RegistryImageBuildArgs : Pulumi.ResourceArgs
    {
        [Input("authConfigs")]
        private InputList<Inputs.RegistryImageBuildAuthConfigArgs>? _authConfigs;
        public InputList<Inputs.RegistryImageBuildAuthConfigArgs> AuthConfigs
        {
            get => _authConfigs ?? (_authConfigs = new InputList<Inputs.RegistryImageBuildAuthConfigArgs>());
            set => _authConfigs = value;
        }

        [Input("buildArgs")]
        private InputMap<string>? _buildArgs;
        public InputMap<string> BuildArgs
        {
            get => _buildArgs ?? (_buildArgs = new InputMap<string>());
            set => _buildArgs = value;
        }

        [Input("buildId")]
        public Input<string>? BuildId { get; set; }

        [Input("cacheFroms")]
        private InputList<string>? _cacheFroms;
        public InputList<string> CacheFroms
        {
            get => _cacheFroms ?? (_cacheFroms = new InputList<string>());
            set => _cacheFroms = value;
        }

        [Input("cgroupParent")]
        public Input<string>? CgroupParent { get; set; }

        [Input("context", required: true)]
        public Input<string> Context { get; set; } = null!;

        [Input("cpuPeriod")]
        public Input<int>? CpuPeriod { get; set; }

        [Input("cpuQuota")]
        public Input<int>? CpuQuota { get; set; }

        [Input("cpuSetCpus")]
        public Input<string>? CpuSetCpus { get; set; }

        [Input("cpuSetMems")]
        public Input<string>? CpuSetMems { get; set; }

        [Input("cpuShares")]
        public Input<int>? CpuShares { get; set; }

        [Input("dockerfile")]
        public Input<string>? Dockerfile { get; set; }

        [Input("extraHosts")]
        private InputList<string>? _extraHosts;
        public InputList<string> ExtraHosts
        {
            get => _extraHosts ?? (_extraHosts = new InputList<string>());
            set => _extraHosts = value;
        }

        [Input("forceRemove")]
        public Input<bool>? ForceRemove { get; set; }

        [Input("isolation")]
        public Input<string>? Isolation { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("memory")]
        public Input<int>? Memory { get; set; }

        [Input("memorySwap")]
        public Input<int>? MemorySwap { get; set; }

        [Input("networkMode")]
        public Input<string>? NetworkMode { get; set; }

        [Input("noCache")]
        public Input<bool>? NoCache { get; set; }

        [Input("platform")]
        public Input<string>? Platform { get; set; }

        [Input("pullParent")]
        public Input<bool>? PullParent { get; set; }

        [Input("remoteContext")]
        public Input<string>? RemoteContext { get; set; }

        [Input("remove")]
        public Input<bool>? Remove { get; set; }

        [Input("securityOpts")]
        private InputList<string>? _securityOpts;
        public InputList<string> SecurityOpts
        {
            get => _securityOpts ?? (_securityOpts = new InputList<string>());
            set => _securityOpts = value;
        }

        [Input("sessionId")]
        public Input<string>? SessionId { get; set; }

        [Input("shmSize")]
        public Input<int>? ShmSize { get; set; }

        [Input("squash")]
        public Input<bool>? Squash { get; set; }

        [Input("suppressOutput")]
        public Input<bool>? SuppressOutput { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("ulimits")]
        private InputList<Inputs.RegistryImageBuildUlimitArgs>? _ulimits;
        public InputList<Inputs.RegistryImageBuildUlimitArgs> Ulimits
        {
            get => _ulimits ?? (_ulimits = new InputList<Inputs.RegistryImageBuildUlimitArgs>());
            set => _ulimits = value;
        }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public RegistryImageBuildArgs()
        {
        }
    }
}
