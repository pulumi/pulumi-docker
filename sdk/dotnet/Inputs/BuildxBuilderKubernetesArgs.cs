// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Docker.Inputs
{

    public sealed class BuildxBuilderKubernetesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sets additional annotations on the deployments and pods.
        /// </summary>
        [Input("annotations")]
        public Input<string>? Annotations { get; set; }

        /// <summary>
        /// Automatically load images to the Docker Engine image store. Defaults to `false`
        /// </summary>
        [Input("defaultLoad")]
        public Input<bool>? DefaultLoad { get; set; }

        /// <summary>
        /// Sets the image to use for running BuildKit.
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Sets additional labels on the deployments and pods.
        /// </summary>
        [Input("labels")]
        public Input<string>? Labels { get; set; }

        /// <summary>
        /// Resource limits for CPU, memory, and ephemeral storage.
        /// </summary>
        [Input("limits")]
        public Input<Inputs.BuildxBuilderKubernetesLimitsArgs>? Limits { get; set; }

        /// <summary>
        /// Load-balancing strategy (sticky or random).
        /// </summary>
        [Input("loadbalance")]
        public Input<string>? Loadbalance { get; set; }

        /// <summary>
        /// Sets the Kubernetes namespace.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// Sets the pod's nodeSelector label(s).
        /// </summary>
        [Input("nodeselector")]
        public Input<string>? Nodeselector { get; set; }

        /// <summary>
        /// QEMU emulation configuration.
        /// </summary>
        [Input("qemu")]
        public Input<Inputs.BuildxBuilderKubernetesQemuArgs>? Qemu { get; set; }

        /// <summary>
        /// Sets the number of Pod replicas to create.
        /// </summary>
        [Input("replicas")]
        public Input<int>? Replicas { get; set; }

        /// <summary>
        /// Resource requests for CPU, memory, and ephemeral storage.
        /// </summary>
        [Input("requests")]
        public Input<Inputs.BuildxBuilderKubernetesRequestsArgs>? Requests { get; set; }

        /// <summary>
        /// Run the container as a non-root user.
        /// </summary>
        [Input("rootless")]
        public Input<bool>? Rootless { get; set; }

        /// <summary>
        /// Sets the scheduler responsible for scheduling the pod.
        /// </summary>
        [Input("schedulername")]
        public Input<string>? Schedulername { get; set; }

        /// <summary>
        /// Sets the pod's serviceAccountName.
        /// </summary>
        [Input("serviceaccount")]
        public Input<string>? Serviceaccount { get; set; }

        /// <summary>
        /// Set the timeout limit for pod provisioning.
        /// </summary>
        [Input("timeout")]
        public Input<string>? Timeout { get; set; }

        /// <summary>
        /// Configures the pod's taint toleration.
        /// </summary>
        [Input("tolerations")]
        public Input<string>? Tolerations { get; set; }

        public BuildxBuilderKubernetesArgs()
        {
        }
        public static new BuildxBuilderKubernetesArgs Empty => new BuildxBuilderKubernetesArgs();
    }
}
