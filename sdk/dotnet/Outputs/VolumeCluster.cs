// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Docker.Outputs
{

    [OutputType]
    public sealed class VolumeCluster
    {
        /// <summary>
        /// Availability of the volume. Can be `Active` (default), `Pause`, or `Drain`.
        /// </summary>
        public readonly string? Availability;
        /// <summary>
        /// Cluster Volume group
        /// </summary>
        public readonly string? Group;
        /// <summary>
        /// The ID of the cluster volume.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Minimum size of the Cluster Volume in human readable memory bytes (like 128MiB, 2GiB, etc). Must be in format of KiB, MiB, Gib, Tib or PiB.
        /// </summary>
        public readonly string? LimitBytes;
        /// <summary>
        /// Maximum size of the Cluster Volume in human readable memory bytes (like 128MiB, 2GiB, etc). Must be in format of KiB, MiB, Gib, Tib or PiB.
        /// </summary>
        public readonly string? RequiredBytes;
        /// <summary>
        /// The scope of the volume. Can be `Single` (default) or `Multi`.
        /// </summary>
        public readonly string? Scope;
        /// <summary>
        /// The sharing mode. Can be `None` (default), `Readonly`, `Onewriter` or `All`.
        /// </summary>
        public readonly string? Sharing;
        /// <summary>
        /// A topology that the Cluster Volume would be preferred in
        /// </summary>
        public readonly string? TopologyPreferred;
        /// <summary>
        /// A topology that the Cluster Volume must be accessible from
        /// </summary>
        public readonly string? TopologyRequired;
        /// <summary>
        /// Cluster Volume access type. Can be `Mount` or `Block` (default).
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private VolumeCluster(
            string? availability,

            string? group,

            string? id,

            string? limitBytes,

            string? requiredBytes,

            string? scope,

            string? sharing,

            string? topologyPreferred,

            string? topologyRequired,

            string? type)
        {
            Availability = availability;
            Group = group;
            Id = id;
            LimitBytes = limitBytes;
            RequiredBytes = requiredBytes;
            Scope = scope;
            Sharing = sharing;
            TopologyPreferred = topologyPreferred;
            TopologyRequired = topologyRequired;
            Type = type;
        }
    }
}
