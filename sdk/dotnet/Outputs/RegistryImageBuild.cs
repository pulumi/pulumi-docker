// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Docker.Outputs
{

    [OutputType]
    public sealed class RegistryImageBuild
    {
        public readonly ImmutableArray<Outputs.RegistryImageBuildAuthConfig> AuthConfigs;
        public readonly ImmutableDictionary<string, string>? BuildArgs;
        public readonly string? BuildId;
        public readonly ImmutableArray<string> CacheFroms;
        public readonly string? CgroupParent;
        public readonly string Context;
        public readonly int? CpuPeriod;
        public readonly int? CpuQuota;
        public readonly string? CpuSetCpus;
        public readonly string? CpuSetMems;
        public readonly int? CpuShares;
        public readonly string? Dockerfile;
        public readonly ImmutableArray<string> ExtraHosts;
        public readonly bool? ForceRemove;
        public readonly string? Isolation;
        public readonly ImmutableDictionary<string, string>? Labels;
        public readonly int? Memory;
        public readonly int? MemorySwap;
        public readonly string? NetworkMode;
        public readonly bool? NoCache;
        public readonly string? Platform;
        public readonly bool? PullParent;
        public readonly string? RemoteContext;
        public readonly bool? Remove;
        public readonly ImmutableArray<string> SecurityOpts;
        public readonly string? SessionId;
        public readonly int? ShmSize;
        public readonly bool? Squash;
        public readonly bool? SuppressOutput;
        public readonly string? Target;
        public readonly ImmutableArray<Outputs.RegistryImageBuildUlimit> Ulimits;
        public readonly string? Version;

        [OutputConstructor]
        private RegistryImageBuild(
            ImmutableArray<Outputs.RegistryImageBuildAuthConfig> authConfigs,

            ImmutableDictionary<string, string>? buildArgs,

            string? buildId,

            ImmutableArray<string> cacheFroms,

            string? cgroupParent,

            string context,

            int? cpuPeriod,

            int? cpuQuota,

            string? cpuSetCpus,

            string? cpuSetMems,

            int? cpuShares,

            string? dockerfile,

            ImmutableArray<string> extraHosts,

            bool? forceRemove,

            string? isolation,

            ImmutableDictionary<string, string>? labels,

            int? memory,

            int? memorySwap,

            string? networkMode,

            bool? noCache,

            string? platform,

            bool? pullParent,

            string? remoteContext,

            bool? remove,

            ImmutableArray<string> securityOpts,

            string? sessionId,

            int? shmSize,

            bool? squash,

            bool? suppressOutput,

            string? target,

            ImmutableArray<Outputs.RegistryImageBuildUlimit> ulimits,

            string? version)
        {
            AuthConfigs = authConfigs;
            BuildArgs = buildArgs;
            BuildId = buildId;
            CacheFroms = cacheFroms;
            CgroupParent = cgroupParent;
            Context = context;
            CpuPeriod = cpuPeriod;
            CpuQuota = cpuQuota;
            CpuSetCpus = cpuSetCpus;
            CpuSetMems = cpuSetMems;
            CpuShares = cpuShares;
            Dockerfile = dockerfile;
            ExtraHosts = extraHosts;
            ForceRemove = forceRemove;
            Isolation = isolation;
            Labels = labels;
            Memory = memory;
            MemorySwap = memorySwap;
            NetworkMode = networkMode;
            NoCache = noCache;
            Platform = platform;
            PullParent = pullParent;
            RemoteContext = remoteContext;
            Remove = remove;
            SecurityOpts = securityOpts;
            SessionId = sessionId;
            ShmSize = shmSize;
            Squash = squash;
            SuppressOutput = suppressOutput;
            Target = target;
            Ulimits = ulimits;
            Version = version;
        }
    }
}
