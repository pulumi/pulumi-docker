// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Docker.Outputs
{

    [OutputType]
    public sealed class BuildxBuilderKubernetes
    {
        /// <summary>
        /// Sets additional annotations on the deployments and pods.
        /// </summary>
        public readonly string? Annotations;
        /// <summary>
        /// Automatically load images to the Docker Engine image store. Defaults to `False`
        /// </summary>
        public readonly bool? DefaultLoad;
        /// <summary>
        /// Sets the image to use for running BuildKit.
        /// </summary>
        public readonly string? Image;
        /// <summary>
        /// Sets additional labels on the deployments and pods.
        /// </summary>
        public readonly string? Labels;
        /// <summary>
        /// Resource limits for CPU, memory, and ephemeral storage.
        /// </summary>
        public readonly Outputs.BuildxBuilderKubernetesLimits? Limits;
        /// <summary>
        /// Load-balancing strategy (sticky or random).
        /// </summary>
        public readonly string? Loadbalance;
        /// <summary>
        /// Sets the Kubernetes namespace.
        /// </summary>
        public readonly string? Namespace;
        /// <summary>
        /// Sets the pod's nodeSelector label(s).
        /// </summary>
        public readonly string? Nodeselector;
        /// <summary>
        /// QEMU emulation configuration.
        /// </summary>
        public readonly Outputs.BuildxBuilderKubernetesQemu? Qemu;
        /// <summary>
        /// Sets the number of Pod replicas to create.
        /// </summary>
        public readonly int? Replicas;
        /// <summary>
        /// Resource requests for CPU, memory, and ephemeral storage.
        /// </summary>
        public readonly Outputs.BuildxBuilderKubernetesRequests? Requests;
        /// <summary>
        /// Run the container as a non-root user.
        /// </summary>
        public readonly bool? Rootless;
        /// <summary>
        /// Sets the scheduler responsible for scheduling the pod.
        /// </summary>
        public readonly string? Schedulername;
        /// <summary>
        /// Sets the pod's serviceAccountName.
        /// </summary>
        public readonly string? Serviceaccount;
        /// <summary>
        /// Set the timeout limit for pod provisioning.
        /// </summary>
        public readonly string? Timeout;
        /// <summary>
        /// Configures the pod's taint toleration.
        /// </summary>
        public readonly string? Tolerations;

        [OutputConstructor]
        private BuildxBuilderKubernetes(
            string? annotations,

            bool? defaultLoad,

            string? image,

            string? labels,

            Outputs.BuildxBuilderKubernetesLimits? limits,

            string? loadbalance,

            string? @namespace,

            string? nodeselector,

            Outputs.BuildxBuilderKubernetesQemu? qemu,

            int? replicas,

            Outputs.BuildxBuilderKubernetesRequests? requests,

            bool? rootless,

            string? schedulername,

            string? serviceaccount,

            string? timeout,

            string? tolerations)
        {
            Annotations = annotations;
            DefaultLoad = defaultLoad;
            Image = image;
            Labels = labels;
            Limits = limits;
            Loadbalance = loadbalance;
            Namespace = @namespace;
            Nodeselector = nodeselector;
            Qemu = qemu;
            Replicas = replicas;
            Requests = requests;
            Rootless = rootless;
            Schedulername = schedulername;
            Serviceaccount = serviceaccount;
            Timeout = timeout;
            Tolerations = tolerations;
        }
    }
}
