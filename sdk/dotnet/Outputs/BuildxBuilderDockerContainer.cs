// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Docker.Outputs
{

    [OutputType]
    public sealed class BuildxBuilderDockerContainer
    {
        /// <summary>
        /// Sets the cgroup parent of the container if Docker is using the "cgroupfs" driver.
        /// </summary>
        public readonly string? CgroupParent;
        /// <summary>
        /// Sets the CPU CFS scheduler period for the container.
        /// </summary>
        public readonly string? CpuPeriod;
        /// <summary>
        /// Imposes a CPU CFS quota on the container.
        /// </summary>
        public readonly string? CpuQuota;
        /// <summary>
        /// Configures CPU shares (relative weight) of the container.
        /// </summary>
        public readonly string? CpuShares;
        /// <summary>
        /// Limits the set of CPU cores the container can use.
        /// </summary>
        public readonly string? CpusetCpus;
        /// <summary>
        /// Limits the set of CPU memory nodes the container can use.
        /// </summary>
        public readonly string? CpusetMems;
        /// <summary>
        /// Automatically load images to the Docker Engine image store. Defaults to `false`
        /// </summary>
        public readonly bool? DefaultLoad;
        /// <summary>
        /// Sets environment variables in the container.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Env;
        /// <summary>
        /// Sets the BuildKit image to use for the container.
        /// </summary>
        public readonly string? Image;
        /// <summary>
        /// Sets the amount of memory the container can use.
        /// </summary>
        public readonly string? Memory;
        /// <summary>
        /// Sets the memory swap limit for the container.
        /// </summary>
        public readonly string? MemorySwap;
        /// <summary>
        /// Sets the network mode for the container.
        /// </summary>
        public readonly string? Network;
        /// <summary>
        /// Sets the container's restart policy.
        /// </summary>
        public readonly string? RestartPolicy;

        [OutputConstructor]
        private BuildxBuilderDockerContainer(
            string? cgroupParent,

            string? cpuPeriod,

            string? cpuQuota,

            string? cpuShares,

            string? cpusetCpus,

            string? cpusetMems,

            bool? defaultLoad,

            ImmutableDictionary<string, string>? env,

            string? image,

            string? memory,

            string? memorySwap,

            string? network,

            string? restartPolicy)
        {
            CgroupParent = cgroupParent;
            CpuPeriod = cpuPeriod;
            CpuQuota = cpuQuota;
            CpuShares = cpuShares;
            CpusetCpus = cpusetCpus;
            CpusetMems = cpusetMems;
            DefaultLoad = defaultLoad;
            Env = env;
            Image = image;
            Memory = memory;
            MemorySwap = memorySwap;
            Network = network;
            RestartPolicy = restartPolicy;
        }
    }
}
