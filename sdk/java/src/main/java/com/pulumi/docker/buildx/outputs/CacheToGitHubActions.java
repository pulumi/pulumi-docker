// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.buildx.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.docker.buildx.enums.CacheMode;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CacheToGitHubActions {
    /**
     * @return Ignore errors caused by failed cache exports.
     * 
     */
    private @Nullable Boolean ignoreError;
    private @Nullable CacheMode mode;
    /**
     * @return Which scope cache object belongs to.
     * 
     */
    private @Nullable String scope;
    /**
     * @return Access token
     * 
     */
    private @Nullable String token;
    /**
     * @return Cache server URL
     * 
     */
    private @Nullable String url;

    private CacheToGitHubActions() {}
    /**
     * @return Ignore errors caused by failed cache exports.
     * 
     */
    public Optional<Boolean> ignoreError() {
        return Optional.ofNullable(this.ignoreError);
    }
    public Optional<CacheMode> mode() {
        return Optional.ofNullable(this.mode);
    }
    /**
     * @return Which scope cache object belongs to.
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }
    /**
     * @return Access token
     * 
     */
    public Optional<String> token() {
        return Optional.ofNullable(this.token);
    }
    /**
     * @return Cache server URL
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CacheToGitHubActions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean ignoreError;
        private @Nullable CacheMode mode;
        private @Nullable String scope;
        private @Nullable String token;
        private @Nullable String url;
        public Builder() {}
        public Builder(CacheToGitHubActions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ignoreError = defaults.ignoreError;
    	      this.mode = defaults.mode;
    	      this.scope = defaults.scope;
    	      this.token = defaults.token;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder ignoreError(@Nullable Boolean ignoreError) {

            this.ignoreError = ignoreError;
            return this;
        }
        @CustomType.Setter
        public Builder mode(@Nullable CacheMode mode) {

            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder scope(@Nullable String scope) {

            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder token(@Nullable String token) {

            this.token = token;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {

            this.url = url;
            return this;
        }
        public CacheToGitHubActions build() {
            final var _resultValue = new CacheToGitHubActions();
            _resultValue.ignoreError = ignoreError;
            _resultValue.mode = mode;
            _resultValue.scope = scope;
            _resultValue.token = token;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
