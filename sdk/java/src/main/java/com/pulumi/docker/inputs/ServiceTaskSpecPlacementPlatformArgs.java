// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ServiceTaskSpecPlacementPlatformArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceTaskSpecPlacementPlatformArgs Empty = new ServiceTaskSpecPlacementPlatformArgs();

    @Import(name="architecture", required=true)
    private Output<String> architecture;

    public Output<String> architecture() {
        return this.architecture;
    }

    @Import(name="os", required=true)
    private Output<String> os;

    public Output<String> os() {
        return this.os;
    }

    private ServiceTaskSpecPlacementPlatformArgs() {}

    private ServiceTaskSpecPlacementPlatformArgs(ServiceTaskSpecPlacementPlatformArgs $) {
        this.architecture = $.architecture;
        this.os = $.os;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceTaskSpecPlacementPlatformArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceTaskSpecPlacementPlatformArgs $;

        public Builder() {
            $ = new ServiceTaskSpecPlacementPlatformArgs();
        }

        public Builder(ServiceTaskSpecPlacementPlatformArgs defaults) {
            $ = new ServiceTaskSpecPlacementPlatformArgs(Objects.requireNonNull(defaults));
        }

        public Builder architecture(Output<String> architecture) {
            $.architecture = architecture;
            return this;
        }

        public Builder architecture(String architecture) {
            return architecture(Output.of(architecture));
        }

        public Builder os(Output<String> os) {
            $.os = os;
            return this;
        }

        public Builder os(String os) {
            return os(Output.of(os));
        }

        public ServiceTaskSpecPlacementPlatformArgs build() {
            if ($.architecture == null) {
                throw new MissingRequiredPropertyException("ServiceTaskSpecPlacementPlatformArgs", "architecture");
            }
            if ($.os == null) {
                throw new MissingRequiredPropertyException("ServiceTaskSpecPlacementPlatformArgs", "os");
            }
            return $;
        }
    }

}
