// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.buildx;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.docker.Utilities;
import com.pulumi.docker.buildx.IndexArgs;
import com.pulumi.docker.buildx.outputs.RegistryAuth;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * An index (or manifest list) referencing one or more existing images.
 * 
 * Useful for crafting a multi-platform image from several
 * platform-specific images.
 * 
 * This creates an OCI image index or a Docker manifest list depending on
 * the media types of the source images.
 * 
 */
@ResourceType(type="docker:buildx/image:Index")
public class Index extends com.pulumi.resources.CustomResource {
    /**
     * If true, push the index to the target registry.
     * 
     * Defaults to `true`.
     * 
     */
    @Export(name="push", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> push;

    /**
     * @return If true, push the index to the target registry.
     * 
     * Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> push() {
        return Codegen.optional(this.push);
    }
    /**
     * The pushed tag with digest. If the index was not pushed this is just
     * the tag.
     * 
     */
    @Export(name="ref", refs={String.class}, tree="[0]")
    private Output<String> ref;

    /**
     * @return The pushed tag with digest. If the index was not pushed this is just
     * the tag.
     * 
     */
    public Output<String> ref() {
        return this.ref;
    }
    /**
     * Authentication for the registry where the tagged index will be pushed.
     * 
     * Credentials can also be included with the provider&#39;s configuration.
     * 
     */
    @Export(name="registry", refs={RegistryAuth.class}, tree="[0]")
    private Output</* @Nullable */ RegistryAuth> registry;

    /**
     * @return Authentication for the registry where the tagged index will be pushed.
     * 
     * Credentials can also be included with the provider&#39;s configuration.
     * 
     */
    public Output<Optional<RegistryAuth>> registry() {
        return Codegen.optional(this.registry);
    }
    /**
     * Existing images to include in the index.
     * 
     */
    @Export(name="sources", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> sources;

    /**
     * @return Existing images to include in the index.
     * 
     */
    public Output<List<String>> sources() {
        return this.sources;
    }
    @Export(name="tag", refs={String.class}, tree="[0]")
    private Output<String> tag;

    public Output<String> tag() {
        return this.tag;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Index(String name) {
        this(name, IndexArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Index(String name, IndexArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Index(String name, IndexArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("docker:buildx/image:Index", name, args == null ? IndexArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Index(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("docker:buildx/image:Index", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Index get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Index(name, id, options);
    }
}
