// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.buildx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CacheFromGitHubActionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CacheFromGitHubActionsArgs Empty = new CacheFromGitHubActionsArgs();

    /**
     * Which scope cache object belongs to.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return Which scope cache object belongs to.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * Access token
     * 
     */
    @Import(name="token")
    private @Nullable Output<String> token;

    /**
     * @return Access token
     * 
     */
    public Optional<Output<String>> token() {
        return Optional.ofNullable(this.token);
    }

    /**
     * Cache server URL
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return Cache server URL
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private CacheFromGitHubActionsArgs() {}

    private CacheFromGitHubActionsArgs(CacheFromGitHubActionsArgs $) {
        this.scope = $.scope;
        this.token = $.token;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CacheFromGitHubActionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CacheFromGitHubActionsArgs $;

        public Builder() {
            $ = new CacheFromGitHubActionsArgs();
        }

        public Builder(CacheFromGitHubActionsArgs defaults) {
            $ = new CacheFromGitHubActionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param scope Which scope cache object belongs to.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope Which scope cache object belongs to.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param token Access token
         * 
         * @return builder
         * 
         */
        public Builder token(@Nullable Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token Access token
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        /**
         * @param url Cache server URL
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url Cache server URL
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public CacheFromGitHubActionsArgs build() {
            $.scope = Codegen.stringProp("scope").output().arg($.scope).env("buildkit").def("").getNullable();
            $.token = Codegen.stringProp("token").secret().arg($.token).env("ACTIONS_RUNTIME_TOKEN").def("").getNullable();
            $.url = Codegen.stringProp("url").output().arg($.url).env("ACTIONS_RUNTIME_URL").def("").getNullable();
            return $;
        }
    }

}
