// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceEndpointSpecPortArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceEndpointSpecPortArgs Empty = new ServiceEndpointSpecPortArgs();

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    @Import(name="publishMode")
    private @Nullable Output<String> publishMode;

    public Optional<Output<String>> publishMode() {
        return Optional.ofNullable(this.publishMode);
    }

    @Import(name="publishedPort")
    private @Nullable Output<Integer> publishedPort;

    public Optional<Output<Integer>> publishedPort() {
        return Optional.ofNullable(this.publishedPort);
    }

    @Import(name="targetPort", required=true)
    private Output<Integer> targetPort;

    public Output<Integer> targetPort() {
        return this.targetPort;
    }

    private ServiceEndpointSpecPortArgs() {}

    private ServiceEndpointSpecPortArgs(ServiceEndpointSpecPortArgs $) {
        this.name = $.name;
        this.protocol = $.protocol;
        this.publishMode = $.publishMode;
        this.publishedPort = $.publishedPort;
        this.targetPort = $.targetPort;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceEndpointSpecPortArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceEndpointSpecPortArgs $;

        public Builder() {
            $ = new ServiceEndpointSpecPortArgs();
        }

        public Builder(ServiceEndpointSpecPortArgs defaults) {
            $ = new ServiceEndpointSpecPortArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public Builder publishMode(@Nullable Output<String> publishMode) {
            $.publishMode = publishMode;
            return this;
        }

        public Builder publishMode(String publishMode) {
            return publishMode(Output.of(publishMode));
        }

        public Builder publishedPort(@Nullable Output<Integer> publishedPort) {
            $.publishedPort = publishedPort;
            return this;
        }

        public Builder publishedPort(Integer publishedPort) {
            return publishedPort(Output.of(publishedPort));
        }

        public Builder targetPort(Output<Integer> targetPort) {
            $.targetPort = targetPort;
            return this;
        }

        public Builder targetPort(Integer targetPort) {
            return targetPort(Output.of(targetPort));
        }

        public ServiceEndpointSpecPortArgs build() {
            if ($.targetPort == null) {
                throw new MissingRequiredPropertyException("ServiceEndpointSpecPortArgs", "targetPort");
            }
            return $;
        }
    }

}
