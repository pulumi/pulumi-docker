// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.docker.TagArgs;
import com.pulumi.docker.Utilities;
import com.pulumi.docker.inputs.TagState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Creates a docker tag. It has the exact same functionality as the `docker tag` command. Deleting the resource will neither delete the source nor target images. The source image must exist on the machine running the docker daemon.
 * 
 */
@ResourceType(type="docker:index/tag:Tag")
public class Tag extends com.pulumi.resources.CustomResource {
    /**
     * Name of the source image.
     * 
     */
    @Export(name="sourceImage", type=String.class, parameters={})
    private Output<String> sourceImage;

    /**
     * @return Name of the source image.
     * 
     */
    public Output<String> sourceImage() {
        return this.sourceImage;
    }
    /**
     * ImageID of the source image in the format of `sha256:&lt;&lt;ID&gt;&gt;`
     * 
     */
    @Export(name="sourceImageId", type=String.class, parameters={})
    private Output<String> sourceImageId;

    /**
     * @return ImageID of the source image in the format of `sha256:&lt;&lt;ID&gt;&gt;`
     * 
     */
    public Output<String> sourceImageId() {
        return this.sourceImageId;
    }
    /**
     * Name of the target image.
     * 
     */
    @Export(name="targetImage", type=String.class, parameters={})
    private Output<String> targetImage;

    /**
     * @return Name of the target image.
     * 
     */
    public Output<String> targetImage() {
        return this.targetImage;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Tag(String name) {
        this(name, TagArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Tag(String name, TagArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Tag(String name, TagArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("docker:index/tag:Tag", name, args == null ? TagArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Tag(String name, Output<String> id, @Nullable TagState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("docker:index/tag:Tag", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Tag get(String name, Output<String> id, @Nullable TagState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Tag(name, id, state, options);
    }
}
