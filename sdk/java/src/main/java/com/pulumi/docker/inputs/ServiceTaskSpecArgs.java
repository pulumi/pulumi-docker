// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.docker.inputs.ServiceTaskSpecContainerSpecArgs;
import com.pulumi.docker.inputs.ServiceTaskSpecLogDriverArgs;
import com.pulumi.docker.inputs.ServiceTaskSpecNetworksAdvancedArgs;
import com.pulumi.docker.inputs.ServiceTaskSpecPlacementArgs;
import com.pulumi.docker.inputs.ServiceTaskSpecResourcesArgs;
import com.pulumi.docker.inputs.ServiceTaskSpecRestartPolicyArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceTaskSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceTaskSpecArgs Empty = new ServiceTaskSpecArgs();

    /**
     * The spec for each container
     * 
     */
    @Import(name="containerSpec", required=true)
    private Output<ServiceTaskSpecContainerSpecArgs> containerSpec;

    /**
     * @return The spec for each container
     * 
     */
    public Output<ServiceTaskSpecContainerSpecArgs> containerSpec() {
        return this.containerSpec;
    }

    /**
     * A counter that triggers an update even if no relevant parameters have been changed. See the [spec](https://github.com/docker/swarmkit/blob/master/api/specs.proto#L126).
     * 
     */
    @Import(name="forceUpdate")
    private @Nullable Output<Integer> forceUpdate;

    /**
     * @return A counter that triggers an update even if no relevant parameters have been changed. See the [spec](https://github.com/docker/swarmkit/blob/master/api/specs.proto#L126).
     * 
     */
    public Optional<Output<Integer>> forceUpdate() {
        return Optional.ofNullable(this.forceUpdate);
    }

    /**
     * Specifies the log driver to use for tasks created from this spec. If not present, the default one for the swarm will be used, finally falling back to the engine default if not specified
     * 
     */
    @Import(name="logDriver")
    private @Nullable Output<ServiceTaskSpecLogDriverArgs> logDriver;

    /**
     * @return Specifies the log driver to use for tasks created from this spec. If not present, the default one for the swarm will be used, finally falling back to the engine default if not specified
     * 
     */
    public Optional<Output<ServiceTaskSpecLogDriverArgs>> logDriver() {
        return Optional.ofNullable(this.logDriver);
    }

    /**
     * The networks the container is attached to
     * 
     */
    @Import(name="networksAdvanceds")
    private @Nullable Output<List<ServiceTaskSpecNetworksAdvancedArgs>> networksAdvanceds;

    /**
     * @return The networks the container is attached to
     * 
     */
    public Optional<Output<List<ServiceTaskSpecNetworksAdvancedArgs>>> networksAdvanceds() {
        return Optional.ofNullable(this.networksAdvanceds);
    }

    /**
     * The placement preferences
     * 
     */
    @Import(name="placement")
    private @Nullable Output<ServiceTaskSpecPlacementArgs> placement;

    /**
     * @return The placement preferences
     * 
     */
    public Optional<Output<ServiceTaskSpecPlacementArgs>> placement() {
        return Optional.ofNullable(this.placement);
    }

    /**
     * Resource requirements which apply to each individual container created as part of the service
     * 
     */
    @Import(name="resources")
    private @Nullable Output<ServiceTaskSpecResourcesArgs> resources;

    /**
     * @return Resource requirements which apply to each individual container created as part of the service
     * 
     */
    public Optional<Output<ServiceTaskSpecResourcesArgs>> resources() {
        return Optional.ofNullable(this.resources);
    }

    /**
     * Specification for the restart policy which applies to containers created as part of this service.
     * 
     */
    @Import(name="restartPolicy")
    private @Nullable Output<ServiceTaskSpecRestartPolicyArgs> restartPolicy;

    /**
     * @return Specification for the restart policy which applies to containers created as part of this service.
     * 
     */
    public Optional<Output<ServiceTaskSpecRestartPolicyArgs>> restartPolicy() {
        return Optional.ofNullable(this.restartPolicy);
    }

    /**
     * Runtime is the type of runtime specified for the task executor. See the [types](https://github.com/moby/moby/blob/master/api/types/swarm/runtime.go).
     * 
     */
    @Import(name="runtime")
    private @Nullable Output<String> runtime;

    /**
     * @return Runtime is the type of runtime specified for the task executor. See the [types](https://github.com/moby/moby/blob/master/api/types/swarm/runtime.go).
     * 
     */
    public Optional<Output<String>> runtime() {
        return Optional.ofNullable(this.runtime);
    }

    private ServiceTaskSpecArgs() {}

    private ServiceTaskSpecArgs(ServiceTaskSpecArgs $) {
        this.containerSpec = $.containerSpec;
        this.forceUpdate = $.forceUpdate;
        this.logDriver = $.logDriver;
        this.networksAdvanceds = $.networksAdvanceds;
        this.placement = $.placement;
        this.resources = $.resources;
        this.restartPolicy = $.restartPolicy;
        this.runtime = $.runtime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceTaskSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceTaskSpecArgs $;

        public Builder() {
            $ = new ServiceTaskSpecArgs();
        }

        public Builder(ServiceTaskSpecArgs defaults) {
            $ = new ServiceTaskSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerSpec The spec for each container
         * 
         * @return builder
         * 
         */
        public Builder containerSpec(Output<ServiceTaskSpecContainerSpecArgs> containerSpec) {
            $.containerSpec = containerSpec;
            return this;
        }

        /**
         * @param containerSpec The spec for each container
         * 
         * @return builder
         * 
         */
        public Builder containerSpec(ServiceTaskSpecContainerSpecArgs containerSpec) {
            return containerSpec(Output.of(containerSpec));
        }

        /**
         * @param forceUpdate A counter that triggers an update even if no relevant parameters have been changed. See the [spec](https://github.com/docker/swarmkit/blob/master/api/specs.proto#L126).
         * 
         * @return builder
         * 
         */
        public Builder forceUpdate(@Nullable Output<Integer> forceUpdate) {
            $.forceUpdate = forceUpdate;
            return this;
        }

        /**
         * @param forceUpdate A counter that triggers an update even if no relevant parameters have been changed. See the [spec](https://github.com/docker/swarmkit/blob/master/api/specs.proto#L126).
         * 
         * @return builder
         * 
         */
        public Builder forceUpdate(Integer forceUpdate) {
            return forceUpdate(Output.of(forceUpdate));
        }

        /**
         * @param logDriver Specifies the log driver to use for tasks created from this spec. If not present, the default one for the swarm will be used, finally falling back to the engine default if not specified
         * 
         * @return builder
         * 
         */
        public Builder logDriver(@Nullable Output<ServiceTaskSpecLogDriverArgs> logDriver) {
            $.logDriver = logDriver;
            return this;
        }

        /**
         * @param logDriver Specifies the log driver to use for tasks created from this spec. If not present, the default one for the swarm will be used, finally falling back to the engine default if not specified
         * 
         * @return builder
         * 
         */
        public Builder logDriver(ServiceTaskSpecLogDriverArgs logDriver) {
            return logDriver(Output.of(logDriver));
        }

        /**
         * @param networksAdvanceds The networks the container is attached to
         * 
         * @return builder
         * 
         */
        public Builder networksAdvanceds(@Nullable Output<List<ServiceTaskSpecNetworksAdvancedArgs>> networksAdvanceds) {
            $.networksAdvanceds = networksAdvanceds;
            return this;
        }

        /**
         * @param networksAdvanceds The networks the container is attached to
         * 
         * @return builder
         * 
         */
        public Builder networksAdvanceds(List<ServiceTaskSpecNetworksAdvancedArgs> networksAdvanceds) {
            return networksAdvanceds(Output.of(networksAdvanceds));
        }

        /**
         * @param networksAdvanceds The networks the container is attached to
         * 
         * @return builder
         * 
         */
        public Builder networksAdvanceds(ServiceTaskSpecNetworksAdvancedArgs... networksAdvanceds) {
            return networksAdvanceds(List.of(networksAdvanceds));
        }

        /**
         * @param placement The placement preferences
         * 
         * @return builder
         * 
         */
        public Builder placement(@Nullable Output<ServiceTaskSpecPlacementArgs> placement) {
            $.placement = placement;
            return this;
        }

        /**
         * @param placement The placement preferences
         * 
         * @return builder
         * 
         */
        public Builder placement(ServiceTaskSpecPlacementArgs placement) {
            return placement(Output.of(placement));
        }

        /**
         * @param resources Resource requirements which apply to each individual container created as part of the service
         * 
         * @return builder
         * 
         */
        public Builder resources(@Nullable Output<ServiceTaskSpecResourcesArgs> resources) {
            $.resources = resources;
            return this;
        }

        /**
         * @param resources Resource requirements which apply to each individual container created as part of the service
         * 
         * @return builder
         * 
         */
        public Builder resources(ServiceTaskSpecResourcesArgs resources) {
            return resources(Output.of(resources));
        }

        /**
         * @param restartPolicy Specification for the restart policy which applies to containers created as part of this service.
         * 
         * @return builder
         * 
         */
        public Builder restartPolicy(@Nullable Output<ServiceTaskSpecRestartPolicyArgs> restartPolicy) {
            $.restartPolicy = restartPolicy;
            return this;
        }

        /**
         * @param restartPolicy Specification for the restart policy which applies to containers created as part of this service.
         * 
         * @return builder
         * 
         */
        public Builder restartPolicy(ServiceTaskSpecRestartPolicyArgs restartPolicy) {
            return restartPolicy(Output.of(restartPolicy));
        }

        /**
         * @param runtime Runtime is the type of runtime specified for the task executor. See the [types](https://github.com/moby/moby/blob/master/api/types/swarm/runtime.go).
         * 
         * @return builder
         * 
         */
        public Builder runtime(@Nullable Output<String> runtime) {
            $.runtime = runtime;
            return this;
        }

        /**
         * @param runtime Runtime is the type of runtime specified for the task executor. See the [types](https://github.com/moby/moby/blob/master/api/types/swarm/runtime.go).
         * 
         * @return builder
         * 
         */
        public Builder runtime(String runtime) {
            return runtime(Output.of(runtime));
        }

        public ServiceTaskSpecArgs build() {
            if ($.containerSpec == null) {
                throw new MissingRequiredPropertyException("ServiceTaskSpecArgs", "containerSpec");
            }
            return $;
        }
    }

}
