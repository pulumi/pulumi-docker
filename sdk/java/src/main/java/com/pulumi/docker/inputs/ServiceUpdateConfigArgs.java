// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceUpdateConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceUpdateConfigArgs Empty = new ServiceUpdateConfigArgs();

    @Import(name="delay")
    private @Nullable Output<String> delay;

    public Optional<Output<String>> delay() {
        return Optional.ofNullable(this.delay);
    }

    @Import(name="failureAction")
    private @Nullable Output<String> failureAction;

    public Optional<Output<String>> failureAction() {
        return Optional.ofNullable(this.failureAction);
    }

    @Import(name="maxFailureRatio")
    private @Nullable Output<String> maxFailureRatio;

    public Optional<Output<String>> maxFailureRatio() {
        return Optional.ofNullable(this.maxFailureRatio);
    }

    @Import(name="monitor")
    private @Nullable Output<String> monitor;

    public Optional<Output<String>> monitor() {
        return Optional.ofNullable(this.monitor);
    }

    @Import(name="order")
    private @Nullable Output<String> order;

    public Optional<Output<String>> order() {
        return Optional.ofNullable(this.order);
    }

    @Import(name="parallelism")
    private @Nullable Output<Integer> parallelism;

    public Optional<Output<Integer>> parallelism() {
        return Optional.ofNullable(this.parallelism);
    }

    private ServiceUpdateConfigArgs() {}

    private ServiceUpdateConfigArgs(ServiceUpdateConfigArgs $) {
        this.delay = $.delay;
        this.failureAction = $.failureAction;
        this.maxFailureRatio = $.maxFailureRatio;
        this.monitor = $.monitor;
        this.order = $.order;
        this.parallelism = $.parallelism;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceUpdateConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceUpdateConfigArgs $;

        public Builder() {
            $ = new ServiceUpdateConfigArgs();
        }

        public Builder(ServiceUpdateConfigArgs defaults) {
            $ = new ServiceUpdateConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder delay(@Nullable Output<String> delay) {
            $.delay = delay;
            return this;
        }

        public Builder delay(String delay) {
            return delay(Output.of(delay));
        }

        public Builder failureAction(@Nullable Output<String> failureAction) {
            $.failureAction = failureAction;
            return this;
        }

        public Builder failureAction(String failureAction) {
            return failureAction(Output.of(failureAction));
        }

        public Builder maxFailureRatio(@Nullable Output<String> maxFailureRatio) {
            $.maxFailureRatio = maxFailureRatio;
            return this;
        }

        public Builder maxFailureRatio(String maxFailureRatio) {
            return maxFailureRatio(Output.of(maxFailureRatio));
        }

        public Builder monitor(@Nullable Output<String> monitor) {
            $.monitor = monitor;
            return this;
        }

        public Builder monitor(String monitor) {
            return monitor(Output.of(monitor));
        }

        public Builder order(@Nullable Output<String> order) {
            $.order = order;
            return this;
        }

        public Builder order(String order) {
            return order(Output.of(order));
        }

        public Builder parallelism(@Nullable Output<Integer> parallelism) {
            $.parallelism = parallelism;
            return this;
        }

        public Builder parallelism(Integer parallelism) {
            return parallelism(Output.of(parallelism));
        }

        public ServiceUpdateConfigArgs build() {
            return $;
        }
    }

}
