// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.buildx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CacheFromS3Args extends com.pulumi.resources.ResourceArgs {

    public static final CacheFromS3Args Empty = new CacheFromS3Args();

    @Import(name="accessKeyId")
    private @Nullable Output<String> accessKeyId;

    public Optional<Output<String>> accessKeyId() {
        return Optional.ofNullable(this.accessKeyId);
    }

    @Import(name="blobsPrefix")
    private @Nullable Output<String> blobsPrefix;

    public Optional<Output<String>> blobsPrefix() {
        return Optional.ofNullable(this.blobsPrefix);
    }

    @Import(name="bucket", required=true)
    private Output<String> bucket;

    public Output<String> bucket() {
        return this.bucket;
    }

    @Import(name="endpointUrl")
    private @Nullable Output<String> endpointUrl;

    public Optional<Output<String>> endpointUrl() {
        return Optional.ofNullable(this.endpointUrl);
    }

    @Import(name="manifestsPrefix")
    private @Nullable Output<String> manifestsPrefix;

    public Optional<Output<String>> manifestsPrefix() {
        return Optional.ofNullable(this.manifestsPrefix);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="region", required=true)
    private Output<String> region;

    public Output<String> region() {
        return this.region;
    }

    @Import(name="secretAccessKey")
    private @Nullable Output<String> secretAccessKey;

    public Optional<Output<String>> secretAccessKey() {
        return Optional.ofNullable(this.secretAccessKey);
    }

    @Import(name="sessionToken")
    private @Nullable Output<String> sessionToken;

    public Optional<Output<String>> sessionToken() {
        return Optional.ofNullable(this.sessionToken);
    }

    @Import(name="usePathStyle")
    private @Nullable Output<Boolean> usePathStyle;

    public Optional<Output<Boolean>> usePathStyle() {
        return Optional.ofNullable(this.usePathStyle);
    }

    private CacheFromS3Args() {}

    private CacheFromS3Args(CacheFromS3Args $) {
        this.accessKeyId = $.accessKeyId;
        this.blobsPrefix = $.blobsPrefix;
        this.bucket = $.bucket;
        this.endpointUrl = $.endpointUrl;
        this.manifestsPrefix = $.manifestsPrefix;
        this.name = $.name;
        this.region = $.region;
        this.secretAccessKey = $.secretAccessKey;
        this.sessionToken = $.sessionToken;
        this.usePathStyle = $.usePathStyle;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CacheFromS3Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CacheFromS3Args $;

        public Builder() {
            $ = new CacheFromS3Args();
        }

        public Builder(CacheFromS3Args defaults) {
            $ = new CacheFromS3Args(Objects.requireNonNull(defaults));
        }

        public Builder accessKeyId(@Nullable Output<String> accessKeyId) {
            $.accessKeyId = accessKeyId;
            return this;
        }

        public Builder accessKeyId(String accessKeyId) {
            return accessKeyId(Output.of(accessKeyId));
        }

        public Builder blobsPrefix(@Nullable Output<String> blobsPrefix) {
            $.blobsPrefix = blobsPrefix;
            return this;
        }

        public Builder blobsPrefix(String blobsPrefix) {
            return blobsPrefix(Output.of(blobsPrefix));
        }

        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder endpointUrl(@Nullable Output<String> endpointUrl) {
            $.endpointUrl = endpointUrl;
            return this;
        }

        public Builder endpointUrl(String endpointUrl) {
            return endpointUrl(Output.of(endpointUrl));
        }

        public Builder manifestsPrefix(@Nullable Output<String> manifestsPrefix) {
            $.manifestsPrefix = manifestsPrefix;
            return this;
        }

        public Builder manifestsPrefix(String manifestsPrefix) {
            return manifestsPrefix(Output.of(manifestsPrefix));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder secretAccessKey(@Nullable Output<String> secretAccessKey) {
            $.secretAccessKey = secretAccessKey;
            return this;
        }

        public Builder secretAccessKey(String secretAccessKey) {
            return secretAccessKey(Output.of(secretAccessKey));
        }

        public Builder sessionToken(@Nullable Output<String> sessionToken) {
            $.sessionToken = sessionToken;
            return this;
        }

        public Builder sessionToken(String sessionToken) {
            return sessionToken(Output.of(sessionToken));
        }

        public Builder usePathStyle(@Nullable Output<Boolean> usePathStyle) {
            $.usePathStyle = usePathStyle;
            return this;
        }

        public Builder usePathStyle(Boolean usePathStyle) {
            return usePathStyle(Output.of(usePathStyle));
        }

        public CacheFromS3Args build() {
            $.accessKeyId = Codegen.stringProp("accessKeyId").output().arg($.accessKeyId).env("AWS_ACCESS_KEY_ID").def("").getNullable();
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("CacheFromS3Args", "bucket");
            }
            $.region = Codegen.stringProp("region").output().arg($.region).env("AWS_REGION").def("").require();
            $.secretAccessKey = Codegen.stringProp("secretAccessKey").secret().arg($.secretAccessKey).env("AWS_SECRET_ACCESS_KEY").def("").getNullable();
            $.sessionToken = Codegen.stringProp("sessionToken").secret().arg($.sessionToken).env("AWS_SESSION_TOKEN").def("").getNullable();
            return $;
        }
    }

}
