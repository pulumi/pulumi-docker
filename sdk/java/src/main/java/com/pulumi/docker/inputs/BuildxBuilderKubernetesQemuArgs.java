// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BuildxBuilderKubernetesQemuArgs extends com.pulumi.resources.ResourceArgs {

    public static final BuildxBuilderKubernetesQemuArgs Empty = new BuildxBuilderKubernetesQemuArgs();

    /**
     * Sets the QEMU emulation image.
     * 
     */
    @Import(name="image")
    private @Nullable Output<String> image;

    /**
     * @return Sets the QEMU emulation image.
     * 
     */
    public Optional<Output<String>> image() {
        return Optional.ofNullable(this.image);
    }

    /**
     * Install QEMU emulation for multi-platform support.
     * 
     */
    @Import(name="install")
    private @Nullable Output<Boolean> install;

    /**
     * @return Install QEMU emulation for multi-platform support.
     * 
     */
    public Optional<Output<Boolean>> install() {
        return Optional.ofNullable(this.install);
    }

    private BuildxBuilderKubernetesQemuArgs() {}

    private BuildxBuilderKubernetesQemuArgs(BuildxBuilderKubernetesQemuArgs $) {
        this.image = $.image;
        this.install = $.install;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuildxBuilderKubernetesQemuArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuildxBuilderKubernetesQemuArgs $;

        public Builder() {
            $ = new BuildxBuilderKubernetesQemuArgs();
        }

        public Builder(BuildxBuilderKubernetesQemuArgs defaults) {
            $ = new BuildxBuilderKubernetesQemuArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param image Sets the QEMU emulation image.
         * 
         * @return builder
         * 
         */
        public Builder image(@Nullable Output<String> image) {
            $.image = image;
            return this;
        }

        /**
         * @param image Sets the QEMU emulation image.
         * 
         * @return builder
         * 
         */
        public Builder image(String image) {
            return image(Output.of(image));
        }

        /**
         * @param install Install QEMU emulation for multi-platform support.
         * 
         * @return builder
         * 
         */
        public Builder install(@Nullable Output<Boolean> install) {
            $.install = install;
            return this;
        }

        /**
         * @param install Install QEMU emulation for multi-platform support.
         * 
         * @return builder
         * 
         */
        public Builder install(Boolean install) {
            return install(Output.of(install));
        }

        public BuildxBuilderKubernetesQemuArgs build() {
            return $;
        }
    }

}
