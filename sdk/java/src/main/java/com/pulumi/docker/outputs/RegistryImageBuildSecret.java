// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RegistryImageBuildSecret {
    /**
     * @return Environment variable source of the secret
     * 
     */
    private @Nullable String env;
    /**
     * @return The ID of this resource.
     * 
     */
    private String id;
    /**
     * @return File source of the secret. Takes precedence over `env`
     * 
     */
    private @Nullable String src;

    private RegistryImageBuildSecret() {}
    /**
     * @return Environment variable source of the secret
     * 
     */
    public Optional<String> env() {
        return Optional.ofNullable(this.env);
    }
    /**
     * @return The ID of this resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return File source of the secret. Takes precedence over `env`
     * 
     */
    public Optional<String> src() {
        return Optional.ofNullable(this.src);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistryImageBuildSecret defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String env;
        private String id;
        private @Nullable String src;
        public Builder() {}
        public Builder(RegistryImageBuildSecret defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.env = defaults.env;
    	      this.id = defaults.id;
    	      this.src = defaults.src;
        }

        @CustomType.Setter
        public Builder env(@Nullable String env) {

            this.env = env;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("RegistryImageBuildSecret", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder src(@Nullable String src) {

            this.src = src;
            return this;
        }
        public RegistryImageBuildSecret build() {
            final var _resultValue = new RegistryImageBuildSecret();
            _resultValue.env = env;
            _resultValue.id = id;
            _resultValue.src = src;
            return _resultValue;
        }
    }
}
