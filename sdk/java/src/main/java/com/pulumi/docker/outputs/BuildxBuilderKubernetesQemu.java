// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BuildxBuilderKubernetesQemu {
    /**
     * @return Sets the QEMU emulation image.
     * 
     */
    private @Nullable String image;
    /**
     * @return Install QEMU emulation for multi-platform support.
     * 
     */
    private @Nullable Boolean install;

    private BuildxBuilderKubernetesQemu() {}
    /**
     * @return Sets the QEMU emulation image.
     * 
     */
    public Optional<String> image() {
        return Optional.ofNullable(this.image);
    }
    /**
     * @return Install QEMU emulation for multi-platform support.
     * 
     */
    public Optional<Boolean> install() {
        return Optional.ofNullable(this.install);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BuildxBuilderKubernetesQemu defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String image;
        private @Nullable Boolean install;
        public Builder() {}
        public Builder(BuildxBuilderKubernetesQemu defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.image = defaults.image;
    	      this.install = defaults.install;
        }

        @CustomType.Setter
        public Builder image(@Nullable String image) {

            this.image = image;
            return this;
        }
        @CustomType.Setter
        public Builder install(@Nullable Boolean install) {

            this.install = install;
            return this;
        }
        public BuildxBuilderKubernetesQemu build() {
            final var _resultValue = new BuildxBuilderKubernetesQemu();
            _resultValue.image = image;
            _resultValue.install = install;
            return _resultValue;
        }
    }
}
