// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceTaskSpecLogDriverArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceTaskSpecLogDriverArgs Empty = new ServiceTaskSpecLogDriverArgs();

    /**
     * A random name for the port
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return A random name for the port
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * A list of internal resolver variables to be modified (e.g., `debug`, `ndots:3`, etc.)
     * 
     */
    @Import(name="options")
    private @Nullable Output<Map<String,String>> options;

    /**
     * @return A list of internal resolver variables to be modified (e.g., `debug`, `ndots:3`, etc.)
     * 
     */
    public Optional<Output<Map<String,String>>> options() {
        return Optional.ofNullable(this.options);
    }

    private ServiceTaskSpecLogDriverArgs() {}

    private ServiceTaskSpecLogDriverArgs(ServiceTaskSpecLogDriverArgs $) {
        this.name = $.name;
        this.options = $.options;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceTaskSpecLogDriverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceTaskSpecLogDriverArgs $;

        public Builder() {
            $ = new ServiceTaskSpecLogDriverArgs();
        }

        public Builder(ServiceTaskSpecLogDriverArgs defaults) {
            $ = new ServiceTaskSpecLogDriverArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name A random name for the port
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A random name for the port
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param options A list of internal resolver variables to be modified (e.g., `debug`, `ndots:3`, etc.)
         * 
         * @return builder
         * 
         */
        public Builder options(@Nullable Output<Map<String,String>> options) {
            $.options = options;
            return this;
        }

        /**
         * @param options A list of internal resolver variables to be modified (e.g., `debug`, `ndots:3`, etc.)
         * 
         * @return builder
         * 
         */
        public Builder options(Map<String,String> options) {
            return options(Output.of(options));
        }

        public ServiceTaskSpecLogDriverArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ServiceTaskSpecLogDriverArgs", "name");
            }
            return $;
        }
    }

}
