// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class RegistryImageBuildUlimit {
    private Integer hard;
    /**
     * @return The name of the Docker image.
     * 
     */
    private String name;
    private Integer soft;

    private RegistryImageBuildUlimit() {}
    public Integer hard() {
        return this.hard;
    }
    /**
     * @return The name of the Docker image.
     * 
     */
    public String name() {
        return this.name;
    }
    public Integer soft() {
        return this.soft;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistryImageBuildUlimit defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer hard;
        private String name;
        private Integer soft;
        public Builder() {}
        public Builder(RegistryImageBuildUlimit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hard = defaults.hard;
    	      this.name = defaults.name;
    	      this.soft = defaults.soft;
        }

        @CustomType.Setter
        public Builder hard(Integer hard) {
            this.hard = Objects.requireNonNull(hard);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder soft(Integer soft) {
            this.soft = Objects.requireNonNull(soft);
            return this;
        }
        public RegistryImageBuildUlimit build() {
            final var o = new RegistryImageBuildUlimit();
            o.hard = hard;
            o.name = name;
            o.soft = soft;
            return o;
        }
    }
}
