// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.docker.inputs.ServiceEndpointSpecPortArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceEndpointSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceEndpointSpecArgs Empty = new ServiceEndpointSpecArgs();

    /**
     * The mode of resolution to use for internal load balancing between tasks
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return The mode of resolution to use for internal load balancing between tasks
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * List of exposed ports that this service is accessible on from the outside. Ports can only be provided if &#39;vip&#39; resolution mode is used
     * 
     */
    @Import(name="ports")
    private @Nullable Output<List<ServiceEndpointSpecPortArgs>> ports;

    /**
     * @return List of exposed ports that this service is accessible on from the outside. Ports can only be provided if &#39;vip&#39; resolution mode is used
     * 
     */
    public Optional<Output<List<ServiceEndpointSpecPortArgs>>> ports() {
        return Optional.ofNullable(this.ports);
    }

    private ServiceEndpointSpecArgs() {}

    private ServiceEndpointSpecArgs(ServiceEndpointSpecArgs $) {
        this.mode = $.mode;
        this.ports = $.ports;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceEndpointSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceEndpointSpecArgs $;

        public Builder() {
            $ = new ServiceEndpointSpecArgs();
        }

        public Builder(ServiceEndpointSpecArgs defaults) {
            $ = new ServiceEndpointSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mode The mode of resolution to use for internal load balancing between tasks
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode The mode of resolution to use for internal load balancing between tasks
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param ports List of exposed ports that this service is accessible on from the outside. Ports can only be provided if &#39;vip&#39; resolution mode is used
         * 
         * @return builder
         * 
         */
        public Builder ports(@Nullable Output<List<ServiceEndpointSpecPortArgs>> ports) {
            $.ports = ports;
            return this;
        }

        /**
         * @param ports List of exposed ports that this service is accessible on from the outside. Ports can only be provided if &#39;vip&#39; resolution mode is used
         * 
         * @return builder
         * 
         */
        public Builder ports(List<ServiceEndpointSpecPortArgs> ports) {
            return ports(Output.of(ports));
        }

        /**
         * @param ports List of exposed ports that this service is accessible on from the outside. Ports can only be provided if &#39;vip&#39; resolution mode is used
         * 
         * @return builder
         * 
         */
        public Builder ports(ServiceEndpointSpecPortArgs... ports) {
            return ports(List.of(ports));
        }

        public ServiceEndpointSpecArgs build() {
            return $;
        }
    }

}
