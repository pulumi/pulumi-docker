// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.docker.outputs.ServiceTaskSpecContainerSpecMountBindOptions;
import com.pulumi.docker.outputs.ServiceTaskSpecContainerSpecMountTmpfsOptions;
import com.pulumi.docker.outputs.ServiceTaskSpecContainerSpecMountVolumeOptions;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceTaskSpecContainerSpecMount {
    private @Nullable ServiceTaskSpecContainerSpecMountBindOptions bindOptions;
    private @Nullable Boolean readOnly;
    private @Nullable String source;
    private String target;
    private @Nullable ServiceTaskSpecContainerSpecMountTmpfsOptions tmpfsOptions;
    private String type;
    private @Nullable ServiceTaskSpecContainerSpecMountVolumeOptions volumeOptions;

    private ServiceTaskSpecContainerSpecMount() {}
    public Optional<ServiceTaskSpecContainerSpecMountBindOptions> bindOptions() {
        return Optional.ofNullable(this.bindOptions);
    }
    public Optional<Boolean> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }
    public String target() {
        return this.target;
    }
    public Optional<ServiceTaskSpecContainerSpecMountTmpfsOptions> tmpfsOptions() {
        return Optional.ofNullable(this.tmpfsOptions);
    }
    public String type() {
        return this.type;
    }
    public Optional<ServiceTaskSpecContainerSpecMountVolumeOptions> volumeOptions() {
        return Optional.ofNullable(this.volumeOptions);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceTaskSpecContainerSpecMount defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ServiceTaskSpecContainerSpecMountBindOptions bindOptions;
        private @Nullable Boolean readOnly;
        private @Nullable String source;
        private String target;
        private @Nullable ServiceTaskSpecContainerSpecMountTmpfsOptions tmpfsOptions;
        private String type;
        private @Nullable ServiceTaskSpecContainerSpecMountVolumeOptions volumeOptions;
        public Builder() {}
        public Builder(ServiceTaskSpecContainerSpecMount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bindOptions = defaults.bindOptions;
    	      this.readOnly = defaults.readOnly;
    	      this.source = defaults.source;
    	      this.target = defaults.target;
    	      this.tmpfsOptions = defaults.tmpfsOptions;
    	      this.type = defaults.type;
    	      this.volumeOptions = defaults.volumeOptions;
        }

        @CustomType.Setter
        public Builder bindOptions(@Nullable ServiceTaskSpecContainerSpecMountBindOptions bindOptions) {

            this.bindOptions = bindOptions;
            return this;
        }
        @CustomType.Setter
        public Builder readOnly(@Nullable Boolean readOnly) {

            this.readOnly = readOnly;
            return this;
        }
        @CustomType.Setter
        public Builder source(@Nullable String source) {

            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder target(String target) {
            if (target == null) {
              throw new MissingRequiredPropertyException("ServiceTaskSpecContainerSpecMount", "target");
            }
            this.target = target;
            return this;
        }
        @CustomType.Setter
        public Builder tmpfsOptions(@Nullable ServiceTaskSpecContainerSpecMountTmpfsOptions tmpfsOptions) {

            this.tmpfsOptions = tmpfsOptions;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("ServiceTaskSpecContainerSpecMount", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder volumeOptions(@Nullable ServiceTaskSpecContainerSpecMountVolumeOptions volumeOptions) {

            this.volumeOptions = volumeOptions;
            return this;
        }
        public ServiceTaskSpecContainerSpecMount build() {
            final var _resultValue = new ServiceTaskSpecContainerSpecMount();
            _resultValue.bindOptions = bindOptions;
            _resultValue.readOnly = readOnly;
            _resultValue.source = source;
            _resultValue.target = target;
            _resultValue.tmpfsOptions = tmpfsOptions;
            _resultValue.type = type;
            _resultValue.volumeOptions = volumeOptions;
            return _resultValue;
        }
    }
}
