// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("docker");

/**
 * PEM-encoded content of Docker host CA certificate
 */
export declare const caMaterial: string | undefined;
Object.defineProperty(exports, "caMaterial", {
    get() {
        return __config.get("caMaterial");
    },
    enumerable: true,
});

/**
 * PEM-encoded content of Docker client certificate
 */
export declare const certMaterial: string | undefined;
Object.defineProperty(exports, "certMaterial", {
    get() {
        return __config.get("certMaterial");
    },
    enumerable: true,
});

/**
 * Path to directory with Docker TLS config
 */
export declare const certPath: string | undefined;
Object.defineProperty(exports, "certPath", {
    get() {
        return __config.get("certPath");
    },
    enumerable: true,
});

/**
 * The Docker daemon address
 */
export declare const host: string;
Object.defineProperty(exports, "host", {
    get() {
        return __config.get("host") ?? (utilities.getEnv("DOCKER_HOST") || "unix:///var/run/docker.sock");
    },
    enumerable: true,
});

/**
 * PEM-encoded content of Docker client private key
 */
export declare const keyMaterial: string | undefined;
Object.defineProperty(exports, "keyMaterial", {
    get() {
        return __config.get("keyMaterial");
    },
    enumerable: true,
});

export declare const registryAuth: outputs.config.RegistryAuth[] | undefined;
Object.defineProperty(exports, "registryAuth", {
    get() {
        return __config.getObject<outputs.config.RegistryAuth[]>("registryAuth");
    },
    enumerable: true,
});

/**
 * Additional SSH option flags to be appended when using `ssh://` protocol
 */
export declare const sshOpts: string[] | undefined;
Object.defineProperty(exports, "sshOpts", {
    get() {
        return __config.getObject<string[]>("sshOpts");
    },
    enumerable: true,
});

