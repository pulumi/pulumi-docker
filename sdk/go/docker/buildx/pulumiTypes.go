// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package buildx

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-docker/sdk/v4/go/docker/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type Manifest struct {
	Digest   string   `pulumi:"digest"`
	Platform Platform `pulumi:"platform"`
	// The manifest's ref
	Ref  string   `pulumi:"ref"`
	Size int      `pulumi:"size"`
	Urls []string `pulumi:"urls"`
}

// ManifestInput is an input type that accepts ManifestArgs and ManifestOutput values.
// You can construct a concrete instance of `ManifestInput` via:
//
//	ManifestArgs{...}
type ManifestInput interface {
	pulumi.Input

	ToManifestOutput() ManifestOutput
	ToManifestOutputWithContext(context.Context) ManifestOutput
}

type ManifestArgs struct {
	Digest   pulumi.StringInput `pulumi:"digest"`
	Platform PlatformInput      `pulumi:"platform"`
	// The manifest's ref
	Ref  pulumi.StringInput      `pulumi:"ref"`
	Size pulumi.IntInput         `pulumi:"size"`
	Urls pulumi.StringArrayInput `pulumi:"urls"`
}

func (ManifestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Manifest)(nil)).Elem()
}

func (i ManifestArgs) ToManifestOutput() ManifestOutput {
	return i.ToManifestOutputWithContext(context.Background())
}

func (i ManifestArgs) ToManifestOutputWithContext(ctx context.Context) ManifestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManifestOutput)
}

// ManifestArrayInput is an input type that accepts ManifestArray and ManifestArrayOutput values.
// You can construct a concrete instance of `ManifestArrayInput` via:
//
//	ManifestArray{ ManifestArgs{...} }
type ManifestArrayInput interface {
	pulumi.Input

	ToManifestArrayOutput() ManifestArrayOutput
	ToManifestArrayOutputWithContext(context.Context) ManifestArrayOutput
}

type ManifestArray []ManifestInput

func (ManifestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Manifest)(nil)).Elem()
}

func (i ManifestArray) ToManifestArrayOutput() ManifestArrayOutput {
	return i.ToManifestArrayOutputWithContext(context.Background())
}

func (i ManifestArray) ToManifestArrayOutputWithContext(ctx context.Context) ManifestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManifestArrayOutput)
}

type ManifestOutput struct{ *pulumi.OutputState }

func (ManifestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Manifest)(nil)).Elem()
}

func (o ManifestOutput) ToManifestOutput() ManifestOutput {
	return o
}

func (o ManifestOutput) ToManifestOutputWithContext(ctx context.Context) ManifestOutput {
	return o
}

func (o ManifestOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v Manifest) string { return v.Digest }).(pulumi.StringOutput)
}

func (o ManifestOutput) Platform() PlatformOutput {
	return o.ApplyT(func(v Manifest) Platform { return v.Platform }).(PlatformOutput)
}

// The manifest's ref
func (o ManifestOutput) Ref() pulumi.StringOutput {
	return o.ApplyT(func(v Manifest) string { return v.Ref }).(pulumi.StringOutput)
}

func (o ManifestOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v Manifest) int { return v.Size }).(pulumi.IntOutput)
}

func (o ManifestOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Manifest) []string { return v.Urls }).(pulumi.StringArrayOutput)
}

type ManifestArrayOutput struct{ *pulumi.OutputState }

func (ManifestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Manifest)(nil)).Elem()
}

func (o ManifestArrayOutput) ToManifestArrayOutput() ManifestArrayOutput {
	return o
}

func (o ManifestArrayOutput) ToManifestArrayOutputWithContext(ctx context.Context) ManifestArrayOutput {
	return o
}

func (o ManifestArrayOutput) Index(i pulumi.IntInput) ManifestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Manifest {
		return vs[0].([]Manifest)[vs[1].(int)]
	}).(ManifestOutput)
}

type Platform struct {
	Architecture string `pulumi:"architecture"`
	Os           string `pulumi:"os"`
}

// PlatformInput is an input type that accepts PlatformArgs and PlatformOutput values.
// You can construct a concrete instance of `PlatformInput` via:
//
//	PlatformArgs{...}
type PlatformInput interface {
	pulumi.Input

	ToPlatformOutput() PlatformOutput
	ToPlatformOutputWithContext(context.Context) PlatformOutput
}

type PlatformArgs struct {
	Architecture pulumi.StringInput `pulumi:"architecture"`
	Os           pulumi.StringInput `pulumi:"os"`
}

func (PlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Platform)(nil)).Elem()
}

func (i PlatformArgs) ToPlatformOutput() PlatformOutput {
	return i.ToPlatformOutputWithContext(context.Background())
}

func (i PlatformArgs) ToPlatformOutputWithContext(ctx context.Context) PlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformOutput)
}

type PlatformOutput struct{ *pulumi.OutputState }

func (PlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Platform)(nil)).Elem()
}

func (o PlatformOutput) ToPlatformOutput() PlatformOutput {
	return o
}

func (o PlatformOutput) ToPlatformOutputWithContext(ctx context.Context) PlatformOutput {
	return o
}

func (o PlatformOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v Platform) string { return v.Architecture }).(pulumi.StringOutput)
}

func (o PlatformOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v Platform) string { return v.Os }).(pulumi.StringOutput)
}

type ProviderRegistryAuth struct {
	Address  string  `pulumi:"address"`
	Password *string `pulumi:"password"`
	Username *string `pulumi:"username"`
}

// ProviderRegistryAuthInput is an input type that accepts ProviderRegistryAuthArgs and ProviderRegistryAuthOutput values.
// You can construct a concrete instance of `ProviderRegistryAuthInput` via:
//
//	ProviderRegistryAuthArgs{...}
type ProviderRegistryAuthInput interface {
	pulumi.Input

	ToProviderRegistryAuthOutput() ProviderRegistryAuthOutput
	ToProviderRegistryAuthOutputWithContext(context.Context) ProviderRegistryAuthOutput
}

type ProviderRegistryAuthArgs struct {
	Address  pulumi.StringInput    `pulumi:"address"`
	Password pulumi.StringPtrInput `pulumi:"password"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ProviderRegistryAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderRegistryAuth)(nil)).Elem()
}

func (i ProviderRegistryAuthArgs) ToProviderRegistryAuthOutput() ProviderRegistryAuthOutput {
	return i.ToProviderRegistryAuthOutputWithContext(context.Background())
}

func (i ProviderRegistryAuthArgs) ToProviderRegistryAuthOutputWithContext(ctx context.Context) ProviderRegistryAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderRegistryAuthOutput)
}

type ProviderRegistryAuthOutput struct{ *pulumi.OutputState }

func (ProviderRegistryAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderRegistryAuth)(nil)).Elem()
}

func (o ProviderRegistryAuthOutput) ToProviderRegistryAuthOutput() ProviderRegistryAuthOutput {
	return o
}

func (o ProviderRegistryAuthOutput) ToProviderRegistryAuthOutputWithContext(ctx context.Context) ProviderRegistryAuthOutput {
	return o
}

func (o ProviderRegistryAuthOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderRegistryAuth) string { return v.Address }).(pulumi.StringOutput)
}

func (o ProviderRegistryAuthOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderRegistryAuth) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ProviderRegistryAuthOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderRegistryAuth) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManifestInput)(nil)).Elem(), ManifestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManifestArrayInput)(nil)).Elem(), ManifestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlatformInput)(nil)).Elem(), PlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderRegistryAuthInput)(nil)).Elem(), ProviderRegistryAuthArgs{})
	pulumi.RegisterOutputType(ManifestOutput{})
	pulumi.RegisterOutputType(ManifestArrayOutput{})
	pulumi.RegisterOutputType(PlatformOutput{})
	pulumi.RegisterOutputType(ProviderRegistryAuthOutput{})
}
