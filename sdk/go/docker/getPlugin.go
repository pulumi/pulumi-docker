// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package docker

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Reads the local Docker plugin. The plugin must be installed locally.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-docker/sdk/v2/go/docker"
// 	"github.com/pulumi/pulumi-docker/sdk/v2/go/docker/"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "sample-volume-plugin:latest"
// 		_, err := docker.LookupPlugin(ctx, &docker.LookupPluginArgs{
// 			Alias: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupPlugin(ctx *pulumi.Context, args *LookupPluginArgs, opts ...pulumi.InvokeOption) (*LookupPluginResult, error) {
	var rv LookupPluginResult
	err := ctx.Invoke("docker:index/getPlugin:getPlugin", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPlugin.
type LookupPluginArgs struct {
	// The alias of the Docker plugin.
	Alias *string `pulumi:"alias"`
	// The Docker plugin ID.
	Id *string `pulumi:"id"`
}

// A collection of values returned by getPlugin.
type LookupPluginResult struct {
	Alias   *string  `pulumi:"alias"`
	Enabled bool     `pulumi:"enabled"`
	Envs    []string `pulumi:"envs"`
	// (Optional, boolean) If true, grant all permissions necessary to run the plugin.
	GrantAllPermissions bool    `pulumi:"grantAllPermissions"`
	Id                  *string `pulumi:"id"`
	// (Optional, string, Forces new resource) The plugin reference.
	PluginReference string `pulumi:"pluginReference"`
}
