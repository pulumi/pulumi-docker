// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package docker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-docker/sdk/v4/go/docker/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// `getLogs` provides logs from specific container
func GetLogs(ctx *pulumi.Context, args *GetLogsArgs, opts ...pulumi.InvokeOption) (*GetLogsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLogsResult
	err := ctx.Invoke("docker:index/getLogs:getLogs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogs.
type GetLogsArgs struct {
	Details *bool `pulumi:"details"`
	// Discard headers that docker appends to each log entry
	DiscardHeaders *bool `pulumi:"discardHeaders"`
	Follow         *bool `pulumi:"follow"`
	// If true populate computed value `logsListString`
	LogsListStringEnabled *bool `pulumi:"logsListStringEnabled"`
	// The name of the Docker Container
	Name       string  `pulumi:"name"`
	ShowStderr *bool   `pulumi:"showStderr"`
	ShowStdout *bool   `pulumi:"showStdout"`
	Since      *string `pulumi:"since"`
	Tail       *string `pulumi:"tail"`
	Timestamps *bool   `pulumi:"timestamps"`
	Until      *string `pulumi:"until"`
}

// A collection of values returned by getLogs.
type GetLogsResult struct {
	Details *bool `pulumi:"details"`
	// Discard headers that docker appends to each log entry
	DiscardHeaders *bool `pulumi:"discardHeaders"`
	Follow         *bool `pulumi:"follow"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// If true populate computed value `logsListString`
	LogsListStringEnabled *bool `pulumi:"logsListStringEnabled"`
	// List of container logs, each element is a line.
	LogsListStrings []string `pulumi:"logsListStrings"`
	// The name of the Docker Container
	Name       string  `pulumi:"name"`
	ShowStderr *bool   `pulumi:"showStderr"`
	ShowStdout *bool   `pulumi:"showStdout"`
	Since      *string `pulumi:"since"`
	Tail       *string `pulumi:"tail"`
	Timestamps *bool   `pulumi:"timestamps"`
	Until      *string `pulumi:"until"`
}

func GetLogsOutput(ctx *pulumi.Context, args GetLogsOutputArgs, opts ...pulumi.InvokeOption) GetLogsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLogsResult, error) {
			args := v.(GetLogsArgs)
			r, err := GetLogs(ctx, &args, opts...)
			var s GetLogsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLogsResultOutput)
}

// A collection of arguments for invoking getLogs.
type GetLogsOutputArgs struct {
	Details pulumi.BoolPtrInput `pulumi:"details"`
	// Discard headers that docker appends to each log entry
	DiscardHeaders pulumi.BoolPtrInput `pulumi:"discardHeaders"`
	Follow         pulumi.BoolPtrInput `pulumi:"follow"`
	// If true populate computed value `logsListString`
	LogsListStringEnabled pulumi.BoolPtrInput `pulumi:"logsListStringEnabled"`
	// The name of the Docker Container
	Name       pulumi.StringInput    `pulumi:"name"`
	ShowStderr pulumi.BoolPtrInput   `pulumi:"showStderr"`
	ShowStdout pulumi.BoolPtrInput   `pulumi:"showStdout"`
	Since      pulumi.StringPtrInput `pulumi:"since"`
	Tail       pulumi.StringPtrInput `pulumi:"tail"`
	Timestamps pulumi.BoolPtrInput   `pulumi:"timestamps"`
	Until      pulumi.StringPtrInput `pulumi:"until"`
}

func (GetLogsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsArgs)(nil)).Elem()
}

// A collection of values returned by getLogs.
type GetLogsResultOutput struct{ *pulumi.OutputState }

func (GetLogsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsResult)(nil)).Elem()
}

func (o GetLogsResultOutput) ToGetLogsResultOutput() GetLogsResultOutput {
	return o
}

func (o GetLogsResultOutput) ToGetLogsResultOutputWithContext(ctx context.Context) GetLogsResultOutput {
	return o
}

func (o GetLogsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetLogsResult] {
	return pulumix.Output[GetLogsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetLogsResultOutput) Details() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLogsResult) *bool { return v.Details }).(pulumi.BoolPtrOutput)
}

// Discard headers that docker appends to each log entry
func (o GetLogsResultOutput) DiscardHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLogsResult) *bool { return v.DiscardHeaders }).(pulumi.BoolPtrOutput)
}

func (o GetLogsResultOutput) Follow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLogsResult) *bool { return v.Follow }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLogsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsResult) string { return v.Id }).(pulumi.StringOutput)
}

// If true populate computed value `logsListString`
func (o GetLogsResultOutput) LogsListStringEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLogsResult) *bool { return v.LogsListStringEnabled }).(pulumi.BoolPtrOutput)
}

// List of container logs, each element is a line.
func (o GetLogsResultOutput) LogsListStrings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLogsResult) []string { return v.LogsListStrings }).(pulumi.StringArrayOutput)
}

// The name of the Docker Container
func (o GetLogsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLogsResultOutput) ShowStderr() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLogsResult) *bool { return v.ShowStderr }).(pulumi.BoolPtrOutput)
}

func (o GetLogsResultOutput) ShowStdout() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLogsResult) *bool { return v.ShowStdout }).(pulumi.BoolPtrOutput)
}

func (o GetLogsResultOutput) Since() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogsResult) *string { return v.Since }).(pulumi.StringPtrOutput)
}

func (o GetLogsResultOutput) Tail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogsResult) *string { return v.Tail }).(pulumi.StringPtrOutput)
}

func (o GetLogsResultOutput) Timestamps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLogsResult) *bool { return v.Timestamps }).(pulumi.BoolPtrOutput)
}

func (o GetLogsResultOutput) Until() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogsResult) *string { return v.Until }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLogsResultOutput{})
}
