// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package docker

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Pulls a Docker image to a given Docker host from a Docker Registry.
// 
// This resource will *not* pull new layers of the image automatically unless used in
// conjunction with [`docker_registry_image`](https://www.terraform.io/docs/providers/docker/d/registry_image.html)
// data source to update the `pull_triggers` field.
type RemoteImage struct {
	s *pulumi.ResourceState
}

// NewRemoteImage registers a new resource with the given unique name, arguments, and options.
func NewRemoteImage(ctx *pulumi.Context,
	name string, args *RemoteImageArgs, opts ...pulumi.ResourceOpt) (*RemoteImage, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["keepLocally"] = nil
		inputs["name"] = nil
		inputs["pullTrigger"] = nil
		inputs["pullTriggers"] = nil
	} else {
		inputs["keepLocally"] = args.KeepLocally
		inputs["name"] = args.Name
		inputs["pullTrigger"] = args.PullTrigger
		inputs["pullTriggers"] = args.PullTriggers
	}
	inputs["latest"] = nil
	s, err := ctx.RegisterResource("docker:index/remoteImage:RemoteImage", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RemoteImage{s: s}, nil
}

// GetRemoteImage gets an existing RemoteImage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRemoteImage(ctx *pulumi.Context,
	name string, id pulumi.ID, state *RemoteImageState, opts ...pulumi.ResourceOpt) (*RemoteImage, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["keepLocally"] = state.KeepLocally
		inputs["latest"] = state.Latest
		inputs["name"] = state.Name
		inputs["pullTrigger"] = state.PullTrigger
		inputs["pullTriggers"] = state.PullTriggers
	}
	s, err := ctx.ReadResource("docker:index/remoteImage:RemoteImage", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RemoteImage{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *RemoteImage) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *RemoteImage) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// If true, then the Docker image won't be
// deleted on destroy operation. If this is false, it will delete the image from
// the docker local storage on destroy operation.
func (r *RemoteImage) KeepLocally() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["keepLocally"])
}

func (r *RemoteImage) Latest() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["latest"])
}

// The name of the Docker image, including any tags or SHA256 repo digests.
func (r *RemoteImage) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// **Deprecated**, use `pull_triggers` instead.
func (r *RemoteImage) PullTrigger() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["pullTrigger"])
}

// List of values which cause an
// image pull when changed. This is used to store the image digest from the
// registry when using the `docker_registry_image` [data source](https://www.terraform.io/docs/providers/docker/d/registry_image.html)
// to trigger an image update.
func (r *RemoteImage) PullTriggers() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["pullTriggers"])
}

// Input properties used for looking up and filtering RemoteImage resources.
type RemoteImageState struct {
	// If true, then the Docker image won't be
	// deleted on destroy operation. If this is false, it will delete the image from
	// the docker local storage on destroy operation.
	KeepLocally interface{}
	Latest interface{}
	// The name of the Docker image, including any tags or SHA256 repo digests.
	Name interface{}
	// **Deprecated**, use `pull_triggers` instead.
	PullTrigger interface{}
	// List of values which cause an
	// image pull when changed. This is used to store the image digest from the
	// registry when using the `docker_registry_image` [data source](https://www.terraform.io/docs/providers/docker/d/registry_image.html)
	// to trigger an image update.
	PullTriggers interface{}
}

// The set of arguments for constructing a RemoteImage resource.
type RemoteImageArgs struct {
	// If true, then the Docker image won't be
	// deleted on destroy operation. If this is false, it will delete the image from
	// the docker local storage on destroy operation.
	KeepLocally interface{}
	// The name of the Docker image, including any tags or SHA256 repo digests.
	Name interface{}
	// **Deprecated**, use `pull_triggers` instead.
	PullTrigger interface{}
	// List of values which cause an
	// image pull when changed. This is used to store the image digest from the
	// registry when using the `docker_registry_image` [data source](https://www.terraform.io/docs/providers/docker/d/registry_image.html)
	// to trigger an image update.
	PullTriggers interface{}
}
