// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package docker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ContainerCapabilities struct {
	// list of linux capabilities to add.
	Adds []string `pulumi:"adds"`
	// list of linux capabilities to drop.
	Drops []string `pulumi:"drops"`
}

type ContainerCapabilitiesInput interface {
	pulumi.Input

	ToContainerCapabilitiesOutput() ContainerCapabilitiesOutput
	ToContainerCapabilitiesOutputWithContext(context.Context) ContainerCapabilitiesOutput
}

type ContainerCapabilitiesArgs struct {
	// list of linux capabilities to add.
	Adds pulumi.StringArrayInput `pulumi:"adds"`
	// list of linux capabilities to drop.
	Drops pulumi.StringArrayInput `pulumi:"drops"`
}

func (ContainerCapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerCapabilities)(nil)).Elem()
}

func (i ContainerCapabilitiesArgs) ToContainerCapabilitiesOutput() ContainerCapabilitiesOutput {
	return i.ToContainerCapabilitiesOutputWithContext(context.Background())
}

func (i ContainerCapabilitiesArgs) ToContainerCapabilitiesOutputWithContext(ctx context.Context) ContainerCapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerCapabilitiesOutput)
}

func (i ContainerCapabilitiesArgs) ToContainerCapabilitiesPtrOutput() ContainerCapabilitiesPtrOutput {
	return i.ToContainerCapabilitiesPtrOutputWithContext(context.Background())
}

func (i ContainerCapabilitiesArgs) ToContainerCapabilitiesPtrOutputWithContext(ctx context.Context) ContainerCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerCapabilitiesOutput).ToContainerCapabilitiesPtrOutputWithContext(ctx)
}

type ContainerCapabilitiesPtrInput interface {
	pulumi.Input

	ToContainerCapabilitiesPtrOutput() ContainerCapabilitiesPtrOutput
	ToContainerCapabilitiesPtrOutputWithContext(context.Context) ContainerCapabilitiesPtrOutput
}

type containerCapabilitiesPtrType ContainerCapabilitiesArgs

func ContainerCapabilitiesPtr(v *ContainerCapabilitiesArgs) ContainerCapabilitiesPtrInput {	return (*containerCapabilitiesPtrType)(v)
}

func (*containerCapabilitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerCapabilities)(nil)).Elem()
}

func (i *containerCapabilitiesPtrType) ToContainerCapabilitiesPtrOutput() ContainerCapabilitiesPtrOutput {
	return i.ToContainerCapabilitiesPtrOutputWithContext(context.Background())
}

func (i *containerCapabilitiesPtrType) ToContainerCapabilitiesPtrOutputWithContext(ctx context.Context) ContainerCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerCapabilitiesPtrOutput)
}

type ContainerCapabilitiesOutput struct { *pulumi.OutputState }

func (ContainerCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerCapabilities)(nil)).Elem()
}

func (o ContainerCapabilitiesOutput) ToContainerCapabilitiesOutput() ContainerCapabilitiesOutput {
	return o
}

func (o ContainerCapabilitiesOutput) ToContainerCapabilitiesOutputWithContext(ctx context.Context) ContainerCapabilitiesOutput {
	return o
}

func (o ContainerCapabilitiesOutput) ToContainerCapabilitiesPtrOutput() ContainerCapabilitiesPtrOutput {
	return o.ToContainerCapabilitiesPtrOutputWithContext(context.Background())
}

func (o ContainerCapabilitiesOutput) ToContainerCapabilitiesPtrOutputWithContext(ctx context.Context) ContainerCapabilitiesPtrOutput {
	return o.ApplyT(func(v ContainerCapabilities) *ContainerCapabilities {
		return &v
	}).(ContainerCapabilitiesPtrOutput)
}
// list of linux capabilities to add.
func (o ContainerCapabilitiesOutput) Adds() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ContainerCapabilities) []string { return v.Adds }).(pulumi.StringArrayOutput)
}

// list of linux capabilities to drop.
func (o ContainerCapabilitiesOutput) Drops() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ContainerCapabilities) []string { return v.Drops }).(pulumi.StringArrayOutput)
}

type ContainerCapabilitiesPtrOutput struct { *pulumi.OutputState}

func (ContainerCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerCapabilities)(nil)).Elem()
}

func (o ContainerCapabilitiesPtrOutput) ToContainerCapabilitiesPtrOutput() ContainerCapabilitiesPtrOutput {
	return o
}

func (o ContainerCapabilitiesPtrOutput) ToContainerCapabilitiesPtrOutputWithContext(ctx context.Context) ContainerCapabilitiesPtrOutput {
	return o
}

func (o ContainerCapabilitiesPtrOutput) Elem() ContainerCapabilitiesOutput {
	return o.ApplyT(func (v *ContainerCapabilities) ContainerCapabilities { return *v }).(ContainerCapabilitiesOutput)
}

// list of linux capabilities to add.
func (o ContainerCapabilitiesPtrOutput) Adds() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ContainerCapabilities) []string { return v.Adds }).(pulumi.StringArrayOutput)
}

// list of linux capabilities to drop.
func (o ContainerCapabilitiesPtrOutput) Drops() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ContainerCapabilities) []string { return v.Drops }).(pulumi.StringArrayOutput)
}

type ContainerDevice struct {
	// The path in the container where the
	// device will be binded.
	ContainerPath *string `pulumi:"containerPath"`
	// The path on the host where the device
	// is located.
	HostPath string `pulumi:"hostPath"`
	// The cgroup permissions given to the
	// container to access the device.
	// Defaults to `rwm`.
	Permissions *string `pulumi:"permissions"`
}

type ContainerDeviceInput interface {
	pulumi.Input

	ToContainerDeviceOutput() ContainerDeviceOutput
	ToContainerDeviceOutputWithContext(context.Context) ContainerDeviceOutput
}

type ContainerDeviceArgs struct {
	// The path in the container where the
	// device will be binded.
	ContainerPath pulumi.StringPtrInput `pulumi:"containerPath"`
	// The path on the host where the device
	// is located.
	HostPath pulumi.StringInput `pulumi:"hostPath"`
	// The cgroup permissions given to the
	// container to access the device.
	// Defaults to `rwm`.
	Permissions pulumi.StringPtrInput `pulumi:"permissions"`
}

func (ContainerDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerDevice)(nil)).Elem()
}

func (i ContainerDeviceArgs) ToContainerDeviceOutput() ContainerDeviceOutput {
	return i.ToContainerDeviceOutputWithContext(context.Background())
}

func (i ContainerDeviceArgs) ToContainerDeviceOutputWithContext(ctx context.Context) ContainerDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerDeviceOutput)
}

type ContainerDeviceArrayInput interface {
	pulumi.Input

	ToContainerDeviceArrayOutput() ContainerDeviceArrayOutput
	ToContainerDeviceArrayOutputWithContext(context.Context) ContainerDeviceArrayOutput
}

type ContainerDeviceArray []ContainerDeviceInput

func (ContainerDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerDevice)(nil)).Elem()
}

func (i ContainerDeviceArray) ToContainerDeviceArrayOutput() ContainerDeviceArrayOutput {
	return i.ToContainerDeviceArrayOutputWithContext(context.Background())
}

func (i ContainerDeviceArray) ToContainerDeviceArrayOutputWithContext(ctx context.Context) ContainerDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerDeviceArrayOutput)
}

type ContainerDeviceOutput struct { *pulumi.OutputState }

func (ContainerDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerDevice)(nil)).Elem()
}

func (o ContainerDeviceOutput) ToContainerDeviceOutput() ContainerDeviceOutput {
	return o
}

func (o ContainerDeviceOutput) ToContainerDeviceOutputWithContext(ctx context.Context) ContainerDeviceOutput {
	return o
}

// The path in the container where the
// device will be binded.
func (o ContainerDeviceOutput) ContainerPath() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerDevice) *string { return v.ContainerPath }).(pulumi.StringPtrOutput)
}

// The path on the host where the device
// is located.
func (o ContainerDeviceOutput) HostPath() pulumi.StringOutput {
	return o.ApplyT(func (v ContainerDevice) string { return v.HostPath }).(pulumi.StringOutput)
}

// The cgroup permissions given to the
// container to access the device.
// Defaults to `rwm`.
func (o ContainerDeviceOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerDevice) *string { return v.Permissions }).(pulumi.StringPtrOutput)
}

type ContainerDeviceArrayOutput struct { *pulumi.OutputState}

func (ContainerDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerDevice)(nil)).Elem()
}

func (o ContainerDeviceArrayOutput) ToContainerDeviceArrayOutput() ContainerDeviceArrayOutput {
	return o
}

func (o ContainerDeviceArrayOutput) ToContainerDeviceArrayOutputWithContext(ctx context.Context) ContainerDeviceArrayOutput {
	return o
}

func (o ContainerDeviceArrayOutput) Index(i pulumi.IntInput) ContainerDeviceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ContainerDevice {
		return vs[0].([]ContainerDevice)[vs[1].(int)]
	}).(ContainerDeviceOutput)
}

type ContainerHealthcheck struct {
	Interval *string `pulumi:"interval"`
	Retries *int `pulumi:"retries"`
	StartPeriod *string `pulumi:"startPeriod"`
	Tests []string `pulumi:"tests"`
	Timeout *string `pulumi:"timeout"`
}

type ContainerHealthcheckInput interface {
	pulumi.Input

	ToContainerHealthcheckOutput() ContainerHealthcheckOutput
	ToContainerHealthcheckOutputWithContext(context.Context) ContainerHealthcheckOutput
}

type ContainerHealthcheckArgs struct {
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	Retries pulumi.IntPtrInput `pulumi:"retries"`
	StartPeriod pulumi.StringPtrInput `pulumi:"startPeriod"`
	Tests pulumi.StringArrayInput `pulumi:"tests"`
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (ContainerHealthcheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthcheck)(nil)).Elem()
}

func (i ContainerHealthcheckArgs) ToContainerHealthcheckOutput() ContainerHealthcheckOutput {
	return i.ToContainerHealthcheckOutputWithContext(context.Background())
}

func (i ContainerHealthcheckArgs) ToContainerHealthcheckOutputWithContext(ctx context.Context) ContainerHealthcheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthcheckOutput)
}

func (i ContainerHealthcheckArgs) ToContainerHealthcheckPtrOutput() ContainerHealthcheckPtrOutput {
	return i.ToContainerHealthcheckPtrOutputWithContext(context.Background())
}

func (i ContainerHealthcheckArgs) ToContainerHealthcheckPtrOutputWithContext(ctx context.Context) ContainerHealthcheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthcheckOutput).ToContainerHealthcheckPtrOutputWithContext(ctx)
}

type ContainerHealthcheckPtrInput interface {
	pulumi.Input

	ToContainerHealthcheckPtrOutput() ContainerHealthcheckPtrOutput
	ToContainerHealthcheckPtrOutputWithContext(context.Context) ContainerHealthcheckPtrOutput
}

type containerHealthcheckPtrType ContainerHealthcheckArgs

func ContainerHealthcheckPtr(v *ContainerHealthcheckArgs) ContainerHealthcheckPtrInput {	return (*containerHealthcheckPtrType)(v)
}

func (*containerHealthcheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthcheck)(nil)).Elem()
}

func (i *containerHealthcheckPtrType) ToContainerHealthcheckPtrOutput() ContainerHealthcheckPtrOutput {
	return i.ToContainerHealthcheckPtrOutputWithContext(context.Background())
}

func (i *containerHealthcheckPtrType) ToContainerHealthcheckPtrOutputWithContext(ctx context.Context) ContainerHealthcheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthcheckPtrOutput)
}

type ContainerHealthcheckOutput struct { *pulumi.OutputState }

func (ContainerHealthcheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthcheck)(nil)).Elem()
}

func (o ContainerHealthcheckOutput) ToContainerHealthcheckOutput() ContainerHealthcheckOutput {
	return o
}

func (o ContainerHealthcheckOutput) ToContainerHealthcheckOutputWithContext(ctx context.Context) ContainerHealthcheckOutput {
	return o
}

func (o ContainerHealthcheckOutput) ToContainerHealthcheckPtrOutput() ContainerHealthcheckPtrOutput {
	return o.ToContainerHealthcheckPtrOutputWithContext(context.Background())
}

func (o ContainerHealthcheckOutput) ToContainerHealthcheckPtrOutputWithContext(ctx context.Context) ContainerHealthcheckPtrOutput {
	return o.ApplyT(func(v ContainerHealthcheck) *ContainerHealthcheck {
		return &v
	}).(ContainerHealthcheckPtrOutput)
}
func (o ContainerHealthcheckOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerHealthcheck) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

func (o ContainerHealthcheckOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ContainerHealthcheck) *int { return v.Retries }).(pulumi.IntPtrOutput)
}

func (o ContainerHealthcheckOutput) StartPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerHealthcheck) *string { return v.StartPeriod }).(pulumi.StringPtrOutput)
}

func (o ContainerHealthcheckOutput) Tests() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ContainerHealthcheck) []string { return v.Tests }).(pulumi.StringArrayOutput)
}

func (o ContainerHealthcheckOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerHealthcheck) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ContainerHealthcheckPtrOutput struct { *pulumi.OutputState}

func (ContainerHealthcheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthcheck)(nil)).Elem()
}

func (o ContainerHealthcheckPtrOutput) ToContainerHealthcheckPtrOutput() ContainerHealthcheckPtrOutput {
	return o
}

func (o ContainerHealthcheckPtrOutput) ToContainerHealthcheckPtrOutputWithContext(ctx context.Context) ContainerHealthcheckPtrOutput {
	return o
}

func (o ContainerHealthcheckPtrOutput) Elem() ContainerHealthcheckOutput {
	return o.ApplyT(func (v *ContainerHealthcheck) ContainerHealthcheck { return *v }).(ContainerHealthcheckOutput)
}

func (o ContainerHealthcheckPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerHealthcheck) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

func (o ContainerHealthcheckPtrOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ContainerHealthcheck) *int { return v.Retries }).(pulumi.IntPtrOutput)
}

func (o ContainerHealthcheckPtrOutput) StartPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerHealthcheck) *string { return v.StartPeriod }).(pulumi.StringPtrOutput)
}

func (o ContainerHealthcheckPtrOutput) Tests() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ContainerHealthcheck) []string { return v.Tests }).(pulumi.StringArrayOutput)
}

func (o ContainerHealthcheckPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerHealthcheck) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ContainerHost struct {
	// Hostname to add.
	Host string `pulumi:"host"`
	// IP address this hostname should resolve to.
	Ip string `pulumi:"ip"`
}

type ContainerHostInput interface {
	pulumi.Input

	ToContainerHostOutput() ContainerHostOutput
	ToContainerHostOutputWithContext(context.Context) ContainerHostOutput
}

type ContainerHostArgs struct {
	// Hostname to add.
	Host pulumi.StringInput `pulumi:"host"`
	// IP address this hostname should resolve to.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (ContainerHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHost)(nil)).Elem()
}

func (i ContainerHostArgs) ToContainerHostOutput() ContainerHostOutput {
	return i.ToContainerHostOutputWithContext(context.Background())
}

func (i ContainerHostArgs) ToContainerHostOutputWithContext(ctx context.Context) ContainerHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHostOutput)
}

type ContainerHostArrayInput interface {
	pulumi.Input

	ToContainerHostArrayOutput() ContainerHostArrayOutput
	ToContainerHostArrayOutputWithContext(context.Context) ContainerHostArrayOutput
}

type ContainerHostArray []ContainerHostInput

func (ContainerHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerHost)(nil)).Elem()
}

func (i ContainerHostArray) ToContainerHostArrayOutput() ContainerHostArrayOutput {
	return i.ToContainerHostArrayOutputWithContext(context.Background())
}

func (i ContainerHostArray) ToContainerHostArrayOutputWithContext(ctx context.Context) ContainerHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHostArrayOutput)
}

type ContainerHostOutput struct { *pulumi.OutputState }

func (ContainerHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHost)(nil)).Elem()
}

func (o ContainerHostOutput) ToContainerHostOutput() ContainerHostOutput {
	return o
}

func (o ContainerHostOutput) ToContainerHostOutputWithContext(ctx context.Context) ContainerHostOutput {
	return o
}

// Hostname to add.
func (o ContainerHostOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func (v ContainerHost) string { return v.Host }).(pulumi.StringOutput)
}

// IP address this hostname should resolve to.
func (o ContainerHostOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func (v ContainerHost) string { return v.Ip }).(pulumi.StringOutput)
}

type ContainerHostArrayOutput struct { *pulumi.OutputState}

func (ContainerHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerHost)(nil)).Elem()
}

func (o ContainerHostArrayOutput) ToContainerHostArrayOutput() ContainerHostArrayOutput {
	return o
}

func (o ContainerHostArrayOutput) ToContainerHostArrayOutputWithContext(ctx context.Context) ContainerHostArrayOutput {
	return o
}

func (o ContainerHostArrayOutput) Index(i pulumi.IntInput) ContainerHostOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ContainerHost {
		return vs[0].([]ContainerHost)[vs[1].(int)]
	}).(ContainerHostOutput)
}

type ContainerLabel struct {
	// Name of the label
	// * `value` (Required, string) Value of the label
	Label string `pulumi:"label"`
	Value string `pulumi:"value"`
}

type ContainerLabelInput interface {
	pulumi.Input

	ToContainerLabelOutput() ContainerLabelOutput
	ToContainerLabelOutputWithContext(context.Context) ContainerLabelOutput
}

type ContainerLabelArgs struct {
	// Name of the label
	// * `value` (Required, string) Value of the label
	Label pulumi.StringInput `pulumi:"label"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ContainerLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerLabel)(nil)).Elem()
}

func (i ContainerLabelArgs) ToContainerLabelOutput() ContainerLabelOutput {
	return i.ToContainerLabelOutputWithContext(context.Background())
}

func (i ContainerLabelArgs) ToContainerLabelOutputWithContext(ctx context.Context) ContainerLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerLabelOutput)
}

type ContainerLabelArrayInput interface {
	pulumi.Input

	ToContainerLabelArrayOutput() ContainerLabelArrayOutput
	ToContainerLabelArrayOutputWithContext(context.Context) ContainerLabelArrayOutput
}

type ContainerLabelArray []ContainerLabelInput

func (ContainerLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerLabel)(nil)).Elem()
}

func (i ContainerLabelArray) ToContainerLabelArrayOutput() ContainerLabelArrayOutput {
	return i.ToContainerLabelArrayOutputWithContext(context.Background())
}

func (i ContainerLabelArray) ToContainerLabelArrayOutputWithContext(ctx context.Context) ContainerLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerLabelArrayOutput)
}

type ContainerLabelOutput struct { *pulumi.OutputState }

func (ContainerLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerLabel)(nil)).Elem()
}

func (o ContainerLabelOutput) ToContainerLabelOutput() ContainerLabelOutput {
	return o
}

func (o ContainerLabelOutput) ToContainerLabelOutputWithContext(ctx context.Context) ContainerLabelOutput {
	return o
}

// Name of the label
// * `value` (Required, string) Value of the label
func (o ContainerLabelOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func (v ContainerLabel) string { return v.Label }).(pulumi.StringOutput)
}

func (o ContainerLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v ContainerLabel) string { return v.Value }).(pulumi.StringOutput)
}

type ContainerLabelArrayOutput struct { *pulumi.OutputState}

func (ContainerLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerLabel)(nil)).Elem()
}

func (o ContainerLabelArrayOutput) ToContainerLabelArrayOutput() ContainerLabelArrayOutput {
	return o
}

func (o ContainerLabelArrayOutput) ToContainerLabelArrayOutputWithContext(ctx context.Context) ContainerLabelArrayOutput {
	return o
}

func (o ContainerLabelArrayOutput) Index(i pulumi.IntInput) ContainerLabelOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ContainerLabel {
		return vs[0].([]ContainerLabel)[vs[1].(int)]
	}).(ContainerLabelOutput)
}

type ContainerMount struct {
	// Optional configuration for the `bind` type.
	BindOptions *ContainerMountBindOptions `pulumi:"bindOptions"`
	// If true, this volume will be readonly.
	// Defaults to false.
	ReadOnly *bool `pulumi:"readOnly"`
	// A filename that references a file which will be uploaded as the object content. This allows for large file uploads that do not get stored in state.
	Source *string `pulumi:"source"`
	// The container path.
	Target string `pulumi:"target"`
	// Optional configuration for the `tmpf` type.
	TmpfsOptions *ContainerMountTmpfsOptions `pulumi:"tmpfsOptions"`
	// The mount type: valid values are `bind|volume|tmpfs`.
	Type string `pulumi:"type"`
	// Optional configuration for the `volume` type.
	VolumeOptions *ContainerMountVolumeOptions `pulumi:"volumeOptions"`
}

type ContainerMountInput interface {
	pulumi.Input

	ToContainerMountOutput() ContainerMountOutput
	ToContainerMountOutputWithContext(context.Context) ContainerMountOutput
}

type ContainerMountArgs struct {
	// Optional configuration for the `bind` type.
	BindOptions ContainerMountBindOptionsPtrInput `pulumi:"bindOptions"`
	// If true, this volume will be readonly.
	// Defaults to false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// A filename that references a file which will be uploaded as the object content. This allows for large file uploads that do not get stored in state.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// The container path.
	Target pulumi.StringInput `pulumi:"target"`
	// Optional configuration for the `tmpf` type.
	TmpfsOptions ContainerMountTmpfsOptionsPtrInput `pulumi:"tmpfsOptions"`
	// The mount type: valid values are `bind|volume|tmpfs`.
	Type pulumi.StringInput `pulumi:"type"`
	// Optional configuration for the `volume` type.
	VolumeOptions ContainerMountVolumeOptionsPtrInput `pulumi:"volumeOptions"`
}

func (ContainerMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerMount)(nil)).Elem()
}

func (i ContainerMountArgs) ToContainerMountOutput() ContainerMountOutput {
	return i.ToContainerMountOutputWithContext(context.Background())
}

func (i ContainerMountArgs) ToContainerMountOutputWithContext(ctx context.Context) ContainerMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerMountOutput)
}

type ContainerMountArrayInput interface {
	pulumi.Input

	ToContainerMountArrayOutput() ContainerMountArrayOutput
	ToContainerMountArrayOutputWithContext(context.Context) ContainerMountArrayOutput
}

type ContainerMountArray []ContainerMountInput

func (ContainerMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerMount)(nil)).Elem()
}

func (i ContainerMountArray) ToContainerMountArrayOutput() ContainerMountArrayOutput {
	return i.ToContainerMountArrayOutputWithContext(context.Background())
}

func (i ContainerMountArray) ToContainerMountArrayOutputWithContext(ctx context.Context) ContainerMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerMountArrayOutput)
}

type ContainerMountOutput struct { *pulumi.OutputState }

func (ContainerMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerMount)(nil)).Elem()
}

func (o ContainerMountOutput) ToContainerMountOutput() ContainerMountOutput {
	return o
}

func (o ContainerMountOutput) ToContainerMountOutputWithContext(ctx context.Context) ContainerMountOutput {
	return o
}

// Optional configuration for the `bind` type.
func (o ContainerMountOutput) BindOptions() ContainerMountBindOptionsPtrOutput {
	return o.ApplyT(func (v ContainerMount) *ContainerMountBindOptions { return v.BindOptions }).(ContainerMountBindOptionsPtrOutput)
}

// If true, this volume will be readonly.
// Defaults to false.
func (o ContainerMountOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ContainerMount) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// A filename that references a file which will be uploaded as the object content. This allows for large file uploads that do not get stored in state.
func (o ContainerMountOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerMount) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The container path.
func (o ContainerMountOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func (v ContainerMount) string { return v.Target }).(pulumi.StringOutput)
}

// Optional configuration for the `tmpf` type.
func (o ContainerMountOutput) TmpfsOptions() ContainerMountTmpfsOptionsPtrOutput {
	return o.ApplyT(func (v ContainerMount) *ContainerMountTmpfsOptions { return v.TmpfsOptions }).(ContainerMountTmpfsOptionsPtrOutput)
}

// The mount type: valid values are `bind|volume|tmpfs`.
func (o ContainerMountOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v ContainerMount) string { return v.Type }).(pulumi.StringOutput)
}

// Optional configuration for the `volume` type.
func (o ContainerMountOutput) VolumeOptions() ContainerMountVolumeOptionsPtrOutput {
	return o.ApplyT(func (v ContainerMount) *ContainerMountVolumeOptions { return v.VolumeOptions }).(ContainerMountVolumeOptionsPtrOutput)
}

type ContainerMountArrayOutput struct { *pulumi.OutputState}

func (ContainerMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerMount)(nil)).Elem()
}

func (o ContainerMountArrayOutput) ToContainerMountArrayOutput() ContainerMountArrayOutput {
	return o
}

func (o ContainerMountArrayOutput) ToContainerMountArrayOutputWithContext(ctx context.Context) ContainerMountArrayOutput {
	return o
}

func (o ContainerMountArrayOutput) Index(i pulumi.IntInput) ContainerMountOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ContainerMount {
		return vs[0].([]ContainerMount)[vs[1].(int)]
	}).(ContainerMountOutput)
}

type ContainerMountBindOptions struct {
	// A propagation mode with the value.
	Propagation *string `pulumi:"propagation"`
}

type ContainerMountBindOptionsInput interface {
	pulumi.Input

	ToContainerMountBindOptionsOutput() ContainerMountBindOptionsOutput
	ToContainerMountBindOptionsOutputWithContext(context.Context) ContainerMountBindOptionsOutput
}

type ContainerMountBindOptionsArgs struct {
	// A propagation mode with the value.
	Propagation pulumi.StringPtrInput `pulumi:"propagation"`
}

func (ContainerMountBindOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerMountBindOptions)(nil)).Elem()
}

func (i ContainerMountBindOptionsArgs) ToContainerMountBindOptionsOutput() ContainerMountBindOptionsOutput {
	return i.ToContainerMountBindOptionsOutputWithContext(context.Background())
}

func (i ContainerMountBindOptionsArgs) ToContainerMountBindOptionsOutputWithContext(ctx context.Context) ContainerMountBindOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerMountBindOptionsOutput)
}

func (i ContainerMountBindOptionsArgs) ToContainerMountBindOptionsPtrOutput() ContainerMountBindOptionsPtrOutput {
	return i.ToContainerMountBindOptionsPtrOutputWithContext(context.Background())
}

func (i ContainerMountBindOptionsArgs) ToContainerMountBindOptionsPtrOutputWithContext(ctx context.Context) ContainerMountBindOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerMountBindOptionsOutput).ToContainerMountBindOptionsPtrOutputWithContext(ctx)
}

type ContainerMountBindOptionsPtrInput interface {
	pulumi.Input

	ToContainerMountBindOptionsPtrOutput() ContainerMountBindOptionsPtrOutput
	ToContainerMountBindOptionsPtrOutputWithContext(context.Context) ContainerMountBindOptionsPtrOutput
}

type containerMountBindOptionsPtrType ContainerMountBindOptionsArgs

func ContainerMountBindOptionsPtr(v *ContainerMountBindOptionsArgs) ContainerMountBindOptionsPtrInput {	return (*containerMountBindOptionsPtrType)(v)
}

func (*containerMountBindOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerMountBindOptions)(nil)).Elem()
}

func (i *containerMountBindOptionsPtrType) ToContainerMountBindOptionsPtrOutput() ContainerMountBindOptionsPtrOutput {
	return i.ToContainerMountBindOptionsPtrOutputWithContext(context.Background())
}

func (i *containerMountBindOptionsPtrType) ToContainerMountBindOptionsPtrOutputWithContext(ctx context.Context) ContainerMountBindOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerMountBindOptionsPtrOutput)
}

type ContainerMountBindOptionsOutput struct { *pulumi.OutputState }

func (ContainerMountBindOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerMountBindOptions)(nil)).Elem()
}

func (o ContainerMountBindOptionsOutput) ToContainerMountBindOptionsOutput() ContainerMountBindOptionsOutput {
	return o
}

func (o ContainerMountBindOptionsOutput) ToContainerMountBindOptionsOutputWithContext(ctx context.Context) ContainerMountBindOptionsOutput {
	return o
}

func (o ContainerMountBindOptionsOutput) ToContainerMountBindOptionsPtrOutput() ContainerMountBindOptionsPtrOutput {
	return o.ToContainerMountBindOptionsPtrOutputWithContext(context.Background())
}

func (o ContainerMountBindOptionsOutput) ToContainerMountBindOptionsPtrOutputWithContext(ctx context.Context) ContainerMountBindOptionsPtrOutput {
	return o.ApplyT(func(v ContainerMountBindOptions) *ContainerMountBindOptions {
		return &v
	}).(ContainerMountBindOptionsPtrOutput)
}
// A propagation mode with the value.
func (o ContainerMountBindOptionsOutput) Propagation() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerMountBindOptions) *string { return v.Propagation }).(pulumi.StringPtrOutput)
}

type ContainerMountBindOptionsPtrOutput struct { *pulumi.OutputState}

func (ContainerMountBindOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerMountBindOptions)(nil)).Elem()
}

func (o ContainerMountBindOptionsPtrOutput) ToContainerMountBindOptionsPtrOutput() ContainerMountBindOptionsPtrOutput {
	return o
}

func (o ContainerMountBindOptionsPtrOutput) ToContainerMountBindOptionsPtrOutputWithContext(ctx context.Context) ContainerMountBindOptionsPtrOutput {
	return o
}

func (o ContainerMountBindOptionsPtrOutput) Elem() ContainerMountBindOptionsOutput {
	return o.ApplyT(func (v *ContainerMountBindOptions) ContainerMountBindOptions { return *v }).(ContainerMountBindOptionsOutput)
}

// A propagation mode with the value.
func (o ContainerMountBindOptionsPtrOutput) Propagation() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerMountBindOptions) *string { return v.Propagation }).(pulumi.StringPtrOutput)
}

type ContainerMountTmpfsOptions struct {
	// The permission mode for the tmpfs mount in an integer.
	Mode *int `pulumi:"mode"`
	// The size for the tmpfs mount in bytes.
	SizeBytes *int `pulumi:"sizeBytes"`
}

type ContainerMountTmpfsOptionsInput interface {
	pulumi.Input

	ToContainerMountTmpfsOptionsOutput() ContainerMountTmpfsOptionsOutput
	ToContainerMountTmpfsOptionsOutputWithContext(context.Context) ContainerMountTmpfsOptionsOutput
}

type ContainerMountTmpfsOptionsArgs struct {
	// The permission mode for the tmpfs mount in an integer.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// The size for the tmpfs mount in bytes.
	SizeBytes pulumi.IntPtrInput `pulumi:"sizeBytes"`
}

func (ContainerMountTmpfsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerMountTmpfsOptions)(nil)).Elem()
}

func (i ContainerMountTmpfsOptionsArgs) ToContainerMountTmpfsOptionsOutput() ContainerMountTmpfsOptionsOutput {
	return i.ToContainerMountTmpfsOptionsOutputWithContext(context.Background())
}

func (i ContainerMountTmpfsOptionsArgs) ToContainerMountTmpfsOptionsOutputWithContext(ctx context.Context) ContainerMountTmpfsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerMountTmpfsOptionsOutput)
}

func (i ContainerMountTmpfsOptionsArgs) ToContainerMountTmpfsOptionsPtrOutput() ContainerMountTmpfsOptionsPtrOutput {
	return i.ToContainerMountTmpfsOptionsPtrOutputWithContext(context.Background())
}

func (i ContainerMountTmpfsOptionsArgs) ToContainerMountTmpfsOptionsPtrOutputWithContext(ctx context.Context) ContainerMountTmpfsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerMountTmpfsOptionsOutput).ToContainerMountTmpfsOptionsPtrOutputWithContext(ctx)
}

type ContainerMountTmpfsOptionsPtrInput interface {
	pulumi.Input

	ToContainerMountTmpfsOptionsPtrOutput() ContainerMountTmpfsOptionsPtrOutput
	ToContainerMountTmpfsOptionsPtrOutputWithContext(context.Context) ContainerMountTmpfsOptionsPtrOutput
}

type containerMountTmpfsOptionsPtrType ContainerMountTmpfsOptionsArgs

func ContainerMountTmpfsOptionsPtr(v *ContainerMountTmpfsOptionsArgs) ContainerMountTmpfsOptionsPtrInput {	return (*containerMountTmpfsOptionsPtrType)(v)
}

func (*containerMountTmpfsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerMountTmpfsOptions)(nil)).Elem()
}

func (i *containerMountTmpfsOptionsPtrType) ToContainerMountTmpfsOptionsPtrOutput() ContainerMountTmpfsOptionsPtrOutput {
	return i.ToContainerMountTmpfsOptionsPtrOutputWithContext(context.Background())
}

func (i *containerMountTmpfsOptionsPtrType) ToContainerMountTmpfsOptionsPtrOutputWithContext(ctx context.Context) ContainerMountTmpfsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerMountTmpfsOptionsPtrOutput)
}

type ContainerMountTmpfsOptionsOutput struct { *pulumi.OutputState }

func (ContainerMountTmpfsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerMountTmpfsOptions)(nil)).Elem()
}

func (o ContainerMountTmpfsOptionsOutput) ToContainerMountTmpfsOptionsOutput() ContainerMountTmpfsOptionsOutput {
	return o
}

func (o ContainerMountTmpfsOptionsOutput) ToContainerMountTmpfsOptionsOutputWithContext(ctx context.Context) ContainerMountTmpfsOptionsOutput {
	return o
}

func (o ContainerMountTmpfsOptionsOutput) ToContainerMountTmpfsOptionsPtrOutput() ContainerMountTmpfsOptionsPtrOutput {
	return o.ToContainerMountTmpfsOptionsPtrOutputWithContext(context.Background())
}

func (o ContainerMountTmpfsOptionsOutput) ToContainerMountTmpfsOptionsPtrOutputWithContext(ctx context.Context) ContainerMountTmpfsOptionsPtrOutput {
	return o.ApplyT(func(v ContainerMountTmpfsOptions) *ContainerMountTmpfsOptions {
		return &v
	}).(ContainerMountTmpfsOptionsPtrOutput)
}
// The permission mode for the tmpfs mount in an integer.
func (o ContainerMountTmpfsOptionsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ContainerMountTmpfsOptions) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// The size for the tmpfs mount in bytes.
func (o ContainerMountTmpfsOptionsOutput) SizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ContainerMountTmpfsOptions) *int { return v.SizeBytes }).(pulumi.IntPtrOutput)
}

type ContainerMountTmpfsOptionsPtrOutput struct { *pulumi.OutputState}

func (ContainerMountTmpfsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerMountTmpfsOptions)(nil)).Elem()
}

func (o ContainerMountTmpfsOptionsPtrOutput) ToContainerMountTmpfsOptionsPtrOutput() ContainerMountTmpfsOptionsPtrOutput {
	return o
}

func (o ContainerMountTmpfsOptionsPtrOutput) ToContainerMountTmpfsOptionsPtrOutputWithContext(ctx context.Context) ContainerMountTmpfsOptionsPtrOutput {
	return o
}

func (o ContainerMountTmpfsOptionsPtrOutput) Elem() ContainerMountTmpfsOptionsOutput {
	return o.ApplyT(func (v *ContainerMountTmpfsOptions) ContainerMountTmpfsOptions { return *v }).(ContainerMountTmpfsOptionsOutput)
}

// The permission mode for the tmpfs mount in an integer.
func (o ContainerMountTmpfsOptionsPtrOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ContainerMountTmpfsOptions) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// The size for the tmpfs mount in bytes.
func (o ContainerMountTmpfsOptionsPtrOutput) SizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ContainerMountTmpfsOptions) *int { return v.SizeBytes }).(pulumi.IntPtrOutput)
}

type ContainerMountVolumeOptions struct {
	DriverName *string `pulumi:"driverName"`
	// Options for the driver.
	DriverOptions map[string]string `pulumi:"driverOptions"`
	// Adding labels.
	Labels []ContainerMountVolumeOptionsLabel `pulumi:"labels"`
	// Whether to populate volume with data from the target.
	NoCopy *bool `pulumi:"noCopy"`
}

type ContainerMountVolumeOptionsInput interface {
	pulumi.Input

	ToContainerMountVolumeOptionsOutput() ContainerMountVolumeOptionsOutput
	ToContainerMountVolumeOptionsOutputWithContext(context.Context) ContainerMountVolumeOptionsOutput
}

type ContainerMountVolumeOptionsArgs struct {
	DriverName pulumi.StringPtrInput `pulumi:"driverName"`
	// Options for the driver.
	DriverOptions pulumi.StringMapInput `pulumi:"driverOptions"`
	// Adding labels.
	Labels ContainerMountVolumeOptionsLabelArrayInput `pulumi:"labels"`
	// Whether to populate volume with data from the target.
	NoCopy pulumi.BoolPtrInput `pulumi:"noCopy"`
}

func (ContainerMountVolumeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerMountVolumeOptions)(nil)).Elem()
}

func (i ContainerMountVolumeOptionsArgs) ToContainerMountVolumeOptionsOutput() ContainerMountVolumeOptionsOutput {
	return i.ToContainerMountVolumeOptionsOutputWithContext(context.Background())
}

func (i ContainerMountVolumeOptionsArgs) ToContainerMountVolumeOptionsOutputWithContext(ctx context.Context) ContainerMountVolumeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerMountVolumeOptionsOutput)
}

func (i ContainerMountVolumeOptionsArgs) ToContainerMountVolumeOptionsPtrOutput() ContainerMountVolumeOptionsPtrOutput {
	return i.ToContainerMountVolumeOptionsPtrOutputWithContext(context.Background())
}

func (i ContainerMountVolumeOptionsArgs) ToContainerMountVolumeOptionsPtrOutputWithContext(ctx context.Context) ContainerMountVolumeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerMountVolumeOptionsOutput).ToContainerMountVolumeOptionsPtrOutputWithContext(ctx)
}

type ContainerMountVolumeOptionsPtrInput interface {
	pulumi.Input

	ToContainerMountVolumeOptionsPtrOutput() ContainerMountVolumeOptionsPtrOutput
	ToContainerMountVolumeOptionsPtrOutputWithContext(context.Context) ContainerMountVolumeOptionsPtrOutput
}

type containerMountVolumeOptionsPtrType ContainerMountVolumeOptionsArgs

func ContainerMountVolumeOptionsPtr(v *ContainerMountVolumeOptionsArgs) ContainerMountVolumeOptionsPtrInput {	return (*containerMountVolumeOptionsPtrType)(v)
}

func (*containerMountVolumeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerMountVolumeOptions)(nil)).Elem()
}

func (i *containerMountVolumeOptionsPtrType) ToContainerMountVolumeOptionsPtrOutput() ContainerMountVolumeOptionsPtrOutput {
	return i.ToContainerMountVolumeOptionsPtrOutputWithContext(context.Background())
}

func (i *containerMountVolumeOptionsPtrType) ToContainerMountVolumeOptionsPtrOutputWithContext(ctx context.Context) ContainerMountVolumeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerMountVolumeOptionsPtrOutput)
}

type ContainerMountVolumeOptionsOutput struct { *pulumi.OutputState }

func (ContainerMountVolumeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerMountVolumeOptions)(nil)).Elem()
}

func (o ContainerMountVolumeOptionsOutput) ToContainerMountVolumeOptionsOutput() ContainerMountVolumeOptionsOutput {
	return o
}

func (o ContainerMountVolumeOptionsOutput) ToContainerMountVolumeOptionsOutputWithContext(ctx context.Context) ContainerMountVolumeOptionsOutput {
	return o
}

func (o ContainerMountVolumeOptionsOutput) ToContainerMountVolumeOptionsPtrOutput() ContainerMountVolumeOptionsPtrOutput {
	return o.ToContainerMountVolumeOptionsPtrOutputWithContext(context.Background())
}

func (o ContainerMountVolumeOptionsOutput) ToContainerMountVolumeOptionsPtrOutputWithContext(ctx context.Context) ContainerMountVolumeOptionsPtrOutput {
	return o.ApplyT(func(v ContainerMountVolumeOptions) *ContainerMountVolumeOptions {
		return &v
	}).(ContainerMountVolumeOptionsPtrOutput)
}
func (o ContainerMountVolumeOptionsOutput) DriverName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerMountVolumeOptions) *string { return v.DriverName }).(pulumi.StringPtrOutput)
}

// Options for the driver.
func (o ContainerMountVolumeOptionsOutput) DriverOptions() pulumi.StringMapOutput {
	return o.ApplyT(func (v ContainerMountVolumeOptions) map[string]string { return v.DriverOptions }).(pulumi.StringMapOutput)
}

// Adding labels.
func (o ContainerMountVolumeOptionsOutput) Labels() ContainerMountVolumeOptionsLabelArrayOutput {
	return o.ApplyT(func (v ContainerMountVolumeOptions) []ContainerMountVolumeOptionsLabel { return v.Labels }).(ContainerMountVolumeOptionsLabelArrayOutput)
}

// Whether to populate volume with data from the target.
func (o ContainerMountVolumeOptionsOutput) NoCopy() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ContainerMountVolumeOptions) *bool { return v.NoCopy }).(pulumi.BoolPtrOutput)
}

type ContainerMountVolumeOptionsPtrOutput struct { *pulumi.OutputState}

func (ContainerMountVolumeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerMountVolumeOptions)(nil)).Elem()
}

func (o ContainerMountVolumeOptionsPtrOutput) ToContainerMountVolumeOptionsPtrOutput() ContainerMountVolumeOptionsPtrOutput {
	return o
}

func (o ContainerMountVolumeOptionsPtrOutput) ToContainerMountVolumeOptionsPtrOutputWithContext(ctx context.Context) ContainerMountVolumeOptionsPtrOutput {
	return o
}

func (o ContainerMountVolumeOptionsPtrOutput) Elem() ContainerMountVolumeOptionsOutput {
	return o.ApplyT(func (v *ContainerMountVolumeOptions) ContainerMountVolumeOptions { return *v }).(ContainerMountVolumeOptionsOutput)
}

func (o ContainerMountVolumeOptionsPtrOutput) DriverName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerMountVolumeOptions) *string { return v.DriverName }).(pulumi.StringPtrOutput)
}

// Options for the driver.
func (o ContainerMountVolumeOptionsPtrOutput) DriverOptions() pulumi.StringMapOutput {
	return o.ApplyT(func (v ContainerMountVolumeOptions) map[string]string { return v.DriverOptions }).(pulumi.StringMapOutput)
}

// Adding labels.
func (o ContainerMountVolumeOptionsPtrOutput) Labels() ContainerMountVolumeOptionsLabelArrayOutput {
	return o.ApplyT(func (v ContainerMountVolumeOptions) []ContainerMountVolumeOptionsLabel { return v.Labels }).(ContainerMountVolumeOptionsLabelArrayOutput)
}

// Whether to populate volume with data from the target.
func (o ContainerMountVolumeOptionsPtrOutput) NoCopy() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ContainerMountVolumeOptions) *bool { return v.NoCopy }).(pulumi.BoolPtrOutput)
}

type ContainerMountVolumeOptionsLabel struct {
	// Name of the label
	// * `value` (Required, string) Value of the label
	Label string `pulumi:"label"`
	Value string `pulumi:"value"`
}

type ContainerMountVolumeOptionsLabelInput interface {
	pulumi.Input

	ToContainerMountVolumeOptionsLabelOutput() ContainerMountVolumeOptionsLabelOutput
	ToContainerMountVolumeOptionsLabelOutputWithContext(context.Context) ContainerMountVolumeOptionsLabelOutput
}

type ContainerMountVolumeOptionsLabelArgs struct {
	// Name of the label
	// * `value` (Required, string) Value of the label
	Label pulumi.StringInput `pulumi:"label"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ContainerMountVolumeOptionsLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerMountVolumeOptionsLabel)(nil)).Elem()
}

func (i ContainerMountVolumeOptionsLabelArgs) ToContainerMountVolumeOptionsLabelOutput() ContainerMountVolumeOptionsLabelOutput {
	return i.ToContainerMountVolumeOptionsLabelOutputWithContext(context.Background())
}

func (i ContainerMountVolumeOptionsLabelArgs) ToContainerMountVolumeOptionsLabelOutputWithContext(ctx context.Context) ContainerMountVolumeOptionsLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerMountVolumeOptionsLabelOutput)
}

type ContainerMountVolumeOptionsLabelArrayInput interface {
	pulumi.Input

	ToContainerMountVolumeOptionsLabelArrayOutput() ContainerMountVolumeOptionsLabelArrayOutput
	ToContainerMountVolumeOptionsLabelArrayOutputWithContext(context.Context) ContainerMountVolumeOptionsLabelArrayOutput
}

type ContainerMountVolumeOptionsLabelArray []ContainerMountVolumeOptionsLabelInput

func (ContainerMountVolumeOptionsLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerMountVolumeOptionsLabel)(nil)).Elem()
}

func (i ContainerMountVolumeOptionsLabelArray) ToContainerMountVolumeOptionsLabelArrayOutput() ContainerMountVolumeOptionsLabelArrayOutput {
	return i.ToContainerMountVolumeOptionsLabelArrayOutputWithContext(context.Background())
}

func (i ContainerMountVolumeOptionsLabelArray) ToContainerMountVolumeOptionsLabelArrayOutputWithContext(ctx context.Context) ContainerMountVolumeOptionsLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerMountVolumeOptionsLabelArrayOutput)
}

type ContainerMountVolumeOptionsLabelOutput struct { *pulumi.OutputState }

func (ContainerMountVolumeOptionsLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerMountVolumeOptionsLabel)(nil)).Elem()
}

func (o ContainerMountVolumeOptionsLabelOutput) ToContainerMountVolumeOptionsLabelOutput() ContainerMountVolumeOptionsLabelOutput {
	return o
}

func (o ContainerMountVolumeOptionsLabelOutput) ToContainerMountVolumeOptionsLabelOutputWithContext(ctx context.Context) ContainerMountVolumeOptionsLabelOutput {
	return o
}

// Name of the label
// * `value` (Required, string) Value of the label
func (o ContainerMountVolumeOptionsLabelOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func (v ContainerMountVolumeOptionsLabel) string { return v.Label }).(pulumi.StringOutput)
}

func (o ContainerMountVolumeOptionsLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v ContainerMountVolumeOptionsLabel) string { return v.Value }).(pulumi.StringOutput)
}

type ContainerMountVolumeOptionsLabelArrayOutput struct { *pulumi.OutputState}

func (ContainerMountVolumeOptionsLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerMountVolumeOptionsLabel)(nil)).Elem()
}

func (o ContainerMountVolumeOptionsLabelArrayOutput) ToContainerMountVolumeOptionsLabelArrayOutput() ContainerMountVolumeOptionsLabelArrayOutput {
	return o
}

func (o ContainerMountVolumeOptionsLabelArrayOutput) ToContainerMountVolumeOptionsLabelArrayOutputWithContext(ctx context.Context) ContainerMountVolumeOptionsLabelArrayOutput {
	return o
}

func (o ContainerMountVolumeOptionsLabelArrayOutput) Index(i pulumi.IntInput) ContainerMountVolumeOptionsLabelOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ContainerMountVolumeOptionsLabel {
		return vs[0].([]ContainerMountVolumeOptionsLabel)[vs[1].(int)]
	}).(ContainerMountVolumeOptionsLabelOutput)
}

type ContainerNetworkData struct {
	// *Deprecated:* Use `networkData` instead. The network gateway of the container as read from its
	// NetworkSettings.
	Gateway *string `pulumi:"gateway"`
	// *Deprecated:* Use `networkData` instead. The IP address of the container's first network it.
	IpAddress *string `pulumi:"ipAddress"`
	// *Deprecated:* Use `networkData` instead. The IP prefix length of the container as read from its
	// NetworkSettings.
	IpPrefixLength *int `pulumi:"ipPrefixLength"`
	NetworkName *string `pulumi:"networkName"`
}

type ContainerNetworkDataInput interface {
	pulumi.Input

	ToContainerNetworkDataOutput() ContainerNetworkDataOutput
	ToContainerNetworkDataOutputWithContext(context.Context) ContainerNetworkDataOutput
}

type ContainerNetworkDataArgs struct {
	// *Deprecated:* Use `networkData` instead. The network gateway of the container as read from its
	// NetworkSettings.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// *Deprecated:* Use `networkData` instead. The IP address of the container's first network it.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// *Deprecated:* Use `networkData` instead. The IP prefix length of the container as read from its
	// NetworkSettings.
	IpPrefixLength pulumi.IntPtrInput `pulumi:"ipPrefixLength"`
	NetworkName pulumi.StringPtrInput `pulumi:"networkName"`
}

func (ContainerNetworkDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkData)(nil)).Elem()
}

func (i ContainerNetworkDataArgs) ToContainerNetworkDataOutput() ContainerNetworkDataOutput {
	return i.ToContainerNetworkDataOutputWithContext(context.Background())
}

func (i ContainerNetworkDataArgs) ToContainerNetworkDataOutputWithContext(ctx context.Context) ContainerNetworkDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkDataOutput)
}

type ContainerNetworkDataArrayInput interface {
	pulumi.Input

	ToContainerNetworkDataArrayOutput() ContainerNetworkDataArrayOutput
	ToContainerNetworkDataArrayOutputWithContext(context.Context) ContainerNetworkDataArrayOutput
}

type ContainerNetworkDataArray []ContainerNetworkDataInput

func (ContainerNetworkDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkData)(nil)).Elem()
}

func (i ContainerNetworkDataArray) ToContainerNetworkDataArrayOutput() ContainerNetworkDataArrayOutput {
	return i.ToContainerNetworkDataArrayOutputWithContext(context.Background())
}

func (i ContainerNetworkDataArray) ToContainerNetworkDataArrayOutputWithContext(ctx context.Context) ContainerNetworkDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkDataArrayOutput)
}

type ContainerNetworkDataOutput struct { *pulumi.OutputState }

func (ContainerNetworkDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkData)(nil)).Elem()
}

func (o ContainerNetworkDataOutput) ToContainerNetworkDataOutput() ContainerNetworkDataOutput {
	return o
}

func (o ContainerNetworkDataOutput) ToContainerNetworkDataOutputWithContext(ctx context.Context) ContainerNetworkDataOutput {
	return o
}

// *Deprecated:* Use `networkData` instead. The network gateway of the container as read from its
// NetworkSettings.
func (o ContainerNetworkDataOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerNetworkData) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// *Deprecated:* Use `networkData` instead. The IP address of the container's first network it.
func (o ContainerNetworkDataOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerNetworkData) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// *Deprecated:* Use `networkData` instead. The IP prefix length of the container as read from its
// NetworkSettings.
func (o ContainerNetworkDataOutput) IpPrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ContainerNetworkData) *int { return v.IpPrefixLength }).(pulumi.IntPtrOutput)
}

func (o ContainerNetworkDataOutput) NetworkName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerNetworkData) *string { return v.NetworkName }).(pulumi.StringPtrOutput)
}

type ContainerNetworkDataArrayOutput struct { *pulumi.OutputState}

func (ContainerNetworkDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkData)(nil)).Elem()
}

func (o ContainerNetworkDataArrayOutput) ToContainerNetworkDataArrayOutput() ContainerNetworkDataArrayOutput {
	return o
}

func (o ContainerNetworkDataArrayOutput) ToContainerNetworkDataArrayOutputWithContext(ctx context.Context) ContainerNetworkDataArrayOutput {
	return o
}

func (o ContainerNetworkDataArrayOutput) Index(i pulumi.IntInput) ContainerNetworkDataOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ContainerNetworkData {
		return vs[0].([]ContainerNetworkData)[vs[1].(int)]
	}).(ContainerNetworkDataOutput)
}

type ContainerNetworksAdvanced struct {
	// The network aliases of the container in the specific network.
	Aliases []string `pulumi:"aliases"`
	// The IPV4 address of the container in the specific network.
	Ipv4Address *string `pulumi:"ipv4Address"`
	// The IPV6 address of the container in the specific network.
	Ipv6Address *string `pulumi:"ipv6Address"`
	Name string `pulumi:"name"`
}

type ContainerNetworksAdvancedInput interface {
	pulumi.Input

	ToContainerNetworksAdvancedOutput() ContainerNetworksAdvancedOutput
	ToContainerNetworksAdvancedOutputWithContext(context.Context) ContainerNetworksAdvancedOutput
}

type ContainerNetworksAdvancedArgs struct {
	// The network aliases of the container in the specific network.
	Aliases pulumi.StringArrayInput `pulumi:"aliases"`
	// The IPV4 address of the container in the specific network.
	Ipv4Address pulumi.StringPtrInput `pulumi:"ipv4Address"`
	// The IPV6 address of the container in the specific network.
	Ipv6Address pulumi.StringPtrInput `pulumi:"ipv6Address"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (ContainerNetworksAdvancedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworksAdvanced)(nil)).Elem()
}

func (i ContainerNetworksAdvancedArgs) ToContainerNetworksAdvancedOutput() ContainerNetworksAdvancedOutput {
	return i.ToContainerNetworksAdvancedOutputWithContext(context.Background())
}

func (i ContainerNetworksAdvancedArgs) ToContainerNetworksAdvancedOutputWithContext(ctx context.Context) ContainerNetworksAdvancedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworksAdvancedOutput)
}

type ContainerNetworksAdvancedArrayInput interface {
	pulumi.Input

	ToContainerNetworksAdvancedArrayOutput() ContainerNetworksAdvancedArrayOutput
	ToContainerNetworksAdvancedArrayOutputWithContext(context.Context) ContainerNetworksAdvancedArrayOutput
}

type ContainerNetworksAdvancedArray []ContainerNetworksAdvancedInput

func (ContainerNetworksAdvancedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworksAdvanced)(nil)).Elem()
}

func (i ContainerNetworksAdvancedArray) ToContainerNetworksAdvancedArrayOutput() ContainerNetworksAdvancedArrayOutput {
	return i.ToContainerNetworksAdvancedArrayOutputWithContext(context.Background())
}

func (i ContainerNetworksAdvancedArray) ToContainerNetworksAdvancedArrayOutputWithContext(ctx context.Context) ContainerNetworksAdvancedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworksAdvancedArrayOutput)
}

type ContainerNetworksAdvancedOutput struct { *pulumi.OutputState }

func (ContainerNetworksAdvancedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworksAdvanced)(nil)).Elem()
}

func (o ContainerNetworksAdvancedOutput) ToContainerNetworksAdvancedOutput() ContainerNetworksAdvancedOutput {
	return o
}

func (o ContainerNetworksAdvancedOutput) ToContainerNetworksAdvancedOutputWithContext(ctx context.Context) ContainerNetworksAdvancedOutput {
	return o
}

// The network aliases of the container in the specific network.
func (o ContainerNetworksAdvancedOutput) Aliases() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ContainerNetworksAdvanced) []string { return v.Aliases }).(pulumi.StringArrayOutput)
}

// The IPV4 address of the container in the specific network.
func (o ContainerNetworksAdvancedOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerNetworksAdvanced) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

// The IPV6 address of the container in the specific network.
func (o ContainerNetworksAdvancedOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerNetworksAdvanced) *string { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

func (o ContainerNetworksAdvancedOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ContainerNetworksAdvanced) string { return v.Name }).(pulumi.StringOutput)
}

type ContainerNetworksAdvancedArrayOutput struct { *pulumi.OutputState}

func (ContainerNetworksAdvancedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworksAdvanced)(nil)).Elem()
}

func (o ContainerNetworksAdvancedArrayOutput) ToContainerNetworksAdvancedArrayOutput() ContainerNetworksAdvancedArrayOutput {
	return o
}

func (o ContainerNetworksAdvancedArrayOutput) ToContainerNetworksAdvancedArrayOutputWithContext(ctx context.Context) ContainerNetworksAdvancedArrayOutput {
	return o
}

func (o ContainerNetworksAdvancedArrayOutput) Index(i pulumi.IntInput) ContainerNetworksAdvancedOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ContainerNetworksAdvanced {
		return vs[0].([]ContainerNetworksAdvanced)[vs[1].(int)]
	}).(ContainerNetworksAdvancedOutput)
}

type ContainerPort struct {
	// Port exposed out of the container. If not given a free random port `>= 32768` will be used.
	External *int `pulumi:"external"`
	// Port within the container.
	Internal int `pulumi:"internal"`
	// IP address this hostname should resolve to.
	Ip *string `pulumi:"ip"`
	// Protocol that can be used over this port,
	// defaults to `tcp`.
	Protocol *string `pulumi:"protocol"`
}

type ContainerPortInput interface {
	pulumi.Input

	ToContainerPortOutput() ContainerPortOutput
	ToContainerPortOutputWithContext(context.Context) ContainerPortOutput
}

type ContainerPortArgs struct {
	// Port exposed out of the container. If not given a free random port `>= 32768` will be used.
	External pulumi.IntPtrInput `pulumi:"external"`
	// Port within the container.
	Internal pulumi.IntInput `pulumi:"internal"`
	// IP address this hostname should resolve to.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Protocol that can be used over this port,
	// defaults to `tcp`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (ContainerPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPort)(nil)).Elem()
}

func (i ContainerPortArgs) ToContainerPortOutput() ContainerPortOutput {
	return i.ToContainerPortOutputWithContext(context.Background())
}

func (i ContainerPortArgs) ToContainerPortOutputWithContext(ctx context.Context) ContainerPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPortOutput)
}

type ContainerPortArrayInput interface {
	pulumi.Input

	ToContainerPortArrayOutput() ContainerPortArrayOutput
	ToContainerPortArrayOutputWithContext(context.Context) ContainerPortArrayOutput
}

type ContainerPortArray []ContainerPortInput

func (ContainerPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerPort)(nil)).Elem()
}

func (i ContainerPortArray) ToContainerPortArrayOutput() ContainerPortArrayOutput {
	return i.ToContainerPortArrayOutputWithContext(context.Background())
}

func (i ContainerPortArray) ToContainerPortArrayOutputWithContext(ctx context.Context) ContainerPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPortArrayOutput)
}

type ContainerPortOutput struct { *pulumi.OutputState }

func (ContainerPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPort)(nil)).Elem()
}

func (o ContainerPortOutput) ToContainerPortOutput() ContainerPortOutput {
	return o
}

func (o ContainerPortOutput) ToContainerPortOutputWithContext(ctx context.Context) ContainerPortOutput {
	return o
}

// Port exposed out of the container. If not given a free random port `>= 32768` will be used.
func (o ContainerPortOutput) External() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ContainerPort) *int { return v.External }).(pulumi.IntPtrOutput)
}

// Port within the container.
func (o ContainerPortOutput) Internal() pulumi.IntOutput {
	return o.ApplyT(func (v ContainerPort) int { return v.Internal }).(pulumi.IntOutput)
}

// IP address this hostname should resolve to.
func (o ContainerPortOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerPort) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Protocol that can be used over this port,
// defaults to `tcp`.
func (o ContainerPortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerPort) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type ContainerPortArrayOutput struct { *pulumi.OutputState}

func (ContainerPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerPort)(nil)).Elem()
}

func (o ContainerPortArrayOutput) ToContainerPortArrayOutput() ContainerPortArrayOutput {
	return o
}

func (o ContainerPortArrayOutput) ToContainerPortArrayOutputWithContext(ctx context.Context) ContainerPortArrayOutput {
	return o
}

func (o ContainerPortArrayOutput) Index(i pulumi.IntInput) ContainerPortOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ContainerPort {
		return vs[0].([]ContainerPort)[vs[1].(int)]
	}).(ContainerPortOutput)
}

type ContainerUlimit struct {
	Hard int `pulumi:"hard"`
	Name string `pulumi:"name"`
	Soft int `pulumi:"soft"`
}

type ContainerUlimitInput interface {
	pulumi.Input

	ToContainerUlimitOutput() ContainerUlimitOutput
	ToContainerUlimitOutputWithContext(context.Context) ContainerUlimitOutput
}

type ContainerUlimitArgs struct {
	Hard pulumi.IntInput `pulumi:"hard"`
	Name pulumi.StringInput `pulumi:"name"`
	Soft pulumi.IntInput `pulumi:"soft"`
}

func (ContainerUlimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerUlimit)(nil)).Elem()
}

func (i ContainerUlimitArgs) ToContainerUlimitOutput() ContainerUlimitOutput {
	return i.ToContainerUlimitOutputWithContext(context.Background())
}

func (i ContainerUlimitArgs) ToContainerUlimitOutputWithContext(ctx context.Context) ContainerUlimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerUlimitOutput)
}

type ContainerUlimitArrayInput interface {
	pulumi.Input

	ToContainerUlimitArrayOutput() ContainerUlimitArrayOutput
	ToContainerUlimitArrayOutputWithContext(context.Context) ContainerUlimitArrayOutput
}

type ContainerUlimitArray []ContainerUlimitInput

func (ContainerUlimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerUlimit)(nil)).Elem()
}

func (i ContainerUlimitArray) ToContainerUlimitArrayOutput() ContainerUlimitArrayOutput {
	return i.ToContainerUlimitArrayOutputWithContext(context.Background())
}

func (i ContainerUlimitArray) ToContainerUlimitArrayOutputWithContext(ctx context.Context) ContainerUlimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerUlimitArrayOutput)
}

type ContainerUlimitOutput struct { *pulumi.OutputState }

func (ContainerUlimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerUlimit)(nil)).Elem()
}

func (o ContainerUlimitOutput) ToContainerUlimitOutput() ContainerUlimitOutput {
	return o
}

func (o ContainerUlimitOutput) ToContainerUlimitOutputWithContext(ctx context.Context) ContainerUlimitOutput {
	return o
}

func (o ContainerUlimitOutput) Hard() pulumi.IntOutput {
	return o.ApplyT(func (v ContainerUlimit) int { return v.Hard }).(pulumi.IntOutput)
}

func (o ContainerUlimitOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ContainerUlimit) string { return v.Name }).(pulumi.StringOutput)
}

func (o ContainerUlimitOutput) Soft() pulumi.IntOutput {
	return o.ApplyT(func (v ContainerUlimit) int { return v.Soft }).(pulumi.IntOutput)
}

type ContainerUlimitArrayOutput struct { *pulumi.OutputState}

func (ContainerUlimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerUlimit)(nil)).Elem()
}

func (o ContainerUlimitArrayOutput) ToContainerUlimitArrayOutput() ContainerUlimitArrayOutput {
	return o
}

func (o ContainerUlimitArrayOutput) ToContainerUlimitArrayOutputWithContext(ctx context.Context) ContainerUlimitArrayOutput {
	return o
}

func (o ContainerUlimitArrayOutput) Index(i pulumi.IntInput) ContainerUlimitOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ContainerUlimit {
		return vs[0].([]ContainerUlimit)[vs[1].(int)]
	}).(ContainerUlimitOutput)
}

type ContainerUpload struct {
	// Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.
	Content *string `pulumi:"content"`
	ContentBase64 *string `pulumi:"contentBase64"`
	// If true, the file will be uploaded with user
	// executable permission.
	// Defaults to false.
	Executable *bool `pulumi:"executable"`
	// path to a file in the container.
	File string `pulumi:"file"`
	// A filename that references a file which will be uploaded as the object content. This allows for large file uploads that do not get stored in state.
	Source *string `pulumi:"source"`
	// If using `source`, this will force an update if the file content has updated but the filename has not. 
	SourceHash *string `pulumi:"sourceHash"`
}

type ContainerUploadInput interface {
	pulumi.Input

	ToContainerUploadOutput() ContainerUploadOutput
	ToContainerUploadOutputWithContext(context.Context) ContainerUploadOutput
}

type ContainerUploadArgs struct {
	// Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.
	Content pulumi.StringPtrInput `pulumi:"content"`
	ContentBase64 pulumi.StringPtrInput `pulumi:"contentBase64"`
	// If true, the file will be uploaded with user
	// executable permission.
	// Defaults to false.
	Executable pulumi.BoolPtrInput `pulumi:"executable"`
	// path to a file in the container.
	File pulumi.StringInput `pulumi:"file"`
	// A filename that references a file which will be uploaded as the object content. This allows for large file uploads that do not get stored in state.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// If using `source`, this will force an update if the file content has updated but the filename has not. 
	SourceHash pulumi.StringPtrInput `pulumi:"sourceHash"`
}

func (ContainerUploadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerUpload)(nil)).Elem()
}

func (i ContainerUploadArgs) ToContainerUploadOutput() ContainerUploadOutput {
	return i.ToContainerUploadOutputWithContext(context.Background())
}

func (i ContainerUploadArgs) ToContainerUploadOutputWithContext(ctx context.Context) ContainerUploadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerUploadOutput)
}

type ContainerUploadArrayInput interface {
	pulumi.Input

	ToContainerUploadArrayOutput() ContainerUploadArrayOutput
	ToContainerUploadArrayOutputWithContext(context.Context) ContainerUploadArrayOutput
}

type ContainerUploadArray []ContainerUploadInput

func (ContainerUploadArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerUpload)(nil)).Elem()
}

func (i ContainerUploadArray) ToContainerUploadArrayOutput() ContainerUploadArrayOutput {
	return i.ToContainerUploadArrayOutputWithContext(context.Background())
}

func (i ContainerUploadArray) ToContainerUploadArrayOutputWithContext(ctx context.Context) ContainerUploadArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerUploadArrayOutput)
}

type ContainerUploadOutput struct { *pulumi.OutputState }

func (ContainerUploadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerUpload)(nil)).Elem()
}

func (o ContainerUploadOutput) ToContainerUploadOutput() ContainerUploadOutput {
	return o
}

func (o ContainerUploadOutput) ToContainerUploadOutputWithContext(ctx context.Context) ContainerUploadOutput {
	return o
}

// Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.
func (o ContainerUploadOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerUpload) *string { return v.Content }).(pulumi.StringPtrOutput)
}

func (o ContainerUploadOutput) ContentBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerUpload) *string { return v.ContentBase64 }).(pulumi.StringPtrOutput)
}

// If true, the file will be uploaded with user
// executable permission.
// Defaults to false.
func (o ContainerUploadOutput) Executable() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ContainerUpload) *bool { return v.Executable }).(pulumi.BoolPtrOutput)
}

// path to a file in the container.
func (o ContainerUploadOutput) File() pulumi.StringOutput {
	return o.ApplyT(func (v ContainerUpload) string { return v.File }).(pulumi.StringOutput)
}

// A filename that references a file which will be uploaded as the object content. This allows for large file uploads that do not get stored in state.
func (o ContainerUploadOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerUpload) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// If using `source`, this will force an update if the file content has updated but the filename has not. 
func (o ContainerUploadOutput) SourceHash() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerUpload) *string { return v.SourceHash }).(pulumi.StringPtrOutput)
}

type ContainerUploadArrayOutput struct { *pulumi.OutputState}

func (ContainerUploadArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerUpload)(nil)).Elem()
}

func (o ContainerUploadArrayOutput) ToContainerUploadArrayOutput() ContainerUploadArrayOutput {
	return o
}

func (o ContainerUploadArrayOutput) ToContainerUploadArrayOutputWithContext(ctx context.Context) ContainerUploadArrayOutput {
	return o
}

func (o ContainerUploadArrayOutput) Index(i pulumi.IntInput) ContainerUploadOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ContainerUpload {
		return vs[0].([]ContainerUpload)[vs[1].(int)]
	}).(ContainerUploadOutput)
}

type ContainerVolume struct {
	// The path in the container where the
	// device will be binded.
	ContainerPath *string `pulumi:"containerPath"`
	// The container where the volume is
	// coming from.
	FromContainer *string `pulumi:"fromContainer"`
	// The path on the host where the device
	// is located.
	HostPath *string `pulumi:"hostPath"`
	// If true, this volume will be readonly.
	// Defaults to false.
	ReadOnly *bool `pulumi:"readOnly"`
	// The name of the docker volume which
	// should be mounted.
	VolumeName *string `pulumi:"volumeName"`
}

type ContainerVolumeInput interface {
	pulumi.Input

	ToContainerVolumeOutput() ContainerVolumeOutput
	ToContainerVolumeOutputWithContext(context.Context) ContainerVolumeOutput
}

type ContainerVolumeArgs struct {
	// The path in the container where the
	// device will be binded.
	ContainerPath pulumi.StringPtrInput `pulumi:"containerPath"`
	// The container where the volume is
	// coming from.
	FromContainer pulumi.StringPtrInput `pulumi:"fromContainer"`
	// The path on the host where the device
	// is located.
	HostPath pulumi.StringPtrInput `pulumi:"hostPath"`
	// If true, this volume will be readonly.
	// Defaults to false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// The name of the docker volume which
	// should be mounted.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
}

func (ContainerVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerVolume)(nil)).Elem()
}

func (i ContainerVolumeArgs) ToContainerVolumeOutput() ContainerVolumeOutput {
	return i.ToContainerVolumeOutputWithContext(context.Background())
}

func (i ContainerVolumeArgs) ToContainerVolumeOutputWithContext(ctx context.Context) ContainerVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerVolumeOutput)
}

type ContainerVolumeArrayInput interface {
	pulumi.Input

	ToContainerVolumeArrayOutput() ContainerVolumeArrayOutput
	ToContainerVolumeArrayOutputWithContext(context.Context) ContainerVolumeArrayOutput
}

type ContainerVolumeArray []ContainerVolumeInput

func (ContainerVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerVolume)(nil)).Elem()
}

func (i ContainerVolumeArray) ToContainerVolumeArrayOutput() ContainerVolumeArrayOutput {
	return i.ToContainerVolumeArrayOutputWithContext(context.Background())
}

func (i ContainerVolumeArray) ToContainerVolumeArrayOutputWithContext(ctx context.Context) ContainerVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerVolumeArrayOutput)
}

type ContainerVolumeOutput struct { *pulumi.OutputState }

func (ContainerVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerVolume)(nil)).Elem()
}

func (o ContainerVolumeOutput) ToContainerVolumeOutput() ContainerVolumeOutput {
	return o
}

func (o ContainerVolumeOutput) ToContainerVolumeOutputWithContext(ctx context.Context) ContainerVolumeOutput {
	return o
}

// The path in the container where the
// device will be binded.
func (o ContainerVolumeOutput) ContainerPath() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerVolume) *string { return v.ContainerPath }).(pulumi.StringPtrOutput)
}

// The container where the volume is
// coming from.
func (o ContainerVolumeOutput) FromContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerVolume) *string { return v.FromContainer }).(pulumi.StringPtrOutput)
}

// The path on the host where the device
// is located.
func (o ContainerVolumeOutput) HostPath() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerVolume) *string { return v.HostPath }).(pulumi.StringPtrOutput)
}

// If true, this volume will be readonly.
// Defaults to false.
func (o ContainerVolumeOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ContainerVolume) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// The name of the docker volume which
// should be mounted.
func (o ContainerVolumeOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ContainerVolume) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type ContainerVolumeArrayOutput struct { *pulumi.OutputState}

func (ContainerVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerVolume)(nil)).Elem()
}

func (o ContainerVolumeArrayOutput) ToContainerVolumeArrayOutput() ContainerVolumeArrayOutput {
	return o
}

func (o ContainerVolumeArrayOutput) ToContainerVolumeArrayOutputWithContext(ctx context.Context) ContainerVolumeArrayOutput {
	return o
}

func (o ContainerVolumeArrayOutput) Index(i pulumi.IntInput) ContainerVolumeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ContainerVolume {
		return vs[0].([]ContainerVolume)[vs[1].(int)]
	}).(ContainerVolumeOutput)
}

type NetworkIpamConfig struct {
	AuxAddress map[string]interface{} `pulumi:"auxAddress"`
	Gateway *string `pulumi:"gateway"`
	IpRange *string `pulumi:"ipRange"`
	Subnet *string `pulumi:"subnet"`
}

type NetworkIpamConfigInput interface {
	pulumi.Input

	ToNetworkIpamConfigOutput() NetworkIpamConfigOutput
	ToNetworkIpamConfigOutputWithContext(context.Context) NetworkIpamConfigOutput
}

type NetworkIpamConfigArgs struct {
	AuxAddress pulumi.MapInput `pulumi:"auxAddress"`
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	IpRange pulumi.StringPtrInput `pulumi:"ipRange"`
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (NetworkIpamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIpamConfig)(nil)).Elem()
}

func (i NetworkIpamConfigArgs) ToNetworkIpamConfigOutput() NetworkIpamConfigOutput {
	return i.ToNetworkIpamConfigOutputWithContext(context.Background())
}

func (i NetworkIpamConfigArgs) ToNetworkIpamConfigOutputWithContext(ctx context.Context) NetworkIpamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIpamConfigOutput)
}

type NetworkIpamConfigArrayInput interface {
	pulumi.Input

	ToNetworkIpamConfigArrayOutput() NetworkIpamConfigArrayOutput
	ToNetworkIpamConfigArrayOutputWithContext(context.Context) NetworkIpamConfigArrayOutput
}

type NetworkIpamConfigArray []NetworkIpamConfigInput

func (NetworkIpamConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkIpamConfig)(nil)).Elem()
}

func (i NetworkIpamConfigArray) ToNetworkIpamConfigArrayOutput() NetworkIpamConfigArrayOutput {
	return i.ToNetworkIpamConfigArrayOutputWithContext(context.Background())
}

func (i NetworkIpamConfigArray) ToNetworkIpamConfigArrayOutputWithContext(ctx context.Context) NetworkIpamConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIpamConfigArrayOutput)
}

type NetworkIpamConfigOutput struct { *pulumi.OutputState }

func (NetworkIpamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIpamConfig)(nil)).Elem()
}

func (o NetworkIpamConfigOutput) ToNetworkIpamConfigOutput() NetworkIpamConfigOutput {
	return o
}

func (o NetworkIpamConfigOutput) ToNetworkIpamConfigOutputWithContext(ctx context.Context) NetworkIpamConfigOutput {
	return o
}

func (o NetworkIpamConfigOutput) AuxAddress() pulumi.MapOutput {
	return o.ApplyT(func (v NetworkIpamConfig) map[string]interface{} { return v.AuxAddress }).(pulumi.MapOutput)
}

func (o NetworkIpamConfigOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func (v NetworkIpamConfig) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o NetworkIpamConfigOutput) IpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func (v NetworkIpamConfig) *string { return v.IpRange }).(pulumi.StringPtrOutput)
}

func (o NetworkIpamConfigOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func (v NetworkIpamConfig) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type NetworkIpamConfigArrayOutput struct { *pulumi.OutputState}

func (NetworkIpamConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkIpamConfig)(nil)).Elem()
}

func (o NetworkIpamConfigArrayOutput) ToNetworkIpamConfigArrayOutput() NetworkIpamConfigArrayOutput {
	return o
}

func (o NetworkIpamConfigArrayOutput) ToNetworkIpamConfigArrayOutputWithContext(ctx context.Context) NetworkIpamConfigArrayOutput {
	return o
}

func (o NetworkIpamConfigArrayOutput) Index(i pulumi.IntInput) NetworkIpamConfigOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) NetworkIpamConfig {
		return vs[0].([]NetworkIpamConfig)[vs[1].(int)]
	}).(NetworkIpamConfigOutput)
}

type NetworkLabel struct {
	// Name of the label
	// * `value` (Required, string) Value of the label
	Label string `pulumi:"label"`
	Value string `pulumi:"value"`
}

type NetworkLabelInput interface {
	pulumi.Input

	ToNetworkLabelOutput() NetworkLabelOutput
	ToNetworkLabelOutputWithContext(context.Context) NetworkLabelOutput
}

type NetworkLabelArgs struct {
	// Name of the label
	// * `value` (Required, string) Value of the label
	Label pulumi.StringInput `pulumi:"label"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetworkLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLabel)(nil)).Elem()
}

func (i NetworkLabelArgs) ToNetworkLabelOutput() NetworkLabelOutput {
	return i.ToNetworkLabelOutputWithContext(context.Background())
}

func (i NetworkLabelArgs) ToNetworkLabelOutputWithContext(ctx context.Context) NetworkLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLabelOutput)
}

type NetworkLabelArrayInput interface {
	pulumi.Input

	ToNetworkLabelArrayOutput() NetworkLabelArrayOutput
	ToNetworkLabelArrayOutputWithContext(context.Context) NetworkLabelArrayOutput
}

type NetworkLabelArray []NetworkLabelInput

func (NetworkLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkLabel)(nil)).Elem()
}

func (i NetworkLabelArray) ToNetworkLabelArrayOutput() NetworkLabelArrayOutput {
	return i.ToNetworkLabelArrayOutputWithContext(context.Background())
}

func (i NetworkLabelArray) ToNetworkLabelArrayOutputWithContext(ctx context.Context) NetworkLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLabelArrayOutput)
}

type NetworkLabelOutput struct { *pulumi.OutputState }

func (NetworkLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLabel)(nil)).Elem()
}

func (o NetworkLabelOutput) ToNetworkLabelOutput() NetworkLabelOutput {
	return o
}

func (o NetworkLabelOutput) ToNetworkLabelOutputWithContext(ctx context.Context) NetworkLabelOutput {
	return o
}

// Name of the label
// * `value` (Required, string) Value of the label
func (o NetworkLabelOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func (v NetworkLabel) string { return v.Label }).(pulumi.StringOutput)
}

func (o NetworkLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v NetworkLabel) string { return v.Value }).(pulumi.StringOutput)
}

type NetworkLabelArrayOutput struct { *pulumi.OutputState}

func (NetworkLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkLabel)(nil)).Elem()
}

func (o NetworkLabelArrayOutput) ToNetworkLabelArrayOutput() NetworkLabelArrayOutput {
	return o
}

func (o NetworkLabelArrayOutput) ToNetworkLabelArrayOutputWithContext(ctx context.Context) NetworkLabelArrayOutput {
	return o
}

func (o NetworkLabelArrayOutput) Index(i pulumi.IntInput) NetworkLabelOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) NetworkLabel {
		return vs[0].([]NetworkLabel)[vs[1].(int)]
	}).(NetworkLabelOutput)
}

type SecretLabel struct {
	// Name of the label
	// * `value` (Required, string) Value of the label
	Label string `pulumi:"label"`
	Value string `pulumi:"value"`
}

type SecretLabelInput interface {
	pulumi.Input

	ToSecretLabelOutput() SecretLabelOutput
	ToSecretLabelOutputWithContext(context.Context) SecretLabelOutput
}

type SecretLabelArgs struct {
	// Name of the label
	// * `value` (Required, string) Value of the label
	Label pulumi.StringInput `pulumi:"label"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (SecretLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretLabel)(nil)).Elem()
}

func (i SecretLabelArgs) ToSecretLabelOutput() SecretLabelOutput {
	return i.ToSecretLabelOutputWithContext(context.Background())
}

func (i SecretLabelArgs) ToSecretLabelOutputWithContext(ctx context.Context) SecretLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretLabelOutput)
}

type SecretLabelArrayInput interface {
	pulumi.Input

	ToSecretLabelArrayOutput() SecretLabelArrayOutput
	ToSecretLabelArrayOutputWithContext(context.Context) SecretLabelArrayOutput
}

type SecretLabelArray []SecretLabelInput

func (SecretLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretLabel)(nil)).Elem()
}

func (i SecretLabelArray) ToSecretLabelArrayOutput() SecretLabelArrayOutput {
	return i.ToSecretLabelArrayOutputWithContext(context.Background())
}

func (i SecretLabelArray) ToSecretLabelArrayOutputWithContext(ctx context.Context) SecretLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretLabelArrayOutput)
}

type SecretLabelOutput struct { *pulumi.OutputState }

func (SecretLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretLabel)(nil)).Elem()
}

func (o SecretLabelOutput) ToSecretLabelOutput() SecretLabelOutput {
	return o
}

func (o SecretLabelOutput) ToSecretLabelOutputWithContext(ctx context.Context) SecretLabelOutput {
	return o
}

// Name of the label
// * `value` (Required, string) Value of the label
func (o SecretLabelOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func (v SecretLabel) string { return v.Label }).(pulumi.StringOutput)
}

func (o SecretLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v SecretLabel) string { return v.Value }).(pulumi.StringOutput)
}

type SecretLabelArrayOutput struct { *pulumi.OutputState}

func (SecretLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretLabel)(nil)).Elem()
}

func (o SecretLabelArrayOutput) ToSecretLabelArrayOutput() SecretLabelArrayOutput {
	return o
}

func (o SecretLabelArrayOutput) ToSecretLabelArrayOutputWithContext(ctx context.Context) SecretLabelArrayOutput {
	return o
}

func (o SecretLabelArrayOutput) Index(i pulumi.IntInput) SecretLabelOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) SecretLabel {
		return vs[0].([]SecretLabel)[vs[1].(int)]
	}).(SecretLabelOutput)
}

type ServiceAuth struct {
	// The password to use for authenticating to the registry. If this is blank, the `DOCKER_REGISTRY_PASS` is also be checked.
	Password *string `pulumi:"password"`
	// The address of the registry server
	ServerAddress string `pulumi:"serverAddress"`
	// The username to use for authenticating to the registry. If this is blank, the `DOCKER_REGISTRY_USER` is also be checked. 
	Username *string `pulumi:"username"`
}

type ServiceAuthInput interface {
	pulumi.Input

	ToServiceAuthOutput() ServiceAuthOutput
	ToServiceAuthOutputWithContext(context.Context) ServiceAuthOutput
}

type ServiceAuthArgs struct {
	// The password to use for authenticating to the registry. If this is blank, the `DOCKER_REGISTRY_PASS` is also be checked.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The address of the registry server
	ServerAddress pulumi.StringInput `pulumi:"serverAddress"`
	// The username to use for authenticating to the registry. If this is blank, the `DOCKER_REGISTRY_USER` is also be checked. 
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ServiceAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAuth)(nil)).Elem()
}

func (i ServiceAuthArgs) ToServiceAuthOutput() ServiceAuthOutput {
	return i.ToServiceAuthOutputWithContext(context.Background())
}

func (i ServiceAuthArgs) ToServiceAuthOutputWithContext(ctx context.Context) ServiceAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAuthOutput)
}

func (i ServiceAuthArgs) ToServiceAuthPtrOutput() ServiceAuthPtrOutput {
	return i.ToServiceAuthPtrOutputWithContext(context.Background())
}

func (i ServiceAuthArgs) ToServiceAuthPtrOutputWithContext(ctx context.Context) ServiceAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAuthOutput).ToServiceAuthPtrOutputWithContext(ctx)
}

type ServiceAuthPtrInput interface {
	pulumi.Input

	ToServiceAuthPtrOutput() ServiceAuthPtrOutput
	ToServiceAuthPtrOutputWithContext(context.Context) ServiceAuthPtrOutput
}

type serviceAuthPtrType ServiceAuthArgs

func ServiceAuthPtr(v *ServiceAuthArgs) ServiceAuthPtrInput {	return (*serviceAuthPtrType)(v)
}

func (*serviceAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAuth)(nil)).Elem()
}

func (i *serviceAuthPtrType) ToServiceAuthPtrOutput() ServiceAuthPtrOutput {
	return i.ToServiceAuthPtrOutputWithContext(context.Background())
}

func (i *serviceAuthPtrType) ToServiceAuthPtrOutputWithContext(ctx context.Context) ServiceAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAuthPtrOutput)
}

type ServiceAuthOutput struct { *pulumi.OutputState }

func (ServiceAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAuth)(nil)).Elem()
}

func (o ServiceAuthOutput) ToServiceAuthOutput() ServiceAuthOutput {
	return o
}

func (o ServiceAuthOutput) ToServiceAuthOutputWithContext(ctx context.Context) ServiceAuthOutput {
	return o
}

func (o ServiceAuthOutput) ToServiceAuthPtrOutput() ServiceAuthPtrOutput {
	return o.ToServiceAuthPtrOutputWithContext(context.Background())
}

func (o ServiceAuthOutput) ToServiceAuthPtrOutputWithContext(ctx context.Context) ServiceAuthPtrOutput {
	return o.ApplyT(func(v ServiceAuth) *ServiceAuth {
		return &v
	}).(ServiceAuthPtrOutput)
}
// The password to use for authenticating to the registry. If this is blank, the `DOCKER_REGISTRY_PASS` is also be checked.
func (o ServiceAuthOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceAuth) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The address of the registry server
func (o ServiceAuthOutput) ServerAddress() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceAuth) string { return v.ServerAddress }).(pulumi.StringOutput)
}

// The username to use for authenticating to the registry. If this is blank, the `DOCKER_REGISTRY_USER` is also be checked. 
func (o ServiceAuthOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceAuth) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ServiceAuthPtrOutput struct { *pulumi.OutputState}

func (ServiceAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAuth)(nil)).Elem()
}

func (o ServiceAuthPtrOutput) ToServiceAuthPtrOutput() ServiceAuthPtrOutput {
	return o
}

func (o ServiceAuthPtrOutput) ToServiceAuthPtrOutputWithContext(ctx context.Context) ServiceAuthPtrOutput {
	return o
}

func (o ServiceAuthPtrOutput) Elem() ServiceAuthOutput {
	return o.ApplyT(func (v *ServiceAuth) ServiceAuth { return *v }).(ServiceAuthOutput)
}

// The password to use for authenticating to the registry. If this is blank, the `DOCKER_REGISTRY_PASS` is also be checked.
func (o ServiceAuthPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceAuth) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The address of the registry server
func (o ServiceAuthPtrOutput) ServerAddress() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceAuth) string { return v.ServerAddress }).(pulumi.StringOutput)
}

// The username to use for authenticating to the registry. If this is blank, the `DOCKER_REGISTRY_USER` is also be checked. 
func (o ServiceAuthPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceAuth) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ServiceConvergeConfig struct {
	Delay *string `pulumi:"delay"`
	Timeout *string `pulumi:"timeout"`
}

type ServiceConvergeConfigInput interface {
	pulumi.Input

	ToServiceConvergeConfigOutput() ServiceConvergeConfigOutput
	ToServiceConvergeConfigOutputWithContext(context.Context) ServiceConvergeConfigOutput
}

type ServiceConvergeConfigArgs struct {
	Delay pulumi.StringPtrInput `pulumi:"delay"`
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (ServiceConvergeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConvergeConfig)(nil)).Elem()
}

func (i ServiceConvergeConfigArgs) ToServiceConvergeConfigOutput() ServiceConvergeConfigOutput {
	return i.ToServiceConvergeConfigOutputWithContext(context.Background())
}

func (i ServiceConvergeConfigArgs) ToServiceConvergeConfigOutputWithContext(ctx context.Context) ServiceConvergeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConvergeConfigOutput)
}

func (i ServiceConvergeConfigArgs) ToServiceConvergeConfigPtrOutput() ServiceConvergeConfigPtrOutput {
	return i.ToServiceConvergeConfigPtrOutputWithContext(context.Background())
}

func (i ServiceConvergeConfigArgs) ToServiceConvergeConfigPtrOutputWithContext(ctx context.Context) ServiceConvergeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConvergeConfigOutput).ToServiceConvergeConfigPtrOutputWithContext(ctx)
}

type ServiceConvergeConfigPtrInput interface {
	pulumi.Input

	ToServiceConvergeConfigPtrOutput() ServiceConvergeConfigPtrOutput
	ToServiceConvergeConfigPtrOutputWithContext(context.Context) ServiceConvergeConfigPtrOutput
}

type serviceConvergeConfigPtrType ServiceConvergeConfigArgs

func ServiceConvergeConfigPtr(v *ServiceConvergeConfigArgs) ServiceConvergeConfigPtrInput {	return (*serviceConvergeConfigPtrType)(v)
}

func (*serviceConvergeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConvergeConfig)(nil)).Elem()
}

func (i *serviceConvergeConfigPtrType) ToServiceConvergeConfigPtrOutput() ServiceConvergeConfigPtrOutput {
	return i.ToServiceConvergeConfigPtrOutputWithContext(context.Background())
}

func (i *serviceConvergeConfigPtrType) ToServiceConvergeConfigPtrOutputWithContext(ctx context.Context) ServiceConvergeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConvergeConfigPtrOutput)
}

type ServiceConvergeConfigOutput struct { *pulumi.OutputState }

func (ServiceConvergeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConvergeConfig)(nil)).Elem()
}

func (o ServiceConvergeConfigOutput) ToServiceConvergeConfigOutput() ServiceConvergeConfigOutput {
	return o
}

func (o ServiceConvergeConfigOutput) ToServiceConvergeConfigOutputWithContext(ctx context.Context) ServiceConvergeConfigOutput {
	return o
}

func (o ServiceConvergeConfigOutput) ToServiceConvergeConfigPtrOutput() ServiceConvergeConfigPtrOutput {
	return o.ToServiceConvergeConfigPtrOutputWithContext(context.Background())
}

func (o ServiceConvergeConfigOutput) ToServiceConvergeConfigPtrOutputWithContext(ctx context.Context) ServiceConvergeConfigPtrOutput {
	return o.ApplyT(func(v ServiceConvergeConfig) *ServiceConvergeConfig {
		return &v
	}).(ServiceConvergeConfigPtrOutput)
}
func (o ServiceConvergeConfigOutput) Delay() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceConvergeConfig) *string { return v.Delay }).(pulumi.StringPtrOutput)
}

func (o ServiceConvergeConfigOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceConvergeConfig) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ServiceConvergeConfigPtrOutput struct { *pulumi.OutputState}

func (ServiceConvergeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConvergeConfig)(nil)).Elem()
}

func (o ServiceConvergeConfigPtrOutput) ToServiceConvergeConfigPtrOutput() ServiceConvergeConfigPtrOutput {
	return o
}

func (o ServiceConvergeConfigPtrOutput) ToServiceConvergeConfigPtrOutputWithContext(ctx context.Context) ServiceConvergeConfigPtrOutput {
	return o
}

func (o ServiceConvergeConfigPtrOutput) Elem() ServiceConvergeConfigOutput {
	return o.ApplyT(func (v *ServiceConvergeConfig) ServiceConvergeConfig { return *v }).(ServiceConvergeConfigOutput)
}

func (o ServiceConvergeConfigPtrOutput) Delay() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceConvergeConfig) *string { return v.Delay }).(pulumi.StringPtrOutput)
}

func (o ServiceConvergeConfigPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceConvergeConfig) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ServiceEndpointSpec struct {
	// The mode of resolution to use for internal load balancing between tasks. `(vip|dnsrr)`. Default: `vip`.
	Mode *string `pulumi:"mode"`
	// See Ports below for details.
	Ports []ServiceEndpointSpecPort `pulumi:"ports"`
}

type ServiceEndpointSpecInput interface {
	pulumi.Input

	ToServiceEndpointSpecOutput() ServiceEndpointSpecOutput
	ToServiceEndpointSpecOutputWithContext(context.Context) ServiceEndpointSpecOutput
}

type ServiceEndpointSpecArgs struct {
	// The mode of resolution to use for internal load balancing between tasks. `(vip|dnsrr)`. Default: `vip`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// See Ports below for details.
	Ports ServiceEndpointSpecPortArrayInput `pulumi:"ports"`
}

func (ServiceEndpointSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointSpec)(nil)).Elem()
}

func (i ServiceEndpointSpecArgs) ToServiceEndpointSpecOutput() ServiceEndpointSpecOutput {
	return i.ToServiceEndpointSpecOutputWithContext(context.Background())
}

func (i ServiceEndpointSpecArgs) ToServiceEndpointSpecOutputWithContext(ctx context.Context) ServiceEndpointSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointSpecOutput)
}

func (i ServiceEndpointSpecArgs) ToServiceEndpointSpecPtrOutput() ServiceEndpointSpecPtrOutput {
	return i.ToServiceEndpointSpecPtrOutputWithContext(context.Background())
}

func (i ServiceEndpointSpecArgs) ToServiceEndpointSpecPtrOutputWithContext(ctx context.Context) ServiceEndpointSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointSpecOutput).ToServiceEndpointSpecPtrOutputWithContext(ctx)
}

type ServiceEndpointSpecPtrInput interface {
	pulumi.Input

	ToServiceEndpointSpecPtrOutput() ServiceEndpointSpecPtrOutput
	ToServiceEndpointSpecPtrOutputWithContext(context.Context) ServiceEndpointSpecPtrOutput
}

type serviceEndpointSpecPtrType ServiceEndpointSpecArgs

func ServiceEndpointSpecPtr(v *ServiceEndpointSpecArgs) ServiceEndpointSpecPtrInput {	return (*serviceEndpointSpecPtrType)(v)
}

func (*serviceEndpointSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEndpointSpec)(nil)).Elem()
}

func (i *serviceEndpointSpecPtrType) ToServiceEndpointSpecPtrOutput() ServiceEndpointSpecPtrOutput {
	return i.ToServiceEndpointSpecPtrOutputWithContext(context.Background())
}

func (i *serviceEndpointSpecPtrType) ToServiceEndpointSpecPtrOutputWithContext(ctx context.Context) ServiceEndpointSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointSpecPtrOutput)
}

type ServiceEndpointSpecOutput struct { *pulumi.OutputState }

func (ServiceEndpointSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointSpec)(nil)).Elem()
}

func (o ServiceEndpointSpecOutput) ToServiceEndpointSpecOutput() ServiceEndpointSpecOutput {
	return o
}

func (o ServiceEndpointSpecOutput) ToServiceEndpointSpecOutputWithContext(ctx context.Context) ServiceEndpointSpecOutput {
	return o
}

func (o ServiceEndpointSpecOutput) ToServiceEndpointSpecPtrOutput() ServiceEndpointSpecPtrOutput {
	return o.ToServiceEndpointSpecPtrOutputWithContext(context.Background())
}

func (o ServiceEndpointSpecOutput) ToServiceEndpointSpecPtrOutputWithContext(ctx context.Context) ServiceEndpointSpecPtrOutput {
	return o.ApplyT(func(v ServiceEndpointSpec) *ServiceEndpointSpec {
		return &v
	}).(ServiceEndpointSpecPtrOutput)
}
// The mode of resolution to use for internal load balancing between tasks. `(vip|dnsrr)`. Default: `vip`.
func (o ServiceEndpointSpecOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceEndpointSpec) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// See Ports below for details.
func (o ServiceEndpointSpecOutput) Ports() ServiceEndpointSpecPortArrayOutput {
	return o.ApplyT(func (v ServiceEndpointSpec) []ServiceEndpointSpecPort { return v.Ports }).(ServiceEndpointSpecPortArrayOutput)
}

type ServiceEndpointSpecPtrOutput struct { *pulumi.OutputState}

func (ServiceEndpointSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEndpointSpec)(nil)).Elem()
}

func (o ServiceEndpointSpecPtrOutput) ToServiceEndpointSpecPtrOutput() ServiceEndpointSpecPtrOutput {
	return o
}

func (o ServiceEndpointSpecPtrOutput) ToServiceEndpointSpecPtrOutputWithContext(ctx context.Context) ServiceEndpointSpecPtrOutput {
	return o
}

func (o ServiceEndpointSpecPtrOutput) Elem() ServiceEndpointSpecOutput {
	return o.ApplyT(func (v *ServiceEndpointSpec) ServiceEndpointSpec { return *v }).(ServiceEndpointSpecOutput)
}

// The mode of resolution to use for internal load balancing between tasks. `(vip|dnsrr)`. Default: `vip`.
func (o ServiceEndpointSpecPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceEndpointSpec) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// See Ports below for details.
func (o ServiceEndpointSpecPtrOutput) Ports() ServiceEndpointSpecPortArrayOutput {
	return o.ApplyT(func (v ServiceEndpointSpec) []ServiceEndpointSpecPort { return v.Ports }).(ServiceEndpointSpecPortArrayOutput)
}

type ServiceEndpointSpecPort struct {
	// A random name for the port.
	Name *string `pulumi:"name"`
	// Protocol that can be used over this port: `tcp|udp|sctp`. Default: `tcp`.
	Protocol *string `pulumi:"protocol"`
	// Represents the mode in which the port is to be published: `ingress|host`
	PublishMode *string `pulumi:"publishMode"`
	// The port on the swarm hosts. If not set the value of `targetPort` will be used.
	PublishedPort *int `pulumi:"publishedPort"`
	// Port inside the container.
	TargetPort int `pulumi:"targetPort"`
}

type ServiceEndpointSpecPortInput interface {
	pulumi.Input

	ToServiceEndpointSpecPortOutput() ServiceEndpointSpecPortOutput
	ToServiceEndpointSpecPortOutputWithContext(context.Context) ServiceEndpointSpecPortOutput
}

type ServiceEndpointSpecPortArgs struct {
	// A random name for the port.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol that can be used over this port: `tcp|udp|sctp`. Default: `tcp`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Represents the mode in which the port is to be published: `ingress|host`
	PublishMode pulumi.StringPtrInput `pulumi:"publishMode"`
	// The port on the swarm hosts. If not set the value of `targetPort` will be used.
	PublishedPort pulumi.IntPtrInput `pulumi:"publishedPort"`
	// Port inside the container.
	TargetPort pulumi.IntInput `pulumi:"targetPort"`
}

func (ServiceEndpointSpecPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointSpecPort)(nil)).Elem()
}

func (i ServiceEndpointSpecPortArgs) ToServiceEndpointSpecPortOutput() ServiceEndpointSpecPortOutput {
	return i.ToServiceEndpointSpecPortOutputWithContext(context.Background())
}

func (i ServiceEndpointSpecPortArgs) ToServiceEndpointSpecPortOutputWithContext(ctx context.Context) ServiceEndpointSpecPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointSpecPortOutput)
}

type ServiceEndpointSpecPortArrayInput interface {
	pulumi.Input

	ToServiceEndpointSpecPortArrayOutput() ServiceEndpointSpecPortArrayOutput
	ToServiceEndpointSpecPortArrayOutputWithContext(context.Context) ServiceEndpointSpecPortArrayOutput
}

type ServiceEndpointSpecPortArray []ServiceEndpointSpecPortInput

func (ServiceEndpointSpecPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointSpecPort)(nil)).Elem()
}

func (i ServiceEndpointSpecPortArray) ToServiceEndpointSpecPortArrayOutput() ServiceEndpointSpecPortArrayOutput {
	return i.ToServiceEndpointSpecPortArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointSpecPortArray) ToServiceEndpointSpecPortArrayOutputWithContext(ctx context.Context) ServiceEndpointSpecPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointSpecPortArrayOutput)
}

type ServiceEndpointSpecPortOutput struct { *pulumi.OutputState }

func (ServiceEndpointSpecPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointSpecPort)(nil)).Elem()
}

func (o ServiceEndpointSpecPortOutput) ToServiceEndpointSpecPortOutput() ServiceEndpointSpecPortOutput {
	return o
}

func (o ServiceEndpointSpecPortOutput) ToServiceEndpointSpecPortOutputWithContext(ctx context.Context) ServiceEndpointSpecPortOutput {
	return o
}

// A random name for the port.
func (o ServiceEndpointSpecPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceEndpointSpecPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol that can be used over this port: `tcp|udp|sctp`. Default: `tcp`.
func (o ServiceEndpointSpecPortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceEndpointSpecPort) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Represents the mode in which the port is to be published: `ingress|host`
func (o ServiceEndpointSpecPortOutput) PublishMode() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceEndpointSpecPort) *string { return v.PublishMode }).(pulumi.StringPtrOutput)
}

// The port on the swarm hosts. If not set the value of `targetPort` will be used.
func (o ServiceEndpointSpecPortOutput) PublishedPort() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceEndpointSpecPort) *int { return v.PublishedPort }).(pulumi.IntPtrOutput)
}

// Port inside the container.
func (o ServiceEndpointSpecPortOutput) TargetPort() pulumi.IntOutput {
	return o.ApplyT(func (v ServiceEndpointSpecPort) int { return v.TargetPort }).(pulumi.IntOutput)
}

type ServiceEndpointSpecPortArrayOutput struct { *pulumi.OutputState}

func (ServiceEndpointSpecPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointSpecPort)(nil)).Elem()
}

func (o ServiceEndpointSpecPortArrayOutput) ToServiceEndpointSpecPortArrayOutput() ServiceEndpointSpecPortArrayOutput {
	return o
}

func (o ServiceEndpointSpecPortArrayOutput) ToServiceEndpointSpecPortArrayOutputWithContext(ctx context.Context) ServiceEndpointSpecPortArrayOutput {
	return o
}

func (o ServiceEndpointSpecPortArrayOutput) Index(i pulumi.IntInput) ServiceEndpointSpecPortOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ServiceEndpointSpecPort {
		return vs[0].([]ServiceEndpointSpecPort)[vs[1].(int)]
	}).(ServiceEndpointSpecPortOutput)
}

type ServiceLabel struct {
	Label string `pulumi:"label"`
	Value string `pulumi:"value"`
}

type ServiceLabelInput interface {
	pulumi.Input

	ToServiceLabelOutput() ServiceLabelOutput
	ToServiceLabelOutputWithContext(context.Context) ServiceLabelOutput
}

type ServiceLabelArgs struct {
	Label pulumi.StringInput `pulumi:"label"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServiceLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLabel)(nil)).Elem()
}

func (i ServiceLabelArgs) ToServiceLabelOutput() ServiceLabelOutput {
	return i.ToServiceLabelOutputWithContext(context.Background())
}

func (i ServiceLabelArgs) ToServiceLabelOutputWithContext(ctx context.Context) ServiceLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLabelOutput)
}

type ServiceLabelArrayInput interface {
	pulumi.Input

	ToServiceLabelArrayOutput() ServiceLabelArrayOutput
	ToServiceLabelArrayOutputWithContext(context.Context) ServiceLabelArrayOutput
}

type ServiceLabelArray []ServiceLabelInput

func (ServiceLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLabel)(nil)).Elem()
}

func (i ServiceLabelArray) ToServiceLabelArrayOutput() ServiceLabelArrayOutput {
	return i.ToServiceLabelArrayOutputWithContext(context.Background())
}

func (i ServiceLabelArray) ToServiceLabelArrayOutputWithContext(ctx context.Context) ServiceLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLabelArrayOutput)
}

type ServiceLabelOutput struct { *pulumi.OutputState }

func (ServiceLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLabel)(nil)).Elem()
}

func (o ServiceLabelOutput) ToServiceLabelOutput() ServiceLabelOutput {
	return o
}

func (o ServiceLabelOutput) ToServiceLabelOutputWithContext(ctx context.Context) ServiceLabelOutput {
	return o
}

func (o ServiceLabelOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceLabel) string { return v.Label }).(pulumi.StringOutput)
}

func (o ServiceLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceLabel) string { return v.Value }).(pulumi.StringOutput)
}

type ServiceLabelArrayOutput struct { *pulumi.OutputState}

func (ServiceLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLabel)(nil)).Elem()
}

func (o ServiceLabelArrayOutput) ToServiceLabelArrayOutput() ServiceLabelArrayOutput {
	return o
}

func (o ServiceLabelArrayOutput) ToServiceLabelArrayOutputWithContext(ctx context.Context) ServiceLabelArrayOutput {
	return o
}

func (o ServiceLabelArrayOutput) Index(i pulumi.IntInput) ServiceLabelOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ServiceLabel {
		return vs[0].([]ServiceLabel)[vs[1].(int)]
	}).(ServiceLabelOutput)
}

type ServiceMode struct {
	Global *bool `pulumi:"global"`
	Replicated *ServiceModeReplicated `pulumi:"replicated"`
}

type ServiceModeInput interface {
	pulumi.Input

	ToServiceModeOutput() ServiceModeOutput
	ToServiceModeOutputWithContext(context.Context) ServiceModeOutput
}

type ServiceModeArgs struct {
	Global pulumi.BoolPtrInput `pulumi:"global"`
	Replicated ServiceModeReplicatedPtrInput `pulumi:"replicated"`
}

func (ServiceModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMode)(nil)).Elem()
}

func (i ServiceModeArgs) ToServiceModeOutput() ServiceModeOutput {
	return i.ToServiceModeOutputWithContext(context.Background())
}

func (i ServiceModeArgs) ToServiceModeOutputWithContext(ctx context.Context) ServiceModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceModeOutput)
}

func (i ServiceModeArgs) ToServiceModePtrOutput() ServiceModePtrOutput {
	return i.ToServiceModePtrOutputWithContext(context.Background())
}

func (i ServiceModeArgs) ToServiceModePtrOutputWithContext(ctx context.Context) ServiceModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceModeOutput).ToServiceModePtrOutputWithContext(ctx)
}

type ServiceModePtrInput interface {
	pulumi.Input

	ToServiceModePtrOutput() ServiceModePtrOutput
	ToServiceModePtrOutputWithContext(context.Context) ServiceModePtrOutput
}

type serviceModePtrType ServiceModeArgs

func ServiceModePtr(v *ServiceModeArgs) ServiceModePtrInput {	return (*serviceModePtrType)(v)
}

func (*serviceModePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMode)(nil)).Elem()
}

func (i *serviceModePtrType) ToServiceModePtrOutput() ServiceModePtrOutput {
	return i.ToServiceModePtrOutputWithContext(context.Background())
}

func (i *serviceModePtrType) ToServiceModePtrOutputWithContext(ctx context.Context) ServiceModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceModePtrOutput)
}

type ServiceModeOutput struct { *pulumi.OutputState }

func (ServiceModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMode)(nil)).Elem()
}

func (o ServiceModeOutput) ToServiceModeOutput() ServiceModeOutput {
	return o
}

func (o ServiceModeOutput) ToServiceModeOutputWithContext(ctx context.Context) ServiceModeOutput {
	return o
}

func (o ServiceModeOutput) ToServiceModePtrOutput() ServiceModePtrOutput {
	return o.ToServiceModePtrOutputWithContext(context.Background())
}

func (o ServiceModeOutput) ToServiceModePtrOutputWithContext(ctx context.Context) ServiceModePtrOutput {
	return o.ApplyT(func(v ServiceMode) *ServiceMode {
		return &v
	}).(ServiceModePtrOutput)
}
func (o ServiceModeOutput) Global() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ServiceMode) *bool { return v.Global }).(pulumi.BoolPtrOutput)
}

func (o ServiceModeOutput) Replicated() ServiceModeReplicatedPtrOutput {
	return o.ApplyT(func (v ServiceMode) *ServiceModeReplicated { return v.Replicated }).(ServiceModeReplicatedPtrOutput)
}

type ServiceModePtrOutput struct { *pulumi.OutputState}

func (ServiceModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMode)(nil)).Elem()
}

func (o ServiceModePtrOutput) ToServiceModePtrOutput() ServiceModePtrOutput {
	return o
}

func (o ServiceModePtrOutput) ToServiceModePtrOutputWithContext(ctx context.Context) ServiceModePtrOutput {
	return o
}

func (o ServiceModePtrOutput) Elem() ServiceModeOutput {
	return o.ApplyT(func (v *ServiceMode) ServiceMode { return *v }).(ServiceModeOutput)
}

func (o ServiceModePtrOutput) Global() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ServiceMode) *bool { return v.Global }).(pulumi.BoolPtrOutput)
}

func (o ServiceModePtrOutput) Replicated() ServiceModeReplicatedPtrOutput {
	return o.ApplyT(func (v ServiceMode) *ServiceModeReplicated { return v.Replicated }).(ServiceModeReplicatedPtrOutput)
}

type ServiceModeReplicated struct {
	Replicas *int `pulumi:"replicas"`
}

type ServiceModeReplicatedInput interface {
	pulumi.Input

	ToServiceModeReplicatedOutput() ServiceModeReplicatedOutput
	ToServiceModeReplicatedOutputWithContext(context.Context) ServiceModeReplicatedOutput
}

type ServiceModeReplicatedArgs struct {
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
}

func (ServiceModeReplicatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceModeReplicated)(nil)).Elem()
}

func (i ServiceModeReplicatedArgs) ToServiceModeReplicatedOutput() ServiceModeReplicatedOutput {
	return i.ToServiceModeReplicatedOutputWithContext(context.Background())
}

func (i ServiceModeReplicatedArgs) ToServiceModeReplicatedOutputWithContext(ctx context.Context) ServiceModeReplicatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceModeReplicatedOutput)
}

func (i ServiceModeReplicatedArgs) ToServiceModeReplicatedPtrOutput() ServiceModeReplicatedPtrOutput {
	return i.ToServiceModeReplicatedPtrOutputWithContext(context.Background())
}

func (i ServiceModeReplicatedArgs) ToServiceModeReplicatedPtrOutputWithContext(ctx context.Context) ServiceModeReplicatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceModeReplicatedOutput).ToServiceModeReplicatedPtrOutputWithContext(ctx)
}

type ServiceModeReplicatedPtrInput interface {
	pulumi.Input

	ToServiceModeReplicatedPtrOutput() ServiceModeReplicatedPtrOutput
	ToServiceModeReplicatedPtrOutputWithContext(context.Context) ServiceModeReplicatedPtrOutput
}

type serviceModeReplicatedPtrType ServiceModeReplicatedArgs

func ServiceModeReplicatedPtr(v *ServiceModeReplicatedArgs) ServiceModeReplicatedPtrInput {	return (*serviceModeReplicatedPtrType)(v)
}

func (*serviceModeReplicatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceModeReplicated)(nil)).Elem()
}

func (i *serviceModeReplicatedPtrType) ToServiceModeReplicatedPtrOutput() ServiceModeReplicatedPtrOutput {
	return i.ToServiceModeReplicatedPtrOutputWithContext(context.Background())
}

func (i *serviceModeReplicatedPtrType) ToServiceModeReplicatedPtrOutputWithContext(ctx context.Context) ServiceModeReplicatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceModeReplicatedPtrOutput)
}

type ServiceModeReplicatedOutput struct { *pulumi.OutputState }

func (ServiceModeReplicatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceModeReplicated)(nil)).Elem()
}

func (o ServiceModeReplicatedOutput) ToServiceModeReplicatedOutput() ServiceModeReplicatedOutput {
	return o
}

func (o ServiceModeReplicatedOutput) ToServiceModeReplicatedOutputWithContext(ctx context.Context) ServiceModeReplicatedOutput {
	return o
}

func (o ServiceModeReplicatedOutput) ToServiceModeReplicatedPtrOutput() ServiceModeReplicatedPtrOutput {
	return o.ToServiceModeReplicatedPtrOutputWithContext(context.Background())
}

func (o ServiceModeReplicatedOutput) ToServiceModeReplicatedPtrOutputWithContext(ctx context.Context) ServiceModeReplicatedPtrOutput {
	return o.ApplyT(func(v ServiceModeReplicated) *ServiceModeReplicated {
		return &v
	}).(ServiceModeReplicatedPtrOutput)
}
func (o ServiceModeReplicatedOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceModeReplicated) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

type ServiceModeReplicatedPtrOutput struct { *pulumi.OutputState}

func (ServiceModeReplicatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceModeReplicated)(nil)).Elem()
}

func (o ServiceModeReplicatedPtrOutput) ToServiceModeReplicatedPtrOutput() ServiceModeReplicatedPtrOutput {
	return o
}

func (o ServiceModeReplicatedPtrOutput) ToServiceModeReplicatedPtrOutputWithContext(ctx context.Context) ServiceModeReplicatedPtrOutput {
	return o
}

func (o ServiceModeReplicatedPtrOutput) Elem() ServiceModeReplicatedOutput {
	return o.ApplyT(func (v *ServiceModeReplicated) ServiceModeReplicated { return *v }).(ServiceModeReplicatedOutput)
}

func (o ServiceModeReplicatedPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceModeReplicated) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

type ServiceRollbackConfig struct {
	Delay *string `pulumi:"delay"`
	FailureAction *string `pulumi:"failureAction"`
	MaxFailureRatio *string `pulumi:"maxFailureRatio"`
	Monitor *string `pulumi:"monitor"`
	Order *string `pulumi:"order"`
	Parallelism *int `pulumi:"parallelism"`
}

type ServiceRollbackConfigInput interface {
	pulumi.Input

	ToServiceRollbackConfigOutput() ServiceRollbackConfigOutput
	ToServiceRollbackConfigOutputWithContext(context.Context) ServiceRollbackConfigOutput
}

type ServiceRollbackConfigArgs struct {
	Delay pulumi.StringPtrInput `pulumi:"delay"`
	FailureAction pulumi.StringPtrInput `pulumi:"failureAction"`
	MaxFailureRatio pulumi.StringPtrInput `pulumi:"maxFailureRatio"`
	Monitor pulumi.StringPtrInput `pulumi:"monitor"`
	Order pulumi.StringPtrInput `pulumi:"order"`
	Parallelism pulumi.IntPtrInput `pulumi:"parallelism"`
}

func (ServiceRollbackConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRollbackConfig)(nil)).Elem()
}

func (i ServiceRollbackConfigArgs) ToServiceRollbackConfigOutput() ServiceRollbackConfigOutput {
	return i.ToServiceRollbackConfigOutputWithContext(context.Background())
}

func (i ServiceRollbackConfigArgs) ToServiceRollbackConfigOutputWithContext(ctx context.Context) ServiceRollbackConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRollbackConfigOutput)
}

func (i ServiceRollbackConfigArgs) ToServiceRollbackConfigPtrOutput() ServiceRollbackConfigPtrOutput {
	return i.ToServiceRollbackConfigPtrOutputWithContext(context.Background())
}

func (i ServiceRollbackConfigArgs) ToServiceRollbackConfigPtrOutputWithContext(ctx context.Context) ServiceRollbackConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRollbackConfigOutput).ToServiceRollbackConfigPtrOutputWithContext(ctx)
}

type ServiceRollbackConfigPtrInput interface {
	pulumi.Input

	ToServiceRollbackConfigPtrOutput() ServiceRollbackConfigPtrOutput
	ToServiceRollbackConfigPtrOutputWithContext(context.Context) ServiceRollbackConfigPtrOutput
}

type serviceRollbackConfigPtrType ServiceRollbackConfigArgs

func ServiceRollbackConfigPtr(v *ServiceRollbackConfigArgs) ServiceRollbackConfigPtrInput {	return (*serviceRollbackConfigPtrType)(v)
}

func (*serviceRollbackConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRollbackConfig)(nil)).Elem()
}

func (i *serviceRollbackConfigPtrType) ToServiceRollbackConfigPtrOutput() ServiceRollbackConfigPtrOutput {
	return i.ToServiceRollbackConfigPtrOutputWithContext(context.Background())
}

func (i *serviceRollbackConfigPtrType) ToServiceRollbackConfigPtrOutputWithContext(ctx context.Context) ServiceRollbackConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRollbackConfigPtrOutput)
}

type ServiceRollbackConfigOutput struct { *pulumi.OutputState }

func (ServiceRollbackConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRollbackConfig)(nil)).Elem()
}

func (o ServiceRollbackConfigOutput) ToServiceRollbackConfigOutput() ServiceRollbackConfigOutput {
	return o
}

func (o ServiceRollbackConfigOutput) ToServiceRollbackConfigOutputWithContext(ctx context.Context) ServiceRollbackConfigOutput {
	return o
}

func (o ServiceRollbackConfigOutput) ToServiceRollbackConfigPtrOutput() ServiceRollbackConfigPtrOutput {
	return o.ToServiceRollbackConfigPtrOutputWithContext(context.Background())
}

func (o ServiceRollbackConfigOutput) ToServiceRollbackConfigPtrOutputWithContext(ctx context.Context) ServiceRollbackConfigPtrOutput {
	return o.ApplyT(func(v ServiceRollbackConfig) *ServiceRollbackConfig {
		return &v
	}).(ServiceRollbackConfigPtrOutput)
}
func (o ServiceRollbackConfigOutput) Delay() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceRollbackConfig) *string { return v.Delay }).(pulumi.StringPtrOutput)
}

func (o ServiceRollbackConfigOutput) FailureAction() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceRollbackConfig) *string { return v.FailureAction }).(pulumi.StringPtrOutput)
}

func (o ServiceRollbackConfigOutput) MaxFailureRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceRollbackConfig) *string { return v.MaxFailureRatio }).(pulumi.StringPtrOutput)
}

func (o ServiceRollbackConfigOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceRollbackConfig) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

func (o ServiceRollbackConfigOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceRollbackConfig) *string { return v.Order }).(pulumi.StringPtrOutput)
}

func (o ServiceRollbackConfigOutput) Parallelism() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceRollbackConfig) *int { return v.Parallelism }).(pulumi.IntPtrOutput)
}

type ServiceRollbackConfigPtrOutput struct { *pulumi.OutputState}

func (ServiceRollbackConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRollbackConfig)(nil)).Elem()
}

func (o ServiceRollbackConfigPtrOutput) ToServiceRollbackConfigPtrOutput() ServiceRollbackConfigPtrOutput {
	return o
}

func (o ServiceRollbackConfigPtrOutput) ToServiceRollbackConfigPtrOutputWithContext(ctx context.Context) ServiceRollbackConfigPtrOutput {
	return o
}

func (o ServiceRollbackConfigPtrOutput) Elem() ServiceRollbackConfigOutput {
	return o.ApplyT(func (v *ServiceRollbackConfig) ServiceRollbackConfig { return *v }).(ServiceRollbackConfigOutput)
}

func (o ServiceRollbackConfigPtrOutput) Delay() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceRollbackConfig) *string { return v.Delay }).(pulumi.StringPtrOutput)
}

func (o ServiceRollbackConfigPtrOutput) FailureAction() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceRollbackConfig) *string { return v.FailureAction }).(pulumi.StringPtrOutput)
}

func (o ServiceRollbackConfigPtrOutput) MaxFailureRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceRollbackConfig) *string { return v.MaxFailureRatio }).(pulumi.StringPtrOutput)
}

func (o ServiceRollbackConfigPtrOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceRollbackConfig) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

func (o ServiceRollbackConfigPtrOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceRollbackConfig) *string { return v.Order }).(pulumi.StringPtrOutput)
}

func (o ServiceRollbackConfigPtrOutput) Parallelism() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceRollbackConfig) *int { return v.Parallelism }).(pulumi.IntPtrOutput)
}

type ServiceTaskSpec struct {
	ContainerSpec ServiceTaskSpecContainerSpec `pulumi:"containerSpec"`
	ForceUpdate *int `pulumi:"forceUpdate"`
	LogDriver *ServiceTaskSpecLogDriver `pulumi:"logDriver"`
	Networks []string `pulumi:"networks"`
	Placement *ServiceTaskSpecPlacement `pulumi:"placement"`
	Resources *ServiceTaskSpecResources `pulumi:"resources"`
	RestartPolicy *ServiceTaskSpecRestartPolicy `pulumi:"restartPolicy"`
	Runtime *string `pulumi:"runtime"`
}

type ServiceTaskSpecInput interface {
	pulumi.Input

	ToServiceTaskSpecOutput() ServiceTaskSpecOutput
	ToServiceTaskSpecOutputWithContext(context.Context) ServiceTaskSpecOutput
}

type ServiceTaskSpecArgs struct {
	ContainerSpec ServiceTaskSpecContainerSpecInput `pulumi:"containerSpec"`
	ForceUpdate pulumi.IntPtrInput `pulumi:"forceUpdate"`
	LogDriver ServiceTaskSpecLogDriverPtrInput `pulumi:"logDriver"`
	Networks pulumi.StringArrayInput `pulumi:"networks"`
	Placement ServiceTaskSpecPlacementPtrInput `pulumi:"placement"`
	Resources ServiceTaskSpecResourcesPtrInput `pulumi:"resources"`
	RestartPolicy ServiceTaskSpecRestartPolicyPtrInput `pulumi:"restartPolicy"`
	Runtime pulumi.StringPtrInput `pulumi:"runtime"`
}

func (ServiceTaskSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpec)(nil)).Elem()
}

func (i ServiceTaskSpecArgs) ToServiceTaskSpecOutput() ServiceTaskSpecOutput {
	return i.ToServiceTaskSpecOutputWithContext(context.Background())
}

func (i ServiceTaskSpecArgs) ToServiceTaskSpecOutputWithContext(ctx context.Context) ServiceTaskSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecOutput)
}

func (i ServiceTaskSpecArgs) ToServiceTaskSpecPtrOutput() ServiceTaskSpecPtrOutput {
	return i.ToServiceTaskSpecPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecArgs) ToServiceTaskSpecPtrOutputWithContext(ctx context.Context) ServiceTaskSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecOutput).ToServiceTaskSpecPtrOutputWithContext(ctx)
}

type ServiceTaskSpecPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecPtrOutput() ServiceTaskSpecPtrOutput
	ToServiceTaskSpecPtrOutputWithContext(context.Context) ServiceTaskSpecPtrOutput
}

type serviceTaskSpecPtrType ServiceTaskSpecArgs

func ServiceTaskSpecPtr(v *ServiceTaskSpecArgs) ServiceTaskSpecPtrInput {	return (*serviceTaskSpecPtrType)(v)
}

func (*serviceTaskSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpec)(nil)).Elem()
}

func (i *serviceTaskSpecPtrType) ToServiceTaskSpecPtrOutput() ServiceTaskSpecPtrOutput {
	return i.ToServiceTaskSpecPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecPtrType) ToServiceTaskSpecPtrOutputWithContext(ctx context.Context) ServiceTaskSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecPtrOutput)
}

type ServiceTaskSpecOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpec)(nil)).Elem()
}

func (o ServiceTaskSpecOutput) ToServiceTaskSpecOutput() ServiceTaskSpecOutput {
	return o
}

func (o ServiceTaskSpecOutput) ToServiceTaskSpecOutputWithContext(ctx context.Context) ServiceTaskSpecOutput {
	return o
}

func (o ServiceTaskSpecOutput) ToServiceTaskSpecPtrOutput() ServiceTaskSpecPtrOutput {
	return o.ToServiceTaskSpecPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecOutput) ToServiceTaskSpecPtrOutputWithContext(ctx context.Context) ServiceTaskSpecPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpec) *ServiceTaskSpec {
		return &v
	}).(ServiceTaskSpecPtrOutput)
}
func (o ServiceTaskSpecOutput) ContainerSpec() ServiceTaskSpecContainerSpecOutput {
	return o.ApplyT(func (v ServiceTaskSpec) ServiceTaskSpecContainerSpec { return v.ContainerSpec }).(ServiceTaskSpecContainerSpecOutput)
}

func (o ServiceTaskSpecOutput) ForceUpdate() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpec) *int { return v.ForceUpdate }).(pulumi.IntPtrOutput)
}

func (o ServiceTaskSpecOutput) LogDriver() ServiceTaskSpecLogDriverPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpec) *ServiceTaskSpecLogDriver { return v.LogDriver }).(ServiceTaskSpecLogDriverPtrOutput)
}

func (o ServiceTaskSpecOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpec) []string { return v.Networks }).(pulumi.StringArrayOutput)
}

func (o ServiceTaskSpecOutput) Placement() ServiceTaskSpecPlacementPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpec) *ServiceTaskSpecPlacement { return v.Placement }).(ServiceTaskSpecPlacementPtrOutput)
}

func (o ServiceTaskSpecOutput) Resources() ServiceTaskSpecResourcesPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpec) *ServiceTaskSpecResources { return v.Resources }).(ServiceTaskSpecResourcesPtrOutput)
}

func (o ServiceTaskSpecOutput) RestartPolicy() ServiceTaskSpecRestartPolicyPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpec) *ServiceTaskSpecRestartPolicy { return v.RestartPolicy }).(ServiceTaskSpecRestartPolicyPtrOutput)
}

func (o ServiceTaskSpecOutput) Runtime() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpec) *string { return v.Runtime }).(pulumi.StringPtrOutput)
}

type ServiceTaskSpecPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpec)(nil)).Elem()
}

func (o ServiceTaskSpecPtrOutput) ToServiceTaskSpecPtrOutput() ServiceTaskSpecPtrOutput {
	return o
}

func (o ServiceTaskSpecPtrOutput) ToServiceTaskSpecPtrOutputWithContext(ctx context.Context) ServiceTaskSpecPtrOutput {
	return o
}

func (o ServiceTaskSpecPtrOutput) Elem() ServiceTaskSpecOutput {
	return o.ApplyT(func (v *ServiceTaskSpec) ServiceTaskSpec { return *v }).(ServiceTaskSpecOutput)
}

func (o ServiceTaskSpecPtrOutput) ContainerSpec() ServiceTaskSpecContainerSpecOutput {
	return o.ApplyT(func (v ServiceTaskSpec) ServiceTaskSpecContainerSpec { return v.ContainerSpec }).(ServiceTaskSpecContainerSpecOutput)
}

func (o ServiceTaskSpecPtrOutput) ForceUpdate() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpec) *int { return v.ForceUpdate }).(pulumi.IntPtrOutput)
}

func (o ServiceTaskSpecPtrOutput) LogDriver() ServiceTaskSpecLogDriverPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpec) *ServiceTaskSpecLogDriver { return v.LogDriver }).(ServiceTaskSpecLogDriverPtrOutput)
}

func (o ServiceTaskSpecPtrOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpec) []string { return v.Networks }).(pulumi.StringArrayOutput)
}

func (o ServiceTaskSpecPtrOutput) Placement() ServiceTaskSpecPlacementPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpec) *ServiceTaskSpecPlacement { return v.Placement }).(ServiceTaskSpecPlacementPtrOutput)
}

func (o ServiceTaskSpecPtrOutput) Resources() ServiceTaskSpecResourcesPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpec) *ServiceTaskSpecResources { return v.Resources }).(ServiceTaskSpecResourcesPtrOutput)
}

func (o ServiceTaskSpecPtrOutput) RestartPolicy() ServiceTaskSpecRestartPolicyPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpec) *ServiceTaskSpecRestartPolicy { return v.RestartPolicy }).(ServiceTaskSpecRestartPolicyPtrOutput)
}

func (o ServiceTaskSpecPtrOutput) Runtime() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpec) *string { return v.Runtime }).(pulumi.StringPtrOutput)
}

type ServiceTaskSpecContainerSpec struct {
	Args []string `pulumi:"args"`
	Commands []string `pulumi:"commands"`
	Configs []ServiceTaskSpecContainerSpecConfig `pulumi:"configs"`
	Dir *string `pulumi:"dir"`
	DnsConfig *ServiceTaskSpecContainerSpecDnsConfig `pulumi:"dnsConfig"`
	Env map[string]string `pulumi:"env"`
	Groups []string `pulumi:"groups"`
	Healthcheck *ServiceTaskSpecContainerSpecHealthcheck `pulumi:"healthcheck"`
	Hostname *string `pulumi:"hostname"`
	Hosts []ServiceTaskSpecContainerSpecHost `pulumi:"hosts"`
	Image string `pulumi:"image"`
	Isolation *string `pulumi:"isolation"`
	Labels []ServiceTaskSpecContainerSpecLabel `pulumi:"labels"`
	Mounts []ServiceTaskSpecContainerSpecMount `pulumi:"mounts"`
	Privileges *ServiceTaskSpecContainerSpecPrivileges `pulumi:"privileges"`
	ReadOnly *bool `pulumi:"readOnly"`
	Secrets []ServiceTaskSpecContainerSpecSecret `pulumi:"secrets"`
	StopGracePeriod *string `pulumi:"stopGracePeriod"`
	StopSignal *string `pulumi:"stopSignal"`
	User *string `pulumi:"user"`
}

type ServiceTaskSpecContainerSpecInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecOutput() ServiceTaskSpecContainerSpecOutput
	ToServiceTaskSpecContainerSpecOutputWithContext(context.Context) ServiceTaskSpecContainerSpecOutput
}

type ServiceTaskSpecContainerSpecArgs struct {
	Args pulumi.StringArrayInput `pulumi:"args"`
	Commands pulumi.StringArrayInput `pulumi:"commands"`
	Configs ServiceTaskSpecContainerSpecConfigArrayInput `pulumi:"configs"`
	Dir pulumi.StringPtrInput `pulumi:"dir"`
	DnsConfig ServiceTaskSpecContainerSpecDnsConfigPtrInput `pulumi:"dnsConfig"`
	Env pulumi.StringMapInput `pulumi:"env"`
	Groups pulumi.StringArrayInput `pulumi:"groups"`
	Healthcheck ServiceTaskSpecContainerSpecHealthcheckPtrInput `pulumi:"healthcheck"`
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	Hosts ServiceTaskSpecContainerSpecHostArrayInput `pulumi:"hosts"`
	Image pulumi.StringInput `pulumi:"image"`
	Isolation pulumi.StringPtrInput `pulumi:"isolation"`
	Labels ServiceTaskSpecContainerSpecLabelArrayInput `pulumi:"labels"`
	Mounts ServiceTaskSpecContainerSpecMountArrayInput `pulumi:"mounts"`
	Privileges ServiceTaskSpecContainerSpecPrivilegesPtrInput `pulumi:"privileges"`
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	Secrets ServiceTaskSpecContainerSpecSecretArrayInput `pulumi:"secrets"`
	StopGracePeriod pulumi.StringPtrInput `pulumi:"stopGracePeriod"`
	StopSignal pulumi.StringPtrInput `pulumi:"stopSignal"`
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (ServiceTaskSpecContainerSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpec)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecArgs) ToServiceTaskSpecContainerSpecOutput() ServiceTaskSpecContainerSpecOutput {
	return i.ToServiceTaskSpecContainerSpecOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecArgs) ToServiceTaskSpecContainerSpecOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecOutput)
}

type ServiceTaskSpecContainerSpecOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecContainerSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpec)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecOutput) ToServiceTaskSpecContainerSpecOutput() ServiceTaskSpecContainerSpecOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecOutput) ToServiceTaskSpecContainerSpecOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) Configs() ServiceTaskSpecContainerSpecConfigArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) []ServiceTaskSpecContainerSpecConfig { return v.Configs }).(ServiceTaskSpecContainerSpecConfigArrayOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) Dir() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) *string { return v.Dir }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) DnsConfig() ServiceTaskSpecContainerSpecDnsConfigPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) *ServiceTaskSpecContainerSpecDnsConfig { return v.DnsConfig }).(ServiceTaskSpecContainerSpecDnsConfigPtrOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) map[string]string { return v.Env }).(pulumi.StringMapOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) Healthcheck() ServiceTaskSpecContainerSpecHealthcheckPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) *ServiceTaskSpecContainerSpecHealthcheck { return v.Healthcheck }).(ServiceTaskSpecContainerSpecHealthcheckPtrOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) Hosts() ServiceTaskSpecContainerSpecHostArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) []ServiceTaskSpecContainerSpecHost { return v.Hosts }).(ServiceTaskSpecContainerSpecHostArrayOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) string { return v.Image }).(pulumi.StringOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) Isolation() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) *string { return v.Isolation }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) Labels() ServiceTaskSpecContainerSpecLabelArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) []ServiceTaskSpecContainerSpecLabel { return v.Labels }).(ServiceTaskSpecContainerSpecLabelArrayOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) Mounts() ServiceTaskSpecContainerSpecMountArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) []ServiceTaskSpecContainerSpecMount { return v.Mounts }).(ServiceTaskSpecContainerSpecMountArrayOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) Privileges() ServiceTaskSpecContainerSpecPrivilegesPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) *ServiceTaskSpecContainerSpecPrivileges { return v.Privileges }).(ServiceTaskSpecContainerSpecPrivilegesPtrOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) Secrets() ServiceTaskSpecContainerSpecSecretArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) []ServiceTaskSpecContainerSpecSecret { return v.Secrets }).(ServiceTaskSpecContainerSpecSecretArrayOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) StopGracePeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) *string { return v.StopGracePeriod }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) StopSignal() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) *string { return v.StopSignal }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpec) *string { return v.User }).(pulumi.StringPtrOutput)
}

type ServiceTaskSpecContainerSpecConfig struct {
	// ConfigID represents the ID of the specific config.
	ConfigId string `pulumi:"configId"`
	// The name of the config that this references, but internally it is just provided for lookup/display purposes
	ConfigName *string `pulumi:"configName"`
	// Represents the file GID. Defaults: `0`
	FileGid *string `pulumi:"fileGid"`
	// Represents the FileMode of the file. Defaults: `0444`
	FileMode *int `pulumi:"fileMode"`
	// Represents the final filename in the filesystem. The specific target file that the config data is written within the docker container, e.g. `/root/config/config.json`
	FileName string `pulumi:"fileName"`
	// Represents the file UID. Defaults: `0`
	FileUid *string `pulumi:"fileUid"`
}

type ServiceTaskSpecContainerSpecConfigInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecConfigOutput() ServiceTaskSpecContainerSpecConfigOutput
	ToServiceTaskSpecContainerSpecConfigOutputWithContext(context.Context) ServiceTaskSpecContainerSpecConfigOutput
}

type ServiceTaskSpecContainerSpecConfigArgs struct {
	// ConfigID represents the ID of the specific config.
	ConfigId pulumi.StringInput `pulumi:"configId"`
	// The name of the config that this references, but internally it is just provided for lookup/display purposes
	ConfigName pulumi.StringPtrInput `pulumi:"configName"`
	// Represents the file GID. Defaults: `0`
	FileGid pulumi.StringPtrInput `pulumi:"fileGid"`
	// Represents the FileMode of the file. Defaults: `0444`
	FileMode pulumi.IntPtrInput `pulumi:"fileMode"`
	// Represents the final filename in the filesystem. The specific target file that the config data is written within the docker container, e.g. `/root/config/config.json`
	FileName pulumi.StringInput `pulumi:"fileName"`
	// Represents the file UID. Defaults: `0`
	FileUid pulumi.StringPtrInput `pulumi:"fileUid"`
}

func (ServiceTaskSpecContainerSpecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecConfig)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecConfigArgs) ToServiceTaskSpecContainerSpecConfigOutput() ServiceTaskSpecContainerSpecConfigOutput {
	return i.ToServiceTaskSpecContainerSpecConfigOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecConfigArgs) ToServiceTaskSpecContainerSpecConfigOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecConfigOutput)
}

type ServiceTaskSpecContainerSpecConfigArrayInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecConfigArrayOutput() ServiceTaskSpecContainerSpecConfigArrayOutput
	ToServiceTaskSpecContainerSpecConfigArrayOutputWithContext(context.Context) ServiceTaskSpecContainerSpecConfigArrayOutput
}

type ServiceTaskSpecContainerSpecConfigArray []ServiceTaskSpecContainerSpecConfigInput

func (ServiceTaskSpecContainerSpecConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTaskSpecContainerSpecConfig)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecConfigArray) ToServiceTaskSpecContainerSpecConfigArrayOutput() ServiceTaskSpecContainerSpecConfigArrayOutput {
	return i.ToServiceTaskSpecContainerSpecConfigArrayOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecConfigArray) ToServiceTaskSpecContainerSpecConfigArrayOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecConfigArrayOutput)
}

type ServiceTaskSpecContainerSpecConfigOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecContainerSpecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecConfig)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecConfigOutput) ToServiceTaskSpecContainerSpecConfigOutput() ServiceTaskSpecContainerSpecConfigOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecConfigOutput) ToServiceTaskSpecContainerSpecConfigOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecConfigOutput {
	return o
}

// ConfigID represents the ID of the specific config.
func (o ServiceTaskSpecContainerSpecConfigOutput) ConfigId() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecConfig) string { return v.ConfigId }).(pulumi.StringOutput)
}

// The name of the config that this references, but internally it is just provided for lookup/display purposes
func (o ServiceTaskSpecContainerSpecConfigOutput) ConfigName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecConfig) *string { return v.ConfigName }).(pulumi.StringPtrOutput)
}

// Represents the file GID. Defaults: `0`
func (o ServiceTaskSpecContainerSpecConfigOutput) FileGid() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecConfig) *string { return v.FileGid }).(pulumi.StringPtrOutput)
}

// Represents the FileMode of the file. Defaults: `0444`
func (o ServiceTaskSpecContainerSpecConfigOutput) FileMode() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecConfig) *int { return v.FileMode }).(pulumi.IntPtrOutput)
}

// Represents the final filename in the filesystem. The specific target file that the config data is written within the docker container, e.g. `/root/config/config.json`
func (o ServiceTaskSpecContainerSpecConfigOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecConfig) string { return v.FileName }).(pulumi.StringOutput)
}

// Represents the file UID. Defaults: `0`
func (o ServiceTaskSpecContainerSpecConfigOutput) FileUid() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecConfig) *string { return v.FileUid }).(pulumi.StringPtrOutput)
}

type ServiceTaskSpecContainerSpecConfigArrayOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecContainerSpecConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTaskSpecContainerSpecConfig)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecConfigArrayOutput) ToServiceTaskSpecContainerSpecConfigArrayOutput() ServiceTaskSpecContainerSpecConfigArrayOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecConfigArrayOutput) ToServiceTaskSpecContainerSpecConfigArrayOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecConfigArrayOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecConfigArrayOutput) Index(i pulumi.IntInput) ServiceTaskSpecContainerSpecConfigOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ServiceTaskSpecContainerSpecConfig {
		return vs[0].([]ServiceTaskSpecContainerSpecConfig)[vs[1].(int)]
	}).(ServiceTaskSpecContainerSpecConfigOutput)
}

type ServiceTaskSpecContainerSpecDnsConfig struct {
	Nameservers []string `pulumi:"nameservers"`
	// The options for the logging driver, e.g.
	Options []string `pulumi:"options"`
	Searches []string `pulumi:"searches"`
}

type ServiceTaskSpecContainerSpecDnsConfigInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecDnsConfigOutput() ServiceTaskSpecContainerSpecDnsConfigOutput
	ToServiceTaskSpecContainerSpecDnsConfigOutputWithContext(context.Context) ServiceTaskSpecContainerSpecDnsConfigOutput
}

type ServiceTaskSpecContainerSpecDnsConfigArgs struct {
	Nameservers pulumi.StringArrayInput `pulumi:"nameservers"`
	// The options for the logging driver, e.g.
	Options pulumi.StringArrayInput `pulumi:"options"`
	Searches pulumi.StringArrayInput `pulumi:"searches"`
}

func (ServiceTaskSpecContainerSpecDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecDnsConfig)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecDnsConfigArgs) ToServiceTaskSpecContainerSpecDnsConfigOutput() ServiceTaskSpecContainerSpecDnsConfigOutput {
	return i.ToServiceTaskSpecContainerSpecDnsConfigOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecDnsConfigArgs) ToServiceTaskSpecContainerSpecDnsConfigOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecDnsConfigOutput)
}

func (i ServiceTaskSpecContainerSpecDnsConfigArgs) ToServiceTaskSpecContainerSpecDnsConfigPtrOutput() ServiceTaskSpecContainerSpecDnsConfigPtrOutput {
	return i.ToServiceTaskSpecContainerSpecDnsConfigPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecDnsConfigArgs) ToServiceTaskSpecContainerSpecDnsConfigPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecDnsConfigOutput).ToServiceTaskSpecContainerSpecDnsConfigPtrOutputWithContext(ctx)
}

type ServiceTaskSpecContainerSpecDnsConfigPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecDnsConfigPtrOutput() ServiceTaskSpecContainerSpecDnsConfigPtrOutput
	ToServiceTaskSpecContainerSpecDnsConfigPtrOutputWithContext(context.Context) ServiceTaskSpecContainerSpecDnsConfigPtrOutput
}

type serviceTaskSpecContainerSpecDnsConfigPtrType ServiceTaskSpecContainerSpecDnsConfigArgs

func ServiceTaskSpecContainerSpecDnsConfigPtr(v *ServiceTaskSpecContainerSpecDnsConfigArgs) ServiceTaskSpecContainerSpecDnsConfigPtrInput {	return (*serviceTaskSpecContainerSpecDnsConfigPtrType)(v)
}

func (*serviceTaskSpecContainerSpecDnsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecContainerSpecDnsConfig)(nil)).Elem()
}

func (i *serviceTaskSpecContainerSpecDnsConfigPtrType) ToServiceTaskSpecContainerSpecDnsConfigPtrOutput() ServiceTaskSpecContainerSpecDnsConfigPtrOutput {
	return i.ToServiceTaskSpecContainerSpecDnsConfigPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecContainerSpecDnsConfigPtrType) ToServiceTaskSpecContainerSpecDnsConfigPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecDnsConfigPtrOutput)
}

type ServiceTaskSpecContainerSpecDnsConfigOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecContainerSpecDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecDnsConfig)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecDnsConfigOutput) ToServiceTaskSpecContainerSpecDnsConfigOutput() ServiceTaskSpecContainerSpecDnsConfigOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecDnsConfigOutput) ToServiceTaskSpecContainerSpecDnsConfigOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecDnsConfigOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecDnsConfigOutput) ToServiceTaskSpecContainerSpecDnsConfigPtrOutput() ServiceTaskSpecContainerSpecDnsConfigPtrOutput {
	return o.ToServiceTaskSpecContainerSpecDnsConfigPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecContainerSpecDnsConfigOutput) ToServiceTaskSpecContainerSpecDnsConfigPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecDnsConfigPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpecContainerSpecDnsConfig) *ServiceTaskSpecContainerSpecDnsConfig {
		return &v
	}).(ServiceTaskSpecContainerSpecDnsConfigPtrOutput)
}
func (o ServiceTaskSpecContainerSpecDnsConfigOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecDnsConfig) []string { return v.Nameservers }).(pulumi.StringArrayOutput)
}

// The options for the logging driver, e.g.
func (o ServiceTaskSpecContainerSpecDnsConfigOutput) Options() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecDnsConfig) []string { return v.Options }).(pulumi.StringArrayOutput)
}

func (o ServiceTaskSpecContainerSpecDnsConfigOutput) Searches() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecDnsConfig) []string { return v.Searches }).(pulumi.StringArrayOutput)
}

type ServiceTaskSpecContainerSpecDnsConfigPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecContainerSpecDnsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecContainerSpecDnsConfig)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecDnsConfigPtrOutput) ToServiceTaskSpecContainerSpecDnsConfigPtrOutput() ServiceTaskSpecContainerSpecDnsConfigPtrOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecDnsConfigPtrOutput) ToServiceTaskSpecContainerSpecDnsConfigPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecDnsConfigPtrOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecDnsConfigPtrOutput) Elem() ServiceTaskSpecContainerSpecDnsConfigOutput {
	return o.ApplyT(func (v *ServiceTaskSpecContainerSpecDnsConfig) ServiceTaskSpecContainerSpecDnsConfig { return *v }).(ServiceTaskSpecContainerSpecDnsConfigOutput)
}

func (o ServiceTaskSpecContainerSpecDnsConfigPtrOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecDnsConfig) []string { return v.Nameservers }).(pulumi.StringArrayOutput)
}

// The options for the logging driver, e.g.
func (o ServiceTaskSpecContainerSpecDnsConfigPtrOutput) Options() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecDnsConfig) []string { return v.Options }).(pulumi.StringArrayOutput)
}

func (o ServiceTaskSpecContainerSpecDnsConfigPtrOutput) Searches() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecDnsConfig) []string { return v.Searches }).(pulumi.StringArrayOutput)
}

type ServiceTaskSpecContainerSpecHealthcheck struct {
	Interval *string `pulumi:"interval"`
	Retries *int `pulumi:"retries"`
	StartPeriod *string `pulumi:"startPeriod"`
	Tests []string `pulumi:"tests"`
	Timeout *string `pulumi:"timeout"`
}

type ServiceTaskSpecContainerSpecHealthcheckInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecHealthcheckOutput() ServiceTaskSpecContainerSpecHealthcheckOutput
	ToServiceTaskSpecContainerSpecHealthcheckOutputWithContext(context.Context) ServiceTaskSpecContainerSpecHealthcheckOutput
}

type ServiceTaskSpecContainerSpecHealthcheckArgs struct {
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	Retries pulumi.IntPtrInput `pulumi:"retries"`
	StartPeriod pulumi.StringPtrInput `pulumi:"startPeriod"`
	Tests pulumi.StringArrayInput `pulumi:"tests"`
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (ServiceTaskSpecContainerSpecHealthcheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecHealthcheck)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecHealthcheckArgs) ToServiceTaskSpecContainerSpecHealthcheckOutput() ServiceTaskSpecContainerSpecHealthcheckOutput {
	return i.ToServiceTaskSpecContainerSpecHealthcheckOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecHealthcheckArgs) ToServiceTaskSpecContainerSpecHealthcheckOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecHealthcheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecHealthcheckOutput)
}

func (i ServiceTaskSpecContainerSpecHealthcheckArgs) ToServiceTaskSpecContainerSpecHealthcheckPtrOutput() ServiceTaskSpecContainerSpecHealthcheckPtrOutput {
	return i.ToServiceTaskSpecContainerSpecHealthcheckPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecHealthcheckArgs) ToServiceTaskSpecContainerSpecHealthcheckPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecHealthcheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecHealthcheckOutput).ToServiceTaskSpecContainerSpecHealthcheckPtrOutputWithContext(ctx)
}

type ServiceTaskSpecContainerSpecHealthcheckPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecHealthcheckPtrOutput() ServiceTaskSpecContainerSpecHealthcheckPtrOutput
	ToServiceTaskSpecContainerSpecHealthcheckPtrOutputWithContext(context.Context) ServiceTaskSpecContainerSpecHealthcheckPtrOutput
}

type serviceTaskSpecContainerSpecHealthcheckPtrType ServiceTaskSpecContainerSpecHealthcheckArgs

func ServiceTaskSpecContainerSpecHealthcheckPtr(v *ServiceTaskSpecContainerSpecHealthcheckArgs) ServiceTaskSpecContainerSpecHealthcheckPtrInput {	return (*serviceTaskSpecContainerSpecHealthcheckPtrType)(v)
}

func (*serviceTaskSpecContainerSpecHealthcheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecContainerSpecHealthcheck)(nil)).Elem()
}

func (i *serviceTaskSpecContainerSpecHealthcheckPtrType) ToServiceTaskSpecContainerSpecHealthcheckPtrOutput() ServiceTaskSpecContainerSpecHealthcheckPtrOutput {
	return i.ToServiceTaskSpecContainerSpecHealthcheckPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecContainerSpecHealthcheckPtrType) ToServiceTaskSpecContainerSpecHealthcheckPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecHealthcheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecHealthcheckPtrOutput)
}

type ServiceTaskSpecContainerSpecHealthcheckOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecContainerSpecHealthcheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecHealthcheck)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecHealthcheckOutput) ToServiceTaskSpecContainerSpecHealthcheckOutput() ServiceTaskSpecContainerSpecHealthcheckOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecHealthcheckOutput) ToServiceTaskSpecContainerSpecHealthcheckOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecHealthcheckOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecHealthcheckOutput) ToServiceTaskSpecContainerSpecHealthcheckPtrOutput() ServiceTaskSpecContainerSpecHealthcheckPtrOutput {
	return o.ToServiceTaskSpecContainerSpecHealthcheckPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecContainerSpecHealthcheckOutput) ToServiceTaskSpecContainerSpecHealthcheckPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecHealthcheckPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpecContainerSpecHealthcheck) *ServiceTaskSpecContainerSpecHealthcheck {
		return &v
	}).(ServiceTaskSpecContainerSpecHealthcheckPtrOutput)
}
func (o ServiceTaskSpecContainerSpecHealthcheckOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecHealthcheck) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecHealthcheckOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecHealthcheck) *int { return v.Retries }).(pulumi.IntPtrOutput)
}

func (o ServiceTaskSpecContainerSpecHealthcheckOutput) StartPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecHealthcheck) *string { return v.StartPeriod }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecHealthcheckOutput) Tests() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecHealthcheck) []string { return v.Tests }).(pulumi.StringArrayOutput)
}

func (o ServiceTaskSpecContainerSpecHealthcheckOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecHealthcheck) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ServiceTaskSpecContainerSpecHealthcheckPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecContainerSpecHealthcheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecContainerSpecHealthcheck)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecHealthcheckPtrOutput) ToServiceTaskSpecContainerSpecHealthcheckPtrOutput() ServiceTaskSpecContainerSpecHealthcheckPtrOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecHealthcheckPtrOutput) ToServiceTaskSpecContainerSpecHealthcheckPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecHealthcheckPtrOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecHealthcheckPtrOutput) Elem() ServiceTaskSpecContainerSpecHealthcheckOutput {
	return o.ApplyT(func (v *ServiceTaskSpecContainerSpecHealthcheck) ServiceTaskSpecContainerSpecHealthcheck { return *v }).(ServiceTaskSpecContainerSpecHealthcheckOutput)
}

func (o ServiceTaskSpecContainerSpecHealthcheckPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecHealthcheck) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecHealthcheckPtrOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecHealthcheck) *int { return v.Retries }).(pulumi.IntPtrOutput)
}

func (o ServiceTaskSpecContainerSpecHealthcheckPtrOutput) StartPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecHealthcheck) *string { return v.StartPeriod }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecHealthcheckPtrOutput) Tests() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecHealthcheck) []string { return v.Tests }).(pulumi.StringArrayOutput)
}

func (o ServiceTaskSpecContainerSpecHealthcheckPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecHealthcheck) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ServiceTaskSpecContainerSpecHost struct {
	Host string `pulumi:"host"`
	Ip string `pulumi:"ip"`
}

type ServiceTaskSpecContainerSpecHostInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecHostOutput() ServiceTaskSpecContainerSpecHostOutput
	ToServiceTaskSpecContainerSpecHostOutputWithContext(context.Context) ServiceTaskSpecContainerSpecHostOutput
}

type ServiceTaskSpecContainerSpecHostArgs struct {
	Host pulumi.StringInput `pulumi:"host"`
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (ServiceTaskSpecContainerSpecHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecHost)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecHostArgs) ToServiceTaskSpecContainerSpecHostOutput() ServiceTaskSpecContainerSpecHostOutput {
	return i.ToServiceTaskSpecContainerSpecHostOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecHostArgs) ToServiceTaskSpecContainerSpecHostOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecHostOutput)
}

type ServiceTaskSpecContainerSpecHostArrayInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecHostArrayOutput() ServiceTaskSpecContainerSpecHostArrayOutput
	ToServiceTaskSpecContainerSpecHostArrayOutputWithContext(context.Context) ServiceTaskSpecContainerSpecHostArrayOutput
}

type ServiceTaskSpecContainerSpecHostArray []ServiceTaskSpecContainerSpecHostInput

func (ServiceTaskSpecContainerSpecHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTaskSpecContainerSpecHost)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecHostArray) ToServiceTaskSpecContainerSpecHostArrayOutput() ServiceTaskSpecContainerSpecHostArrayOutput {
	return i.ToServiceTaskSpecContainerSpecHostArrayOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecHostArray) ToServiceTaskSpecContainerSpecHostArrayOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecHostArrayOutput)
}

type ServiceTaskSpecContainerSpecHostOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecContainerSpecHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecHost)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecHostOutput) ToServiceTaskSpecContainerSpecHostOutput() ServiceTaskSpecContainerSpecHostOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecHostOutput) ToServiceTaskSpecContainerSpecHostOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecHostOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecHostOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecHost) string { return v.Host }).(pulumi.StringOutput)
}

func (o ServiceTaskSpecContainerSpecHostOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecHost) string { return v.Ip }).(pulumi.StringOutput)
}

type ServiceTaskSpecContainerSpecHostArrayOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecContainerSpecHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTaskSpecContainerSpecHost)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecHostArrayOutput) ToServiceTaskSpecContainerSpecHostArrayOutput() ServiceTaskSpecContainerSpecHostArrayOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecHostArrayOutput) ToServiceTaskSpecContainerSpecHostArrayOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecHostArrayOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecHostArrayOutput) Index(i pulumi.IntInput) ServiceTaskSpecContainerSpecHostOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ServiceTaskSpecContainerSpecHost {
		return vs[0].([]ServiceTaskSpecContainerSpecHost)[vs[1].(int)]
	}).(ServiceTaskSpecContainerSpecHostOutput)
}

type ServiceTaskSpecContainerSpecLabel struct {
	Label string `pulumi:"label"`
	Value string `pulumi:"value"`
}

type ServiceTaskSpecContainerSpecLabelInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecLabelOutput() ServiceTaskSpecContainerSpecLabelOutput
	ToServiceTaskSpecContainerSpecLabelOutputWithContext(context.Context) ServiceTaskSpecContainerSpecLabelOutput
}

type ServiceTaskSpecContainerSpecLabelArgs struct {
	Label pulumi.StringInput `pulumi:"label"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServiceTaskSpecContainerSpecLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecLabel)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecLabelArgs) ToServiceTaskSpecContainerSpecLabelOutput() ServiceTaskSpecContainerSpecLabelOutput {
	return i.ToServiceTaskSpecContainerSpecLabelOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecLabelArgs) ToServiceTaskSpecContainerSpecLabelOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecLabelOutput)
}

type ServiceTaskSpecContainerSpecLabelArrayInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecLabelArrayOutput() ServiceTaskSpecContainerSpecLabelArrayOutput
	ToServiceTaskSpecContainerSpecLabelArrayOutputWithContext(context.Context) ServiceTaskSpecContainerSpecLabelArrayOutput
}

type ServiceTaskSpecContainerSpecLabelArray []ServiceTaskSpecContainerSpecLabelInput

func (ServiceTaskSpecContainerSpecLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTaskSpecContainerSpecLabel)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecLabelArray) ToServiceTaskSpecContainerSpecLabelArrayOutput() ServiceTaskSpecContainerSpecLabelArrayOutput {
	return i.ToServiceTaskSpecContainerSpecLabelArrayOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecLabelArray) ToServiceTaskSpecContainerSpecLabelArrayOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecLabelArrayOutput)
}

type ServiceTaskSpecContainerSpecLabelOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecContainerSpecLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecLabel)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecLabelOutput) ToServiceTaskSpecContainerSpecLabelOutput() ServiceTaskSpecContainerSpecLabelOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecLabelOutput) ToServiceTaskSpecContainerSpecLabelOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecLabelOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecLabelOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecLabel) string { return v.Label }).(pulumi.StringOutput)
}

func (o ServiceTaskSpecContainerSpecLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecLabel) string { return v.Value }).(pulumi.StringOutput)
}

type ServiceTaskSpecContainerSpecLabelArrayOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecContainerSpecLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTaskSpecContainerSpecLabel)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecLabelArrayOutput) ToServiceTaskSpecContainerSpecLabelArrayOutput() ServiceTaskSpecContainerSpecLabelArrayOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecLabelArrayOutput) ToServiceTaskSpecContainerSpecLabelArrayOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecLabelArrayOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecLabelArrayOutput) Index(i pulumi.IntInput) ServiceTaskSpecContainerSpecLabelOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ServiceTaskSpecContainerSpecLabel {
		return vs[0].([]ServiceTaskSpecContainerSpecLabel)[vs[1].(int)]
	}).(ServiceTaskSpecContainerSpecLabelOutput)
}

type ServiceTaskSpecContainerSpecMount struct {
	BindOptions *ServiceTaskSpecContainerSpecMountBindOptions `pulumi:"bindOptions"`
	ReadOnly *bool `pulumi:"readOnly"`
	Source *string `pulumi:"source"`
	Target string `pulumi:"target"`
	TmpfsOptions *ServiceTaskSpecContainerSpecMountTmpfsOptions `pulumi:"tmpfsOptions"`
	Type string `pulumi:"type"`
	VolumeOptions *ServiceTaskSpecContainerSpecMountVolumeOptions `pulumi:"volumeOptions"`
}

type ServiceTaskSpecContainerSpecMountInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecMountOutput() ServiceTaskSpecContainerSpecMountOutput
	ToServiceTaskSpecContainerSpecMountOutputWithContext(context.Context) ServiceTaskSpecContainerSpecMountOutput
}

type ServiceTaskSpecContainerSpecMountArgs struct {
	BindOptions ServiceTaskSpecContainerSpecMountBindOptionsPtrInput `pulumi:"bindOptions"`
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	Source pulumi.StringPtrInput `pulumi:"source"`
	Target pulumi.StringInput `pulumi:"target"`
	TmpfsOptions ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrInput `pulumi:"tmpfsOptions"`
	Type pulumi.StringInput `pulumi:"type"`
	VolumeOptions ServiceTaskSpecContainerSpecMountVolumeOptionsPtrInput `pulumi:"volumeOptions"`
}

func (ServiceTaskSpecContainerSpecMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecMount)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecMountArgs) ToServiceTaskSpecContainerSpecMountOutput() ServiceTaskSpecContainerSpecMountOutput {
	return i.ToServiceTaskSpecContainerSpecMountOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecMountArgs) ToServiceTaskSpecContainerSpecMountOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecMountOutput)
}

type ServiceTaskSpecContainerSpecMountArrayInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecMountArrayOutput() ServiceTaskSpecContainerSpecMountArrayOutput
	ToServiceTaskSpecContainerSpecMountArrayOutputWithContext(context.Context) ServiceTaskSpecContainerSpecMountArrayOutput
}

type ServiceTaskSpecContainerSpecMountArray []ServiceTaskSpecContainerSpecMountInput

func (ServiceTaskSpecContainerSpecMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTaskSpecContainerSpecMount)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecMountArray) ToServiceTaskSpecContainerSpecMountArrayOutput() ServiceTaskSpecContainerSpecMountArrayOutput {
	return i.ToServiceTaskSpecContainerSpecMountArrayOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecMountArray) ToServiceTaskSpecContainerSpecMountArrayOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecMountArrayOutput)
}

type ServiceTaskSpecContainerSpecMountOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecContainerSpecMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecMount)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecMountOutput) ToServiceTaskSpecContainerSpecMountOutput() ServiceTaskSpecContainerSpecMountOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountOutput) ToServiceTaskSpecContainerSpecMountOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountOutput) BindOptions() ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMount) *ServiceTaskSpecContainerSpecMountBindOptions { return v.BindOptions }).(ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput)
}

func (o ServiceTaskSpecContainerSpecMountOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMount) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o ServiceTaskSpecContainerSpecMountOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMount) *string { return v.Source }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecMountOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMount) string { return v.Target }).(pulumi.StringOutput)
}

func (o ServiceTaskSpecContainerSpecMountOutput) TmpfsOptions() ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMount) *ServiceTaskSpecContainerSpecMountTmpfsOptions { return v.TmpfsOptions }).(ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput)
}

func (o ServiceTaskSpecContainerSpecMountOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMount) string { return v.Type }).(pulumi.StringOutput)
}

func (o ServiceTaskSpecContainerSpecMountOutput) VolumeOptions() ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMount) *ServiceTaskSpecContainerSpecMountVolumeOptions { return v.VolumeOptions }).(ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput)
}

type ServiceTaskSpecContainerSpecMountArrayOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecContainerSpecMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTaskSpecContainerSpecMount)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecMountArrayOutput) ToServiceTaskSpecContainerSpecMountArrayOutput() ServiceTaskSpecContainerSpecMountArrayOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountArrayOutput) ToServiceTaskSpecContainerSpecMountArrayOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountArrayOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountArrayOutput) Index(i pulumi.IntInput) ServiceTaskSpecContainerSpecMountOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ServiceTaskSpecContainerSpecMount {
		return vs[0].([]ServiceTaskSpecContainerSpecMount)[vs[1].(int)]
	}).(ServiceTaskSpecContainerSpecMountOutput)
}

type ServiceTaskSpecContainerSpecMountBindOptions struct {
	Propagation *string `pulumi:"propagation"`
}

type ServiceTaskSpecContainerSpecMountBindOptionsInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecMountBindOptionsOutput() ServiceTaskSpecContainerSpecMountBindOptionsOutput
	ToServiceTaskSpecContainerSpecMountBindOptionsOutputWithContext(context.Context) ServiceTaskSpecContainerSpecMountBindOptionsOutput
}

type ServiceTaskSpecContainerSpecMountBindOptionsArgs struct {
	Propagation pulumi.StringPtrInput `pulumi:"propagation"`
}

func (ServiceTaskSpecContainerSpecMountBindOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecMountBindOptions)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecMountBindOptionsArgs) ToServiceTaskSpecContainerSpecMountBindOptionsOutput() ServiceTaskSpecContainerSpecMountBindOptionsOutput {
	return i.ToServiceTaskSpecContainerSpecMountBindOptionsOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecMountBindOptionsArgs) ToServiceTaskSpecContainerSpecMountBindOptionsOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountBindOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecMountBindOptionsOutput)
}

func (i ServiceTaskSpecContainerSpecMountBindOptionsArgs) ToServiceTaskSpecContainerSpecMountBindOptionsPtrOutput() ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput {
	return i.ToServiceTaskSpecContainerSpecMountBindOptionsPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecMountBindOptionsArgs) ToServiceTaskSpecContainerSpecMountBindOptionsPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecMountBindOptionsOutput).ToServiceTaskSpecContainerSpecMountBindOptionsPtrOutputWithContext(ctx)
}

type ServiceTaskSpecContainerSpecMountBindOptionsPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecMountBindOptionsPtrOutput() ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput
	ToServiceTaskSpecContainerSpecMountBindOptionsPtrOutputWithContext(context.Context) ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput
}

type serviceTaskSpecContainerSpecMountBindOptionsPtrType ServiceTaskSpecContainerSpecMountBindOptionsArgs

func ServiceTaskSpecContainerSpecMountBindOptionsPtr(v *ServiceTaskSpecContainerSpecMountBindOptionsArgs) ServiceTaskSpecContainerSpecMountBindOptionsPtrInput {	return (*serviceTaskSpecContainerSpecMountBindOptionsPtrType)(v)
}

func (*serviceTaskSpecContainerSpecMountBindOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecContainerSpecMountBindOptions)(nil)).Elem()
}

func (i *serviceTaskSpecContainerSpecMountBindOptionsPtrType) ToServiceTaskSpecContainerSpecMountBindOptionsPtrOutput() ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput {
	return i.ToServiceTaskSpecContainerSpecMountBindOptionsPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecContainerSpecMountBindOptionsPtrType) ToServiceTaskSpecContainerSpecMountBindOptionsPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput)
}

type ServiceTaskSpecContainerSpecMountBindOptionsOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecContainerSpecMountBindOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecMountBindOptions)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecMountBindOptionsOutput) ToServiceTaskSpecContainerSpecMountBindOptionsOutput() ServiceTaskSpecContainerSpecMountBindOptionsOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountBindOptionsOutput) ToServiceTaskSpecContainerSpecMountBindOptionsOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountBindOptionsOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountBindOptionsOutput) ToServiceTaskSpecContainerSpecMountBindOptionsPtrOutput() ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput {
	return o.ToServiceTaskSpecContainerSpecMountBindOptionsPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecContainerSpecMountBindOptionsOutput) ToServiceTaskSpecContainerSpecMountBindOptionsPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpecContainerSpecMountBindOptions) *ServiceTaskSpecContainerSpecMountBindOptions {
		return &v
	}).(ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput)
}
func (o ServiceTaskSpecContainerSpecMountBindOptionsOutput) Propagation() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMountBindOptions) *string { return v.Propagation }).(pulumi.StringPtrOutput)
}

type ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecContainerSpecMountBindOptions)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput) ToServiceTaskSpecContainerSpecMountBindOptionsPtrOutput() ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput) ToServiceTaskSpecContainerSpecMountBindOptionsPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput) Elem() ServiceTaskSpecContainerSpecMountBindOptionsOutput {
	return o.ApplyT(func (v *ServiceTaskSpecContainerSpecMountBindOptions) ServiceTaskSpecContainerSpecMountBindOptions { return *v }).(ServiceTaskSpecContainerSpecMountBindOptionsOutput)
}

func (o ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput) Propagation() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMountBindOptions) *string { return v.Propagation }).(pulumi.StringPtrOutput)
}

type ServiceTaskSpecContainerSpecMountTmpfsOptions struct {
	// The mode of resolution to use for internal load balancing between tasks. `(vip|dnsrr)`. Default: `vip`.
	Mode *int `pulumi:"mode"`
	SizeBytes *int `pulumi:"sizeBytes"`
}

type ServiceTaskSpecContainerSpecMountTmpfsOptionsInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecMountTmpfsOptionsOutput() ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput
	ToServiceTaskSpecContainerSpecMountTmpfsOptionsOutputWithContext(context.Context) ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput
}

type ServiceTaskSpecContainerSpecMountTmpfsOptionsArgs struct {
	// The mode of resolution to use for internal load balancing between tasks. `(vip|dnsrr)`. Default: `vip`.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	SizeBytes pulumi.IntPtrInput `pulumi:"sizeBytes"`
}

func (ServiceTaskSpecContainerSpecMountTmpfsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecMountTmpfsOptions)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecMountTmpfsOptionsArgs) ToServiceTaskSpecContainerSpecMountTmpfsOptionsOutput() ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput {
	return i.ToServiceTaskSpecContainerSpecMountTmpfsOptionsOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecMountTmpfsOptionsArgs) ToServiceTaskSpecContainerSpecMountTmpfsOptionsOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput)
}

func (i ServiceTaskSpecContainerSpecMountTmpfsOptionsArgs) ToServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput() ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput {
	return i.ToServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecMountTmpfsOptionsArgs) ToServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput).ToServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutputWithContext(ctx)
}

type ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput() ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput
	ToServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutputWithContext(context.Context) ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput
}

type serviceTaskSpecContainerSpecMountTmpfsOptionsPtrType ServiceTaskSpecContainerSpecMountTmpfsOptionsArgs

func ServiceTaskSpecContainerSpecMountTmpfsOptionsPtr(v *ServiceTaskSpecContainerSpecMountTmpfsOptionsArgs) ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrInput {	return (*serviceTaskSpecContainerSpecMountTmpfsOptionsPtrType)(v)
}

func (*serviceTaskSpecContainerSpecMountTmpfsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecContainerSpecMountTmpfsOptions)(nil)).Elem()
}

func (i *serviceTaskSpecContainerSpecMountTmpfsOptionsPtrType) ToServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput() ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput {
	return i.ToServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecContainerSpecMountTmpfsOptionsPtrType) ToServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput)
}

type ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecMountTmpfsOptions)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput) ToServiceTaskSpecContainerSpecMountTmpfsOptionsOutput() ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput) ToServiceTaskSpecContainerSpecMountTmpfsOptionsOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput) ToServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput() ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput {
	return o.ToServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput) ToServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpecContainerSpecMountTmpfsOptions) *ServiceTaskSpecContainerSpecMountTmpfsOptions {
		return &v
	}).(ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput)
}
// The mode of resolution to use for internal load balancing between tasks. `(vip|dnsrr)`. Default: `vip`.
func (o ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMountTmpfsOptions) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

func (o ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput) SizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMountTmpfsOptions) *int { return v.SizeBytes }).(pulumi.IntPtrOutput)
}

type ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecContainerSpecMountTmpfsOptions)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput) ToServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput() ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput) ToServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput) Elem() ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput {
	return o.ApplyT(func (v *ServiceTaskSpecContainerSpecMountTmpfsOptions) ServiceTaskSpecContainerSpecMountTmpfsOptions { return *v }).(ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput)
}

// The mode of resolution to use for internal load balancing between tasks. `(vip|dnsrr)`. Default: `vip`.
func (o ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMountTmpfsOptions) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

func (o ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput) SizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMountTmpfsOptions) *int { return v.SizeBytes }).(pulumi.IntPtrOutput)
}

type ServiceTaskSpecContainerSpecMountVolumeOptions struct {
	DriverName *string `pulumi:"driverName"`
	DriverOptions map[string]string `pulumi:"driverOptions"`
	Labels []ServiceTaskSpecContainerSpecMountVolumeOptionsLabel `pulumi:"labels"`
	NoCopy *bool `pulumi:"noCopy"`
}

type ServiceTaskSpecContainerSpecMountVolumeOptionsInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecMountVolumeOptionsOutput() ServiceTaskSpecContainerSpecMountVolumeOptionsOutput
	ToServiceTaskSpecContainerSpecMountVolumeOptionsOutputWithContext(context.Context) ServiceTaskSpecContainerSpecMountVolumeOptionsOutput
}

type ServiceTaskSpecContainerSpecMountVolumeOptionsArgs struct {
	DriverName pulumi.StringPtrInput `pulumi:"driverName"`
	DriverOptions pulumi.StringMapInput `pulumi:"driverOptions"`
	Labels ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayInput `pulumi:"labels"`
	NoCopy pulumi.BoolPtrInput `pulumi:"noCopy"`
}

func (ServiceTaskSpecContainerSpecMountVolumeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecMountVolumeOptions)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecMountVolumeOptionsArgs) ToServiceTaskSpecContainerSpecMountVolumeOptionsOutput() ServiceTaskSpecContainerSpecMountVolumeOptionsOutput {
	return i.ToServiceTaskSpecContainerSpecMountVolumeOptionsOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecMountVolumeOptionsArgs) ToServiceTaskSpecContainerSpecMountVolumeOptionsOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountVolumeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecMountVolumeOptionsOutput)
}

func (i ServiceTaskSpecContainerSpecMountVolumeOptionsArgs) ToServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput() ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput {
	return i.ToServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecMountVolumeOptionsArgs) ToServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecMountVolumeOptionsOutput).ToServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutputWithContext(ctx)
}

type ServiceTaskSpecContainerSpecMountVolumeOptionsPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput() ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput
	ToServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutputWithContext(context.Context) ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput
}

type serviceTaskSpecContainerSpecMountVolumeOptionsPtrType ServiceTaskSpecContainerSpecMountVolumeOptionsArgs

func ServiceTaskSpecContainerSpecMountVolumeOptionsPtr(v *ServiceTaskSpecContainerSpecMountVolumeOptionsArgs) ServiceTaskSpecContainerSpecMountVolumeOptionsPtrInput {	return (*serviceTaskSpecContainerSpecMountVolumeOptionsPtrType)(v)
}

func (*serviceTaskSpecContainerSpecMountVolumeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecContainerSpecMountVolumeOptions)(nil)).Elem()
}

func (i *serviceTaskSpecContainerSpecMountVolumeOptionsPtrType) ToServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput() ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput {
	return i.ToServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecContainerSpecMountVolumeOptionsPtrType) ToServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput)
}

type ServiceTaskSpecContainerSpecMountVolumeOptionsOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecContainerSpecMountVolumeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecMountVolumeOptions)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsOutput) ToServiceTaskSpecContainerSpecMountVolumeOptionsOutput() ServiceTaskSpecContainerSpecMountVolumeOptionsOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsOutput) ToServiceTaskSpecContainerSpecMountVolumeOptionsOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountVolumeOptionsOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsOutput) ToServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput() ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput {
	return o.ToServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsOutput) ToServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpecContainerSpecMountVolumeOptions) *ServiceTaskSpecContainerSpecMountVolumeOptions {
		return &v
	}).(ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput)
}
func (o ServiceTaskSpecContainerSpecMountVolumeOptionsOutput) DriverName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMountVolumeOptions) *string { return v.DriverName }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsOutput) DriverOptions() pulumi.StringMapOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMountVolumeOptions) map[string]string { return v.DriverOptions }).(pulumi.StringMapOutput)
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsOutput) Labels() ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMountVolumeOptions) []ServiceTaskSpecContainerSpecMountVolumeOptionsLabel { return v.Labels }).(ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput)
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsOutput) NoCopy() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMountVolumeOptions) *bool { return v.NoCopy }).(pulumi.BoolPtrOutput)
}

type ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecContainerSpecMountVolumeOptions)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput) ToServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput() ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput) ToServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput) Elem() ServiceTaskSpecContainerSpecMountVolumeOptionsOutput {
	return o.ApplyT(func (v *ServiceTaskSpecContainerSpecMountVolumeOptions) ServiceTaskSpecContainerSpecMountVolumeOptions { return *v }).(ServiceTaskSpecContainerSpecMountVolumeOptionsOutput)
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput) DriverName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMountVolumeOptions) *string { return v.DriverName }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput) DriverOptions() pulumi.StringMapOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMountVolumeOptions) map[string]string { return v.DriverOptions }).(pulumi.StringMapOutput)
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput) Labels() ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMountVolumeOptions) []ServiceTaskSpecContainerSpecMountVolumeOptionsLabel { return v.Labels }).(ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput)
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput) NoCopy() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMountVolumeOptions) *bool { return v.NoCopy }).(pulumi.BoolPtrOutput)
}

type ServiceTaskSpecContainerSpecMountVolumeOptionsLabel struct {
	Label string `pulumi:"label"`
	Value string `pulumi:"value"`
}

type ServiceTaskSpecContainerSpecMountVolumeOptionsLabelInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput() ServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput
	ToServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutputWithContext(context.Context) ServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput
}

type ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArgs struct {
	Label pulumi.StringInput `pulumi:"label"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecMountVolumeOptionsLabel)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArgs) ToServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput() ServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput {
	return i.ToServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArgs) ToServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput)
}

type ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput() ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput
	ToServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutputWithContext(context.Context) ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput
}

type ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArray []ServiceTaskSpecContainerSpecMountVolumeOptionsLabelInput

func (ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTaskSpecContainerSpecMountVolumeOptionsLabel)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArray) ToServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput() ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput {
	return i.ToServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArray) ToServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput)
}

type ServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecMountVolumeOptionsLabel)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput) ToServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput() ServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput) ToServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMountVolumeOptionsLabel) string { return v.Label }).(pulumi.StringOutput)
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecMountVolumeOptionsLabel) string { return v.Value }).(pulumi.StringOutput)
}

type ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTaskSpecContainerSpecMountVolumeOptionsLabel)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput) ToServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput() ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput) ToServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput) Index(i pulumi.IntInput) ServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ServiceTaskSpecContainerSpecMountVolumeOptionsLabel {
		return vs[0].([]ServiceTaskSpecContainerSpecMountVolumeOptionsLabel)[vs[1].(int)]
	}).(ServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput)
}

type ServiceTaskSpecContainerSpecPrivileges struct {
	CredentialSpec *ServiceTaskSpecContainerSpecPrivilegesCredentialSpec `pulumi:"credentialSpec"`
	SeLinuxContext *ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext `pulumi:"seLinuxContext"`
}

type ServiceTaskSpecContainerSpecPrivilegesInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecPrivilegesOutput() ServiceTaskSpecContainerSpecPrivilegesOutput
	ToServiceTaskSpecContainerSpecPrivilegesOutputWithContext(context.Context) ServiceTaskSpecContainerSpecPrivilegesOutput
}

type ServiceTaskSpecContainerSpecPrivilegesArgs struct {
	CredentialSpec ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrInput `pulumi:"credentialSpec"`
	SeLinuxContext ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrInput `pulumi:"seLinuxContext"`
}

func (ServiceTaskSpecContainerSpecPrivilegesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecPrivileges)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecPrivilegesArgs) ToServiceTaskSpecContainerSpecPrivilegesOutput() ServiceTaskSpecContainerSpecPrivilegesOutput {
	return i.ToServiceTaskSpecContainerSpecPrivilegesOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecPrivilegesArgs) ToServiceTaskSpecContainerSpecPrivilegesOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecPrivilegesOutput)
}

func (i ServiceTaskSpecContainerSpecPrivilegesArgs) ToServiceTaskSpecContainerSpecPrivilegesPtrOutput() ServiceTaskSpecContainerSpecPrivilegesPtrOutput {
	return i.ToServiceTaskSpecContainerSpecPrivilegesPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecPrivilegesArgs) ToServiceTaskSpecContainerSpecPrivilegesPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecPrivilegesOutput).ToServiceTaskSpecContainerSpecPrivilegesPtrOutputWithContext(ctx)
}

type ServiceTaskSpecContainerSpecPrivilegesPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecPrivilegesPtrOutput() ServiceTaskSpecContainerSpecPrivilegesPtrOutput
	ToServiceTaskSpecContainerSpecPrivilegesPtrOutputWithContext(context.Context) ServiceTaskSpecContainerSpecPrivilegesPtrOutput
}

type serviceTaskSpecContainerSpecPrivilegesPtrType ServiceTaskSpecContainerSpecPrivilegesArgs

func ServiceTaskSpecContainerSpecPrivilegesPtr(v *ServiceTaskSpecContainerSpecPrivilegesArgs) ServiceTaskSpecContainerSpecPrivilegesPtrInput {	return (*serviceTaskSpecContainerSpecPrivilegesPtrType)(v)
}

func (*serviceTaskSpecContainerSpecPrivilegesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecContainerSpecPrivileges)(nil)).Elem()
}

func (i *serviceTaskSpecContainerSpecPrivilegesPtrType) ToServiceTaskSpecContainerSpecPrivilegesPtrOutput() ServiceTaskSpecContainerSpecPrivilegesPtrOutput {
	return i.ToServiceTaskSpecContainerSpecPrivilegesPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecContainerSpecPrivilegesPtrType) ToServiceTaskSpecContainerSpecPrivilegesPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecPrivilegesPtrOutput)
}

type ServiceTaskSpecContainerSpecPrivilegesOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecContainerSpecPrivilegesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecPrivileges)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecPrivilegesOutput) ToServiceTaskSpecContainerSpecPrivilegesOutput() ServiceTaskSpecContainerSpecPrivilegesOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecPrivilegesOutput) ToServiceTaskSpecContainerSpecPrivilegesOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecPrivilegesOutput) ToServiceTaskSpecContainerSpecPrivilegesPtrOutput() ServiceTaskSpecContainerSpecPrivilegesPtrOutput {
	return o.ToServiceTaskSpecContainerSpecPrivilegesPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecContainerSpecPrivilegesOutput) ToServiceTaskSpecContainerSpecPrivilegesPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpecContainerSpecPrivileges) *ServiceTaskSpecContainerSpecPrivileges {
		return &v
	}).(ServiceTaskSpecContainerSpecPrivilegesPtrOutput)
}
func (o ServiceTaskSpecContainerSpecPrivilegesOutput) CredentialSpec() ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivileges) *ServiceTaskSpecContainerSpecPrivilegesCredentialSpec { return v.CredentialSpec }).(ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput)
}

func (o ServiceTaskSpecContainerSpecPrivilegesOutput) SeLinuxContext() ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivileges) *ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext { return v.SeLinuxContext }).(ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput)
}

type ServiceTaskSpecContainerSpecPrivilegesPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecContainerSpecPrivilegesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecContainerSpecPrivileges)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecPrivilegesPtrOutput) ToServiceTaskSpecContainerSpecPrivilegesPtrOutput() ServiceTaskSpecContainerSpecPrivilegesPtrOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecPrivilegesPtrOutput) ToServiceTaskSpecContainerSpecPrivilegesPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesPtrOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecPrivilegesPtrOutput) Elem() ServiceTaskSpecContainerSpecPrivilegesOutput {
	return o.ApplyT(func (v *ServiceTaskSpecContainerSpecPrivileges) ServiceTaskSpecContainerSpecPrivileges { return *v }).(ServiceTaskSpecContainerSpecPrivilegesOutput)
}

func (o ServiceTaskSpecContainerSpecPrivilegesPtrOutput) CredentialSpec() ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivileges) *ServiceTaskSpecContainerSpecPrivilegesCredentialSpec { return v.CredentialSpec }).(ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput)
}

func (o ServiceTaskSpecContainerSpecPrivilegesPtrOutput) SeLinuxContext() ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivileges) *ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext { return v.SeLinuxContext }).(ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput)
}

type ServiceTaskSpecContainerSpecPrivilegesCredentialSpec struct {
	File *string `pulumi:"file"`
	Registry *string `pulumi:"registry"`
}

type ServiceTaskSpecContainerSpecPrivilegesCredentialSpecInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput() ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput
	ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutputWithContext(context.Context) ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput
}

type ServiceTaskSpecContainerSpecPrivilegesCredentialSpecArgs struct {
	File pulumi.StringPtrInput `pulumi:"file"`
	Registry pulumi.StringPtrInput `pulumi:"registry"`
}

func (ServiceTaskSpecContainerSpecPrivilegesCredentialSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecPrivilegesCredentialSpec)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecPrivilegesCredentialSpecArgs) ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput() ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput {
	return i.ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecPrivilegesCredentialSpecArgs) ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput)
}

func (i ServiceTaskSpecContainerSpecPrivilegesCredentialSpecArgs) ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput() ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput {
	return i.ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecPrivilegesCredentialSpecArgs) ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput).ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutputWithContext(ctx)
}

type ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput() ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput
	ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutputWithContext(context.Context) ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput
}

type serviceTaskSpecContainerSpecPrivilegesCredentialSpecPtrType ServiceTaskSpecContainerSpecPrivilegesCredentialSpecArgs

func ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtr(v *ServiceTaskSpecContainerSpecPrivilegesCredentialSpecArgs) ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrInput {	return (*serviceTaskSpecContainerSpecPrivilegesCredentialSpecPtrType)(v)
}

func (*serviceTaskSpecContainerSpecPrivilegesCredentialSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecContainerSpecPrivilegesCredentialSpec)(nil)).Elem()
}

func (i *serviceTaskSpecContainerSpecPrivilegesCredentialSpecPtrType) ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput() ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput {
	return i.ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecContainerSpecPrivilegesCredentialSpecPtrType) ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput)
}

type ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecPrivilegesCredentialSpec)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput) ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput() ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput) ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput) ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput() ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput {
	return o.ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput) ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpecContainerSpecPrivilegesCredentialSpec) *ServiceTaskSpecContainerSpecPrivilegesCredentialSpec {
		return &v
	}).(ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput)
}
func (o ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivilegesCredentialSpec) *string { return v.File }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivilegesCredentialSpec) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

type ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecContainerSpecPrivilegesCredentialSpec)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput) ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput() ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput) ToServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput) Elem() ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput {
	return o.ApplyT(func (v *ServiceTaskSpecContainerSpecPrivilegesCredentialSpec) ServiceTaskSpecContainerSpecPrivilegesCredentialSpec { return *v }).(ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput)
}

func (o ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivilegesCredentialSpec) *string { return v.File }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivilegesCredentialSpec) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

type ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext struct {
	Disable *bool `pulumi:"disable"`
	Level *string `pulumi:"level"`
	Role *string `pulumi:"role"`
	Type *string `pulumi:"type"`
	User *string `pulumi:"user"`
}

type ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput() ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput
	ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutputWithContext(context.Context) ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput
}

type ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextArgs struct {
	Disable pulumi.BoolPtrInput `pulumi:"disable"`
	Level pulumi.StringPtrInput `pulumi:"level"`
	Role pulumi.StringPtrInput `pulumi:"role"`
	Type pulumi.StringPtrInput `pulumi:"type"`
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextArgs) ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput() ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput {
	return i.ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextArgs) ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput)
}

func (i ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextArgs) ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput() ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput {
	return i.ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextArgs) ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput).ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutputWithContext(ctx)
}

type ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput() ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput
	ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutputWithContext(context.Context) ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput
}

type serviceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrType ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextArgs

func ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtr(v *ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextArgs) ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrInput {	return (*serviceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrType)(v)
}

func (*serviceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext)(nil)).Elem()
}

func (i *serviceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrType) ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput() ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput {
	return i.ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrType) ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput)
}

type ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput) ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput() ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput) ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput) ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput() ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput {
	return o.ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput) ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext) *ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext {
		return &v
	}).(ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput)
}
func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput) Disable() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext) *bool { return v.Disable }).(pulumi.BoolPtrOutput)
}

func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext) *string { return v.Level }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext) *string { return v.User }).(pulumi.StringPtrOutput)
}

type ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput) ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput() ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput) ToServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput) Elem() ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput {
	return o.ApplyT(func (v *ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext) ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext { return *v }).(ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput)
}

func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput) Disable() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext) *bool { return v.Disable }).(pulumi.BoolPtrOutput)
}

func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext) *string { return v.Level }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext) *string { return v.User }).(pulumi.StringPtrOutput)
}

type ServiceTaskSpecContainerSpecSecret struct {
	// Represents the file GID. Defaults: `0`
	FileGid *string `pulumi:"fileGid"`
	// Represents the FileMode of the file. Defaults: `0444`
	FileMode *int `pulumi:"fileMode"`
	// Represents the final filename in the filesystem. The specific target file that the config data is written within the docker container, e.g. `/root/config/config.json`
	FileName string `pulumi:"fileName"`
	// Represents the file UID. Defaults: `0`
	FileUid *string `pulumi:"fileUid"`
	SecretId string `pulumi:"secretId"`
	SecretName *string `pulumi:"secretName"`
}

type ServiceTaskSpecContainerSpecSecretInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecSecretOutput() ServiceTaskSpecContainerSpecSecretOutput
	ToServiceTaskSpecContainerSpecSecretOutputWithContext(context.Context) ServiceTaskSpecContainerSpecSecretOutput
}

type ServiceTaskSpecContainerSpecSecretArgs struct {
	// Represents the file GID. Defaults: `0`
	FileGid pulumi.StringPtrInput `pulumi:"fileGid"`
	// Represents the FileMode of the file. Defaults: `0444`
	FileMode pulumi.IntPtrInput `pulumi:"fileMode"`
	// Represents the final filename in the filesystem. The specific target file that the config data is written within the docker container, e.g. `/root/config/config.json`
	FileName pulumi.StringInput `pulumi:"fileName"`
	// Represents the file UID. Defaults: `0`
	FileUid pulumi.StringPtrInput `pulumi:"fileUid"`
	SecretId pulumi.StringInput `pulumi:"secretId"`
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (ServiceTaskSpecContainerSpecSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecSecret)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecSecretArgs) ToServiceTaskSpecContainerSpecSecretOutput() ServiceTaskSpecContainerSpecSecretOutput {
	return i.ToServiceTaskSpecContainerSpecSecretOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecSecretArgs) ToServiceTaskSpecContainerSpecSecretOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecSecretOutput)
}

type ServiceTaskSpecContainerSpecSecretArrayInput interface {
	pulumi.Input

	ToServiceTaskSpecContainerSpecSecretArrayOutput() ServiceTaskSpecContainerSpecSecretArrayOutput
	ToServiceTaskSpecContainerSpecSecretArrayOutputWithContext(context.Context) ServiceTaskSpecContainerSpecSecretArrayOutput
}

type ServiceTaskSpecContainerSpecSecretArray []ServiceTaskSpecContainerSpecSecretInput

func (ServiceTaskSpecContainerSpecSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTaskSpecContainerSpecSecret)(nil)).Elem()
}

func (i ServiceTaskSpecContainerSpecSecretArray) ToServiceTaskSpecContainerSpecSecretArrayOutput() ServiceTaskSpecContainerSpecSecretArrayOutput {
	return i.ToServiceTaskSpecContainerSpecSecretArrayOutputWithContext(context.Background())
}

func (i ServiceTaskSpecContainerSpecSecretArray) ToServiceTaskSpecContainerSpecSecretArrayOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecContainerSpecSecretArrayOutput)
}

type ServiceTaskSpecContainerSpecSecretOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecContainerSpecSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecContainerSpecSecret)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecSecretOutput) ToServiceTaskSpecContainerSpecSecretOutput() ServiceTaskSpecContainerSpecSecretOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecSecretOutput) ToServiceTaskSpecContainerSpecSecretOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecSecretOutput {
	return o
}

// Represents the file GID. Defaults: `0`
func (o ServiceTaskSpecContainerSpecSecretOutput) FileGid() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecSecret) *string { return v.FileGid }).(pulumi.StringPtrOutput)
}

// Represents the FileMode of the file. Defaults: `0444`
func (o ServiceTaskSpecContainerSpecSecretOutput) FileMode() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecSecret) *int { return v.FileMode }).(pulumi.IntPtrOutput)
}

// Represents the final filename in the filesystem. The specific target file that the config data is written within the docker container, e.g. `/root/config/config.json`
func (o ServiceTaskSpecContainerSpecSecretOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecSecret) string { return v.FileName }).(pulumi.StringOutput)
}

// Represents the file UID. Defaults: `0`
func (o ServiceTaskSpecContainerSpecSecretOutput) FileUid() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecSecret) *string { return v.FileUid }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecContainerSpecSecretOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecSecret) string { return v.SecretId }).(pulumi.StringOutput)
}

func (o ServiceTaskSpecContainerSpecSecretOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecContainerSpecSecret) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type ServiceTaskSpecContainerSpecSecretArrayOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecContainerSpecSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTaskSpecContainerSpecSecret)(nil)).Elem()
}

func (o ServiceTaskSpecContainerSpecSecretArrayOutput) ToServiceTaskSpecContainerSpecSecretArrayOutput() ServiceTaskSpecContainerSpecSecretArrayOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecSecretArrayOutput) ToServiceTaskSpecContainerSpecSecretArrayOutputWithContext(ctx context.Context) ServiceTaskSpecContainerSpecSecretArrayOutput {
	return o
}

func (o ServiceTaskSpecContainerSpecSecretArrayOutput) Index(i pulumi.IntInput) ServiceTaskSpecContainerSpecSecretOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ServiceTaskSpecContainerSpecSecret {
		return vs[0].([]ServiceTaskSpecContainerSpecSecret)[vs[1].(int)]
	}).(ServiceTaskSpecContainerSpecSecretOutput)
}

type ServiceTaskSpecLogDriver struct {
	// A random name for the port.
	Name string `pulumi:"name"`
	// The options for the logging driver, e.g.
	Options map[string]string `pulumi:"options"`
}

type ServiceTaskSpecLogDriverInput interface {
	pulumi.Input

	ToServiceTaskSpecLogDriverOutput() ServiceTaskSpecLogDriverOutput
	ToServiceTaskSpecLogDriverOutputWithContext(context.Context) ServiceTaskSpecLogDriverOutput
}

type ServiceTaskSpecLogDriverArgs struct {
	// A random name for the port.
	Name pulumi.StringInput `pulumi:"name"`
	// The options for the logging driver, e.g.
	Options pulumi.StringMapInput `pulumi:"options"`
}

func (ServiceTaskSpecLogDriverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecLogDriver)(nil)).Elem()
}

func (i ServiceTaskSpecLogDriverArgs) ToServiceTaskSpecLogDriverOutput() ServiceTaskSpecLogDriverOutput {
	return i.ToServiceTaskSpecLogDriverOutputWithContext(context.Background())
}

func (i ServiceTaskSpecLogDriverArgs) ToServiceTaskSpecLogDriverOutputWithContext(ctx context.Context) ServiceTaskSpecLogDriverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecLogDriverOutput)
}

func (i ServiceTaskSpecLogDriverArgs) ToServiceTaskSpecLogDriverPtrOutput() ServiceTaskSpecLogDriverPtrOutput {
	return i.ToServiceTaskSpecLogDriverPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecLogDriverArgs) ToServiceTaskSpecLogDriverPtrOutputWithContext(ctx context.Context) ServiceTaskSpecLogDriverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecLogDriverOutput).ToServiceTaskSpecLogDriverPtrOutputWithContext(ctx)
}

type ServiceTaskSpecLogDriverPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecLogDriverPtrOutput() ServiceTaskSpecLogDriverPtrOutput
	ToServiceTaskSpecLogDriverPtrOutputWithContext(context.Context) ServiceTaskSpecLogDriverPtrOutput
}

type serviceTaskSpecLogDriverPtrType ServiceTaskSpecLogDriverArgs

func ServiceTaskSpecLogDriverPtr(v *ServiceTaskSpecLogDriverArgs) ServiceTaskSpecLogDriverPtrInput {	return (*serviceTaskSpecLogDriverPtrType)(v)
}

func (*serviceTaskSpecLogDriverPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecLogDriver)(nil)).Elem()
}

func (i *serviceTaskSpecLogDriverPtrType) ToServiceTaskSpecLogDriverPtrOutput() ServiceTaskSpecLogDriverPtrOutput {
	return i.ToServiceTaskSpecLogDriverPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecLogDriverPtrType) ToServiceTaskSpecLogDriverPtrOutputWithContext(ctx context.Context) ServiceTaskSpecLogDriverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecLogDriverPtrOutput)
}

type ServiceTaskSpecLogDriverOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecLogDriverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecLogDriver)(nil)).Elem()
}

func (o ServiceTaskSpecLogDriverOutput) ToServiceTaskSpecLogDriverOutput() ServiceTaskSpecLogDriverOutput {
	return o
}

func (o ServiceTaskSpecLogDriverOutput) ToServiceTaskSpecLogDriverOutputWithContext(ctx context.Context) ServiceTaskSpecLogDriverOutput {
	return o
}

func (o ServiceTaskSpecLogDriverOutput) ToServiceTaskSpecLogDriverPtrOutput() ServiceTaskSpecLogDriverPtrOutput {
	return o.ToServiceTaskSpecLogDriverPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecLogDriverOutput) ToServiceTaskSpecLogDriverPtrOutputWithContext(ctx context.Context) ServiceTaskSpecLogDriverPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpecLogDriver) *ServiceTaskSpecLogDriver {
		return &v
	}).(ServiceTaskSpecLogDriverPtrOutput)
}
// A random name for the port.
func (o ServiceTaskSpecLogDriverOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecLogDriver) string { return v.Name }).(pulumi.StringOutput)
}

// The options for the logging driver, e.g.
func (o ServiceTaskSpecLogDriverOutput) Options() pulumi.StringMapOutput {
	return o.ApplyT(func (v ServiceTaskSpecLogDriver) map[string]string { return v.Options }).(pulumi.StringMapOutput)
}

type ServiceTaskSpecLogDriverPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecLogDriverPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecLogDriver)(nil)).Elem()
}

func (o ServiceTaskSpecLogDriverPtrOutput) ToServiceTaskSpecLogDriverPtrOutput() ServiceTaskSpecLogDriverPtrOutput {
	return o
}

func (o ServiceTaskSpecLogDriverPtrOutput) ToServiceTaskSpecLogDriverPtrOutputWithContext(ctx context.Context) ServiceTaskSpecLogDriverPtrOutput {
	return o
}

func (o ServiceTaskSpecLogDriverPtrOutput) Elem() ServiceTaskSpecLogDriverOutput {
	return o.ApplyT(func (v *ServiceTaskSpecLogDriver) ServiceTaskSpecLogDriver { return *v }).(ServiceTaskSpecLogDriverOutput)
}

// A random name for the port.
func (o ServiceTaskSpecLogDriverPtrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecLogDriver) string { return v.Name }).(pulumi.StringOutput)
}

// The options for the logging driver, e.g.
func (o ServiceTaskSpecLogDriverPtrOutput) Options() pulumi.StringMapOutput {
	return o.ApplyT(func (v ServiceTaskSpecLogDriver) map[string]string { return v.Options }).(pulumi.StringMapOutput)
}

type ServiceTaskSpecPlacement struct {
	Constraints []string `pulumi:"constraints"`
	Platforms []ServiceTaskSpecPlacementPlatform `pulumi:"platforms"`
	Prefs []string `pulumi:"prefs"`
}

type ServiceTaskSpecPlacementInput interface {
	pulumi.Input

	ToServiceTaskSpecPlacementOutput() ServiceTaskSpecPlacementOutput
	ToServiceTaskSpecPlacementOutputWithContext(context.Context) ServiceTaskSpecPlacementOutput
}

type ServiceTaskSpecPlacementArgs struct {
	Constraints pulumi.StringArrayInput `pulumi:"constraints"`
	Platforms ServiceTaskSpecPlacementPlatformArrayInput `pulumi:"platforms"`
	Prefs pulumi.StringArrayInput `pulumi:"prefs"`
}

func (ServiceTaskSpecPlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecPlacement)(nil)).Elem()
}

func (i ServiceTaskSpecPlacementArgs) ToServiceTaskSpecPlacementOutput() ServiceTaskSpecPlacementOutput {
	return i.ToServiceTaskSpecPlacementOutputWithContext(context.Background())
}

func (i ServiceTaskSpecPlacementArgs) ToServiceTaskSpecPlacementOutputWithContext(ctx context.Context) ServiceTaskSpecPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecPlacementOutput)
}

func (i ServiceTaskSpecPlacementArgs) ToServiceTaskSpecPlacementPtrOutput() ServiceTaskSpecPlacementPtrOutput {
	return i.ToServiceTaskSpecPlacementPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecPlacementArgs) ToServiceTaskSpecPlacementPtrOutputWithContext(ctx context.Context) ServiceTaskSpecPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecPlacementOutput).ToServiceTaskSpecPlacementPtrOutputWithContext(ctx)
}

type ServiceTaskSpecPlacementPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecPlacementPtrOutput() ServiceTaskSpecPlacementPtrOutput
	ToServiceTaskSpecPlacementPtrOutputWithContext(context.Context) ServiceTaskSpecPlacementPtrOutput
}

type serviceTaskSpecPlacementPtrType ServiceTaskSpecPlacementArgs

func ServiceTaskSpecPlacementPtr(v *ServiceTaskSpecPlacementArgs) ServiceTaskSpecPlacementPtrInput {	return (*serviceTaskSpecPlacementPtrType)(v)
}

func (*serviceTaskSpecPlacementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecPlacement)(nil)).Elem()
}

func (i *serviceTaskSpecPlacementPtrType) ToServiceTaskSpecPlacementPtrOutput() ServiceTaskSpecPlacementPtrOutput {
	return i.ToServiceTaskSpecPlacementPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecPlacementPtrType) ToServiceTaskSpecPlacementPtrOutputWithContext(ctx context.Context) ServiceTaskSpecPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecPlacementPtrOutput)
}

type ServiceTaskSpecPlacementOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecPlacement)(nil)).Elem()
}

func (o ServiceTaskSpecPlacementOutput) ToServiceTaskSpecPlacementOutput() ServiceTaskSpecPlacementOutput {
	return o
}

func (o ServiceTaskSpecPlacementOutput) ToServiceTaskSpecPlacementOutputWithContext(ctx context.Context) ServiceTaskSpecPlacementOutput {
	return o
}

func (o ServiceTaskSpecPlacementOutput) ToServiceTaskSpecPlacementPtrOutput() ServiceTaskSpecPlacementPtrOutput {
	return o.ToServiceTaskSpecPlacementPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecPlacementOutput) ToServiceTaskSpecPlacementPtrOutputWithContext(ctx context.Context) ServiceTaskSpecPlacementPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpecPlacement) *ServiceTaskSpecPlacement {
		return &v
	}).(ServiceTaskSpecPlacementPtrOutput)
}
func (o ServiceTaskSpecPlacementOutput) Constraints() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecPlacement) []string { return v.Constraints }).(pulumi.StringArrayOutput)
}

func (o ServiceTaskSpecPlacementOutput) Platforms() ServiceTaskSpecPlacementPlatformArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecPlacement) []ServiceTaskSpecPlacementPlatform { return v.Platforms }).(ServiceTaskSpecPlacementPlatformArrayOutput)
}

func (o ServiceTaskSpecPlacementOutput) Prefs() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecPlacement) []string { return v.Prefs }).(pulumi.StringArrayOutput)
}

type ServiceTaskSpecPlacementPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecPlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecPlacement)(nil)).Elem()
}

func (o ServiceTaskSpecPlacementPtrOutput) ToServiceTaskSpecPlacementPtrOutput() ServiceTaskSpecPlacementPtrOutput {
	return o
}

func (o ServiceTaskSpecPlacementPtrOutput) ToServiceTaskSpecPlacementPtrOutputWithContext(ctx context.Context) ServiceTaskSpecPlacementPtrOutput {
	return o
}

func (o ServiceTaskSpecPlacementPtrOutput) Elem() ServiceTaskSpecPlacementOutput {
	return o.ApplyT(func (v *ServiceTaskSpecPlacement) ServiceTaskSpecPlacement { return *v }).(ServiceTaskSpecPlacementOutput)
}

func (o ServiceTaskSpecPlacementPtrOutput) Constraints() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecPlacement) []string { return v.Constraints }).(pulumi.StringArrayOutput)
}

func (o ServiceTaskSpecPlacementPtrOutput) Platforms() ServiceTaskSpecPlacementPlatformArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecPlacement) []ServiceTaskSpecPlacementPlatform { return v.Platforms }).(ServiceTaskSpecPlacementPlatformArrayOutput)
}

func (o ServiceTaskSpecPlacementPtrOutput) Prefs() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecPlacement) []string { return v.Prefs }).(pulumi.StringArrayOutput)
}

type ServiceTaskSpecPlacementPlatform struct {
	Architecture string `pulumi:"architecture"`
	Os string `pulumi:"os"`
}

type ServiceTaskSpecPlacementPlatformInput interface {
	pulumi.Input

	ToServiceTaskSpecPlacementPlatformOutput() ServiceTaskSpecPlacementPlatformOutput
	ToServiceTaskSpecPlacementPlatformOutputWithContext(context.Context) ServiceTaskSpecPlacementPlatformOutput
}

type ServiceTaskSpecPlacementPlatformArgs struct {
	Architecture pulumi.StringInput `pulumi:"architecture"`
	Os pulumi.StringInput `pulumi:"os"`
}

func (ServiceTaskSpecPlacementPlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecPlacementPlatform)(nil)).Elem()
}

func (i ServiceTaskSpecPlacementPlatformArgs) ToServiceTaskSpecPlacementPlatformOutput() ServiceTaskSpecPlacementPlatformOutput {
	return i.ToServiceTaskSpecPlacementPlatformOutputWithContext(context.Background())
}

func (i ServiceTaskSpecPlacementPlatformArgs) ToServiceTaskSpecPlacementPlatformOutputWithContext(ctx context.Context) ServiceTaskSpecPlacementPlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecPlacementPlatformOutput)
}

type ServiceTaskSpecPlacementPlatformArrayInput interface {
	pulumi.Input

	ToServiceTaskSpecPlacementPlatformArrayOutput() ServiceTaskSpecPlacementPlatformArrayOutput
	ToServiceTaskSpecPlacementPlatformArrayOutputWithContext(context.Context) ServiceTaskSpecPlacementPlatformArrayOutput
}

type ServiceTaskSpecPlacementPlatformArray []ServiceTaskSpecPlacementPlatformInput

func (ServiceTaskSpecPlacementPlatformArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTaskSpecPlacementPlatform)(nil)).Elem()
}

func (i ServiceTaskSpecPlacementPlatformArray) ToServiceTaskSpecPlacementPlatformArrayOutput() ServiceTaskSpecPlacementPlatformArrayOutput {
	return i.ToServiceTaskSpecPlacementPlatformArrayOutputWithContext(context.Background())
}

func (i ServiceTaskSpecPlacementPlatformArray) ToServiceTaskSpecPlacementPlatformArrayOutputWithContext(ctx context.Context) ServiceTaskSpecPlacementPlatformArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecPlacementPlatformArrayOutput)
}

type ServiceTaskSpecPlacementPlatformOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecPlacementPlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecPlacementPlatform)(nil)).Elem()
}

func (o ServiceTaskSpecPlacementPlatformOutput) ToServiceTaskSpecPlacementPlatformOutput() ServiceTaskSpecPlacementPlatformOutput {
	return o
}

func (o ServiceTaskSpecPlacementPlatformOutput) ToServiceTaskSpecPlacementPlatformOutputWithContext(ctx context.Context) ServiceTaskSpecPlacementPlatformOutput {
	return o
}

func (o ServiceTaskSpecPlacementPlatformOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecPlacementPlatform) string { return v.Architecture }).(pulumi.StringOutput)
}

func (o ServiceTaskSpecPlacementPlatformOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceTaskSpecPlacementPlatform) string { return v.Os }).(pulumi.StringOutput)
}

type ServiceTaskSpecPlacementPlatformArrayOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecPlacementPlatformArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTaskSpecPlacementPlatform)(nil)).Elem()
}

func (o ServiceTaskSpecPlacementPlatformArrayOutput) ToServiceTaskSpecPlacementPlatformArrayOutput() ServiceTaskSpecPlacementPlatformArrayOutput {
	return o
}

func (o ServiceTaskSpecPlacementPlatformArrayOutput) ToServiceTaskSpecPlacementPlatformArrayOutputWithContext(ctx context.Context) ServiceTaskSpecPlacementPlatformArrayOutput {
	return o
}

func (o ServiceTaskSpecPlacementPlatformArrayOutput) Index(i pulumi.IntInput) ServiceTaskSpecPlacementPlatformOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ServiceTaskSpecPlacementPlatform {
		return vs[0].([]ServiceTaskSpecPlacementPlatform)[vs[1].(int)]
	}).(ServiceTaskSpecPlacementPlatformOutput)
}

type ServiceTaskSpecResources struct {
	Limits *ServiceTaskSpecResourcesLimits `pulumi:"limits"`
	Reservation *ServiceTaskSpecResourcesReservation `pulumi:"reservation"`
}

type ServiceTaskSpecResourcesInput interface {
	pulumi.Input

	ToServiceTaskSpecResourcesOutput() ServiceTaskSpecResourcesOutput
	ToServiceTaskSpecResourcesOutputWithContext(context.Context) ServiceTaskSpecResourcesOutput
}

type ServiceTaskSpecResourcesArgs struct {
	Limits ServiceTaskSpecResourcesLimitsPtrInput `pulumi:"limits"`
	Reservation ServiceTaskSpecResourcesReservationPtrInput `pulumi:"reservation"`
}

func (ServiceTaskSpecResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecResources)(nil)).Elem()
}

func (i ServiceTaskSpecResourcesArgs) ToServiceTaskSpecResourcesOutput() ServiceTaskSpecResourcesOutput {
	return i.ToServiceTaskSpecResourcesOutputWithContext(context.Background())
}

func (i ServiceTaskSpecResourcesArgs) ToServiceTaskSpecResourcesOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecResourcesOutput)
}

func (i ServiceTaskSpecResourcesArgs) ToServiceTaskSpecResourcesPtrOutput() ServiceTaskSpecResourcesPtrOutput {
	return i.ToServiceTaskSpecResourcesPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecResourcesArgs) ToServiceTaskSpecResourcesPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecResourcesOutput).ToServiceTaskSpecResourcesPtrOutputWithContext(ctx)
}

type ServiceTaskSpecResourcesPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecResourcesPtrOutput() ServiceTaskSpecResourcesPtrOutput
	ToServiceTaskSpecResourcesPtrOutputWithContext(context.Context) ServiceTaskSpecResourcesPtrOutput
}

type serviceTaskSpecResourcesPtrType ServiceTaskSpecResourcesArgs

func ServiceTaskSpecResourcesPtr(v *ServiceTaskSpecResourcesArgs) ServiceTaskSpecResourcesPtrInput {	return (*serviceTaskSpecResourcesPtrType)(v)
}

func (*serviceTaskSpecResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecResources)(nil)).Elem()
}

func (i *serviceTaskSpecResourcesPtrType) ToServiceTaskSpecResourcesPtrOutput() ServiceTaskSpecResourcesPtrOutput {
	return i.ToServiceTaskSpecResourcesPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecResourcesPtrType) ToServiceTaskSpecResourcesPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecResourcesPtrOutput)
}

type ServiceTaskSpecResourcesOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecResources)(nil)).Elem()
}

func (o ServiceTaskSpecResourcesOutput) ToServiceTaskSpecResourcesOutput() ServiceTaskSpecResourcesOutput {
	return o
}

func (o ServiceTaskSpecResourcesOutput) ToServiceTaskSpecResourcesOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesOutput {
	return o
}

func (o ServiceTaskSpecResourcesOutput) ToServiceTaskSpecResourcesPtrOutput() ServiceTaskSpecResourcesPtrOutput {
	return o.ToServiceTaskSpecResourcesPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecResourcesOutput) ToServiceTaskSpecResourcesPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpecResources) *ServiceTaskSpecResources {
		return &v
	}).(ServiceTaskSpecResourcesPtrOutput)
}
func (o ServiceTaskSpecResourcesOutput) Limits() ServiceTaskSpecResourcesLimitsPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecResources) *ServiceTaskSpecResourcesLimits { return v.Limits }).(ServiceTaskSpecResourcesLimitsPtrOutput)
}

func (o ServiceTaskSpecResourcesOutput) Reservation() ServiceTaskSpecResourcesReservationPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecResources) *ServiceTaskSpecResourcesReservation { return v.Reservation }).(ServiceTaskSpecResourcesReservationPtrOutput)
}

type ServiceTaskSpecResourcesPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecResources)(nil)).Elem()
}

func (o ServiceTaskSpecResourcesPtrOutput) ToServiceTaskSpecResourcesPtrOutput() ServiceTaskSpecResourcesPtrOutput {
	return o
}

func (o ServiceTaskSpecResourcesPtrOutput) ToServiceTaskSpecResourcesPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesPtrOutput {
	return o
}

func (o ServiceTaskSpecResourcesPtrOutput) Elem() ServiceTaskSpecResourcesOutput {
	return o.ApplyT(func (v *ServiceTaskSpecResources) ServiceTaskSpecResources { return *v }).(ServiceTaskSpecResourcesOutput)
}

func (o ServiceTaskSpecResourcesPtrOutput) Limits() ServiceTaskSpecResourcesLimitsPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecResources) *ServiceTaskSpecResourcesLimits { return v.Limits }).(ServiceTaskSpecResourcesLimitsPtrOutput)
}

func (o ServiceTaskSpecResourcesPtrOutput) Reservation() ServiceTaskSpecResourcesReservationPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecResources) *ServiceTaskSpecResourcesReservation { return v.Reservation }).(ServiceTaskSpecResourcesReservationPtrOutput)
}

type ServiceTaskSpecResourcesLimits struct {
	GenericResources *ServiceTaskSpecResourcesLimitsGenericResources `pulumi:"genericResources"`
	MemoryBytes *int `pulumi:"memoryBytes"`
	NanoCpus *int `pulumi:"nanoCpus"`
}

type ServiceTaskSpecResourcesLimitsInput interface {
	pulumi.Input

	ToServiceTaskSpecResourcesLimitsOutput() ServiceTaskSpecResourcesLimitsOutput
	ToServiceTaskSpecResourcesLimitsOutputWithContext(context.Context) ServiceTaskSpecResourcesLimitsOutput
}

type ServiceTaskSpecResourcesLimitsArgs struct {
	GenericResources ServiceTaskSpecResourcesLimitsGenericResourcesPtrInput `pulumi:"genericResources"`
	MemoryBytes pulumi.IntPtrInput `pulumi:"memoryBytes"`
	NanoCpus pulumi.IntPtrInput `pulumi:"nanoCpus"`
}

func (ServiceTaskSpecResourcesLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecResourcesLimits)(nil)).Elem()
}

func (i ServiceTaskSpecResourcesLimitsArgs) ToServiceTaskSpecResourcesLimitsOutput() ServiceTaskSpecResourcesLimitsOutput {
	return i.ToServiceTaskSpecResourcesLimitsOutputWithContext(context.Background())
}

func (i ServiceTaskSpecResourcesLimitsArgs) ToServiceTaskSpecResourcesLimitsOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecResourcesLimitsOutput)
}

func (i ServiceTaskSpecResourcesLimitsArgs) ToServiceTaskSpecResourcesLimitsPtrOutput() ServiceTaskSpecResourcesLimitsPtrOutput {
	return i.ToServiceTaskSpecResourcesLimitsPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecResourcesLimitsArgs) ToServiceTaskSpecResourcesLimitsPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecResourcesLimitsOutput).ToServiceTaskSpecResourcesLimitsPtrOutputWithContext(ctx)
}

type ServiceTaskSpecResourcesLimitsPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecResourcesLimitsPtrOutput() ServiceTaskSpecResourcesLimitsPtrOutput
	ToServiceTaskSpecResourcesLimitsPtrOutputWithContext(context.Context) ServiceTaskSpecResourcesLimitsPtrOutput
}

type serviceTaskSpecResourcesLimitsPtrType ServiceTaskSpecResourcesLimitsArgs

func ServiceTaskSpecResourcesLimitsPtr(v *ServiceTaskSpecResourcesLimitsArgs) ServiceTaskSpecResourcesLimitsPtrInput {	return (*serviceTaskSpecResourcesLimitsPtrType)(v)
}

func (*serviceTaskSpecResourcesLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecResourcesLimits)(nil)).Elem()
}

func (i *serviceTaskSpecResourcesLimitsPtrType) ToServiceTaskSpecResourcesLimitsPtrOutput() ServiceTaskSpecResourcesLimitsPtrOutput {
	return i.ToServiceTaskSpecResourcesLimitsPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecResourcesLimitsPtrType) ToServiceTaskSpecResourcesLimitsPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecResourcesLimitsPtrOutput)
}

type ServiceTaskSpecResourcesLimitsOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecResourcesLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecResourcesLimits)(nil)).Elem()
}

func (o ServiceTaskSpecResourcesLimitsOutput) ToServiceTaskSpecResourcesLimitsOutput() ServiceTaskSpecResourcesLimitsOutput {
	return o
}

func (o ServiceTaskSpecResourcesLimitsOutput) ToServiceTaskSpecResourcesLimitsOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesLimitsOutput {
	return o
}

func (o ServiceTaskSpecResourcesLimitsOutput) ToServiceTaskSpecResourcesLimitsPtrOutput() ServiceTaskSpecResourcesLimitsPtrOutput {
	return o.ToServiceTaskSpecResourcesLimitsPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecResourcesLimitsOutput) ToServiceTaskSpecResourcesLimitsPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesLimitsPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpecResourcesLimits) *ServiceTaskSpecResourcesLimits {
		return &v
	}).(ServiceTaskSpecResourcesLimitsPtrOutput)
}
func (o ServiceTaskSpecResourcesLimitsOutput) GenericResources() ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesLimits) *ServiceTaskSpecResourcesLimitsGenericResources { return v.GenericResources }).(ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput)
}

func (o ServiceTaskSpecResourcesLimitsOutput) MemoryBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesLimits) *int { return v.MemoryBytes }).(pulumi.IntPtrOutput)
}

func (o ServiceTaskSpecResourcesLimitsOutput) NanoCpus() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesLimits) *int { return v.NanoCpus }).(pulumi.IntPtrOutput)
}

type ServiceTaskSpecResourcesLimitsPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecResourcesLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecResourcesLimits)(nil)).Elem()
}

func (o ServiceTaskSpecResourcesLimitsPtrOutput) ToServiceTaskSpecResourcesLimitsPtrOutput() ServiceTaskSpecResourcesLimitsPtrOutput {
	return o
}

func (o ServiceTaskSpecResourcesLimitsPtrOutput) ToServiceTaskSpecResourcesLimitsPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesLimitsPtrOutput {
	return o
}

func (o ServiceTaskSpecResourcesLimitsPtrOutput) Elem() ServiceTaskSpecResourcesLimitsOutput {
	return o.ApplyT(func (v *ServiceTaskSpecResourcesLimits) ServiceTaskSpecResourcesLimits { return *v }).(ServiceTaskSpecResourcesLimitsOutput)
}

func (o ServiceTaskSpecResourcesLimitsPtrOutput) GenericResources() ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesLimits) *ServiceTaskSpecResourcesLimitsGenericResources { return v.GenericResources }).(ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput)
}

func (o ServiceTaskSpecResourcesLimitsPtrOutput) MemoryBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesLimits) *int { return v.MemoryBytes }).(pulumi.IntPtrOutput)
}

func (o ServiceTaskSpecResourcesLimitsPtrOutput) NanoCpus() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesLimits) *int { return v.NanoCpus }).(pulumi.IntPtrOutput)
}

type ServiceTaskSpecResourcesLimitsGenericResources struct {
	DiscreteResourcesSpecs []string `pulumi:"discreteResourcesSpecs"`
	NamedResourcesSpecs []string `pulumi:"namedResourcesSpecs"`
}

type ServiceTaskSpecResourcesLimitsGenericResourcesInput interface {
	pulumi.Input

	ToServiceTaskSpecResourcesLimitsGenericResourcesOutput() ServiceTaskSpecResourcesLimitsGenericResourcesOutput
	ToServiceTaskSpecResourcesLimitsGenericResourcesOutputWithContext(context.Context) ServiceTaskSpecResourcesLimitsGenericResourcesOutput
}

type ServiceTaskSpecResourcesLimitsGenericResourcesArgs struct {
	DiscreteResourcesSpecs pulumi.StringArrayInput `pulumi:"discreteResourcesSpecs"`
	NamedResourcesSpecs pulumi.StringArrayInput `pulumi:"namedResourcesSpecs"`
}

func (ServiceTaskSpecResourcesLimitsGenericResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecResourcesLimitsGenericResources)(nil)).Elem()
}

func (i ServiceTaskSpecResourcesLimitsGenericResourcesArgs) ToServiceTaskSpecResourcesLimitsGenericResourcesOutput() ServiceTaskSpecResourcesLimitsGenericResourcesOutput {
	return i.ToServiceTaskSpecResourcesLimitsGenericResourcesOutputWithContext(context.Background())
}

func (i ServiceTaskSpecResourcesLimitsGenericResourcesArgs) ToServiceTaskSpecResourcesLimitsGenericResourcesOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesLimitsGenericResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecResourcesLimitsGenericResourcesOutput)
}

func (i ServiceTaskSpecResourcesLimitsGenericResourcesArgs) ToServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput() ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput {
	return i.ToServiceTaskSpecResourcesLimitsGenericResourcesPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecResourcesLimitsGenericResourcesArgs) ToServiceTaskSpecResourcesLimitsGenericResourcesPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecResourcesLimitsGenericResourcesOutput).ToServiceTaskSpecResourcesLimitsGenericResourcesPtrOutputWithContext(ctx)
}

type ServiceTaskSpecResourcesLimitsGenericResourcesPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput() ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput
	ToServiceTaskSpecResourcesLimitsGenericResourcesPtrOutputWithContext(context.Context) ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput
}

type serviceTaskSpecResourcesLimitsGenericResourcesPtrType ServiceTaskSpecResourcesLimitsGenericResourcesArgs

func ServiceTaskSpecResourcesLimitsGenericResourcesPtr(v *ServiceTaskSpecResourcesLimitsGenericResourcesArgs) ServiceTaskSpecResourcesLimitsGenericResourcesPtrInput {	return (*serviceTaskSpecResourcesLimitsGenericResourcesPtrType)(v)
}

func (*serviceTaskSpecResourcesLimitsGenericResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecResourcesLimitsGenericResources)(nil)).Elem()
}

func (i *serviceTaskSpecResourcesLimitsGenericResourcesPtrType) ToServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput() ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput {
	return i.ToServiceTaskSpecResourcesLimitsGenericResourcesPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecResourcesLimitsGenericResourcesPtrType) ToServiceTaskSpecResourcesLimitsGenericResourcesPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput)
}

type ServiceTaskSpecResourcesLimitsGenericResourcesOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecResourcesLimitsGenericResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecResourcesLimitsGenericResources)(nil)).Elem()
}

func (o ServiceTaskSpecResourcesLimitsGenericResourcesOutput) ToServiceTaskSpecResourcesLimitsGenericResourcesOutput() ServiceTaskSpecResourcesLimitsGenericResourcesOutput {
	return o
}

func (o ServiceTaskSpecResourcesLimitsGenericResourcesOutput) ToServiceTaskSpecResourcesLimitsGenericResourcesOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesLimitsGenericResourcesOutput {
	return o
}

func (o ServiceTaskSpecResourcesLimitsGenericResourcesOutput) ToServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput() ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput {
	return o.ToServiceTaskSpecResourcesLimitsGenericResourcesPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecResourcesLimitsGenericResourcesOutput) ToServiceTaskSpecResourcesLimitsGenericResourcesPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpecResourcesLimitsGenericResources) *ServiceTaskSpecResourcesLimitsGenericResources {
		return &v
	}).(ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput)
}
func (o ServiceTaskSpecResourcesLimitsGenericResourcesOutput) DiscreteResourcesSpecs() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesLimitsGenericResources) []string { return v.DiscreteResourcesSpecs }).(pulumi.StringArrayOutput)
}

func (o ServiceTaskSpecResourcesLimitsGenericResourcesOutput) NamedResourcesSpecs() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesLimitsGenericResources) []string { return v.NamedResourcesSpecs }).(pulumi.StringArrayOutput)
}

type ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecResourcesLimitsGenericResources)(nil)).Elem()
}

func (o ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput) ToServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput() ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput {
	return o
}

func (o ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput) ToServiceTaskSpecResourcesLimitsGenericResourcesPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput {
	return o
}

func (o ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput) Elem() ServiceTaskSpecResourcesLimitsGenericResourcesOutput {
	return o.ApplyT(func (v *ServiceTaskSpecResourcesLimitsGenericResources) ServiceTaskSpecResourcesLimitsGenericResources { return *v }).(ServiceTaskSpecResourcesLimitsGenericResourcesOutput)
}

func (o ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput) DiscreteResourcesSpecs() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesLimitsGenericResources) []string { return v.DiscreteResourcesSpecs }).(pulumi.StringArrayOutput)
}

func (o ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput) NamedResourcesSpecs() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesLimitsGenericResources) []string { return v.NamedResourcesSpecs }).(pulumi.StringArrayOutput)
}

type ServiceTaskSpecResourcesReservation struct {
	GenericResources *ServiceTaskSpecResourcesReservationGenericResources `pulumi:"genericResources"`
	MemoryBytes *int `pulumi:"memoryBytes"`
	NanoCpus *int `pulumi:"nanoCpus"`
}

type ServiceTaskSpecResourcesReservationInput interface {
	pulumi.Input

	ToServiceTaskSpecResourcesReservationOutput() ServiceTaskSpecResourcesReservationOutput
	ToServiceTaskSpecResourcesReservationOutputWithContext(context.Context) ServiceTaskSpecResourcesReservationOutput
}

type ServiceTaskSpecResourcesReservationArgs struct {
	GenericResources ServiceTaskSpecResourcesReservationGenericResourcesPtrInput `pulumi:"genericResources"`
	MemoryBytes pulumi.IntPtrInput `pulumi:"memoryBytes"`
	NanoCpus pulumi.IntPtrInput `pulumi:"nanoCpus"`
}

func (ServiceTaskSpecResourcesReservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecResourcesReservation)(nil)).Elem()
}

func (i ServiceTaskSpecResourcesReservationArgs) ToServiceTaskSpecResourcesReservationOutput() ServiceTaskSpecResourcesReservationOutput {
	return i.ToServiceTaskSpecResourcesReservationOutputWithContext(context.Background())
}

func (i ServiceTaskSpecResourcesReservationArgs) ToServiceTaskSpecResourcesReservationOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesReservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecResourcesReservationOutput)
}

func (i ServiceTaskSpecResourcesReservationArgs) ToServiceTaskSpecResourcesReservationPtrOutput() ServiceTaskSpecResourcesReservationPtrOutput {
	return i.ToServiceTaskSpecResourcesReservationPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecResourcesReservationArgs) ToServiceTaskSpecResourcesReservationPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesReservationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecResourcesReservationOutput).ToServiceTaskSpecResourcesReservationPtrOutputWithContext(ctx)
}

type ServiceTaskSpecResourcesReservationPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecResourcesReservationPtrOutput() ServiceTaskSpecResourcesReservationPtrOutput
	ToServiceTaskSpecResourcesReservationPtrOutputWithContext(context.Context) ServiceTaskSpecResourcesReservationPtrOutput
}

type serviceTaskSpecResourcesReservationPtrType ServiceTaskSpecResourcesReservationArgs

func ServiceTaskSpecResourcesReservationPtr(v *ServiceTaskSpecResourcesReservationArgs) ServiceTaskSpecResourcesReservationPtrInput {	return (*serviceTaskSpecResourcesReservationPtrType)(v)
}

func (*serviceTaskSpecResourcesReservationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecResourcesReservation)(nil)).Elem()
}

func (i *serviceTaskSpecResourcesReservationPtrType) ToServiceTaskSpecResourcesReservationPtrOutput() ServiceTaskSpecResourcesReservationPtrOutput {
	return i.ToServiceTaskSpecResourcesReservationPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecResourcesReservationPtrType) ToServiceTaskSpecResourcesReservationPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesReservationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecResourcesReservationPtrOutput)
}

type ServiceTaskSpecResourcesReservationOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecResourcesReservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecResourcesReservation)(nil)).Elem()
}

func (o ServiceTaskSpecResourcesReservationOutput) ToServiceTaskSpecResourcesReservationOutput() ServiceTaskSpecResourcesReservationOutput {
	return o
}

func (o ServiceTaskSpecResourcesReservationOutput) ToServiceTaskSpecResourcesReservationOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesReservationOutput {
	return o
}

func (o ServiceTaskSpecResourcesReservationOutput) ToServiceTaskSpecResourcesReservationPtrOutput() ServiceTaskSpecResourcesReservationPtrOutput {
	return o.ToServiceTaskSpecResourcesReservationPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecResourcesReservationOutput) ToServiceTaskSpecResourcesReservationPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesReservationPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpecResourcesReservation) *ServiceTaskSpecResourcesReservation {
		return &v
	}).(ServiceTaskSpecResourcesReservationPtrOutput)
}
func (o ServiceTaskSpecResourcesReservationOutput) GenericResources() ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesReservation) *ServiceTaskSpecResourcesReservationGenericResources { return v.GenericResources }).(ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput)
}

func (o ServiceTaskSpecResourcesReservationOutput) MemoryBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesReservation) *int { return v.MemoryBytes }).(pulumi.IntPtrOutput)
}

func (o ServiceTaskSpecResourcesReservationOutput) NanoCpus() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesReservation) *int { return v.NanoCpus }).(pulumi.IntPtrOutput)
}

type ServiceTaskSpecResourcesReservationPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecResourcesReservationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecResourcesReservation)(nil)).Elem()
}

func (o ServiceTaskSpecResourcesReservationPtrOutput) ToServiceTaskSpecResourcesReservationPtrOutput() ServiceTaskSpecResourcesReservationPtrOutput {
	return o
}

func (o ServiceTaskSpecResourcesReservationPtrOutput) ToServiceTaskSpecResourcesReservationPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesReservationPtrOutput {
	return o
}

func (o ServiceTaskSpecResourcesReservationPtrOutput) Elem() ServiceTaskSpecResourcesReservationOutput {
	return o.ApplyT(func (v *ServiceTaskSpecResourcesReservation) ServiceTaskSpecResourcesReservation { return *v }).(ServiceTaskSpecResourcesReservationOutput)
}

func (o ServiceTaskSpecResourcesReservationPtrOutput) GenericResources() ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesReservation) *ServiceTaskSpecResourcesReservationGenericResources { return v.GenericResources }).(ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput)
}

func (o ServiceTaskSpecResourcesReservationPtrOutput) MemoryBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesReservation) *int { return v.MemoryBytes }).(pulumi.IntPtrOutput)
}

func (o ServiceTaskSpecResourcesReservationPtrOutput) NanoCpus() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesReservation) *int { return v.NanoCpus }).(pulumi.IntPtrOutput)
}

type ServiceTaskSpecResourcesReservationGenericResources struct {
	DiscreteResourcesSpecs []string `pulumi:"discreteResourcesSpecs"`
	NamedResourcesSpecs []string `pulumi:"namedResourcesSpecs"`
}

type ServiceTaskSpecResourcesReservationGenericResourcesInput interface {
	pulumi.Input

	ToServiceTaskSpecResourcesReservationGenericResourcesOutput() ServiceTaskSpecResourcesReservationGenericResourcesOutput
	ToServiceTaskSpecResourcesReservationGenericResourcesOutputWithContext(context.Context) ServiceTaskSpecResourcesReservationGenericResourcesOutput
}

type ServiceTaskSpecResourcesReservationGenericResourcesArgs struct {
	DiscreteResourcesSpecs pulumi.StringArrayInput `pulumi:"discreteResourcesSpecs"`
	NamedResourcesSpecs pulumi.StringArrayInput `pulumi:"namedResourcesSpecs"`
}

func (ServiceTaskSpecResourcesReservationGenericResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecResourcesReservationGenericResources)(nil)).Elem()
}

func (i ServiceTaskSpecResourcesReservationGenericResourcesArgs) ToServiceTaskSpecResourcesReservationGenericResourcesOutput() ServiceTaskSpecResourcesReservationGenericResourcesOutput {
	return i.ToServiceTaskSpecResourcesReservationGenericResourcesOutputWithContext(context.Background())
}

func (i ServiceTaskSpecResourcesReservationGenericResourcesArgs) ToServiceTaskSpecResourcesReservationGenericResourcesOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesReservationGenericResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecResourcesReservationGenericResourcesOutput)
}

func (i ServiceTaskSpecResourcesReservationGenericResourcesArgs) ToServiceTaskSpecResourcesReservationGenericResourcesPtrOutput() ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput {
	return i.ToServiceTaskSpecResourcesReservationGenericResourcesPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecResourcesReservationGenericResourcesArgs) ToServiceTaskSpecResourcesReservationGenericResourcesPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecResourcesReservationGenericResourcesOutput).ToServiceTaskSpecResourcesReservationGenericResourcesPtrOutputWithContext(ctx)
}

type ServiceTaskSpecResourcesReservationGenericResourcesPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecResourcesReservationGenericResourcesPtrOutput() ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput
	ToServiceTaskSpecResourcesReservationGenericResourcesPtrOutputWithContext(context.Context) ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput
}

type serviceTaskSpecResourcesReservationGenericResourcesPtrType ServiceTaskSpecResourcesReservationGenericResourcesArgs

func ServiceTaskSpecResourcesReservationGenericResourcesPtr(v *ServiceTaskSpecResourcesReservationGenericResourcesArgs) ServiceTaskSpecResourcesReservationGenericResourcesPtrInput {	return (*serviceTaskSpecResourcesReservationGenericResourcesPtrType)(v)
}

func (*serviceTaskSpecResourcesReservationGenericResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecResourcesReservationGenericResources)(nil)).Elem()
}

func (i *serviceTaskSpecResourcesReservationGenericResourcesPtrType) ToServiceTaskSpecResourcesReservationGenericResourcesPtrOutput() ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput {
	return i.ToServiceTaskSpecResourcesReservationGenericResourcesPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecResourcesReservationGenericResourcesPtrType) ToServiceTaskSpecResourcesReservationGenericResourcesPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput)
}

type ServiceTaskSpecResourcesReservationGenericResourcesOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecResourcesReservationGenericResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecResourcesReservationGenericResources)(nil)).Elem()
}

func (o ServiceTaskSpecResourcesReservationGenericResourcesOutput) ToServiceTaskSpecResourcesReservationGenericResourcesOutput() ServiceTaskSpecResourcesReservationGenericResourcesOutput {
	return o
}

func (o ServiceTaskSpecResourcesReservationGenericResourcesOutput) ToServiceTaskSpecResourcesReservationGenericResourcesOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesReservationGenericResourcesOutput {
	return o
}

func (o ServiceTaskSpecResourcesReservationGenericResourcesOutput) ToServiceTaskSpecResourcesReservationGenericResourcesPtrOutput() ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput {
	return o.ToServiceTaskSpecResourcesReservationGenericResourcesPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecResourcesReservationGenericResourcesOutput) ToServiceTaskSpecResourcesReservationGenericResourcesPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpecResourcesReservationGenericResources) *ServiceTaskSpecResourcesReservationGenericResources {
		return &v
	}).(ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput)
}
func (o ServiceTaskSpecResourcesReservationGenericResourcesOutput) DiscreteResourcesSpecs() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesReservationGenericResources) []string { return v.DiscreteResourcesSpecs }).(pulumi.StringArrayOutput)
}

func (o ServiceTaskSpecResourcesReservationGenericResourcesOutput) NamedResourcesSpecs() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesReservationGenericResources) []string { return v.NamedResourcesSpecs }).(pulumi.StringArrayOutput)
}

type ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecResourcesReservationGenericResources)(nil)).Elem()
}

func (o ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput) ToServiceTaskSpecResourcesReservationGenericResourcesPtrOutput() ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput {
	return o
}

func (o ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput) ToServiceTaskSpecResourcesReservationGenericResourcesPtrOutputWithContext(ctx context.Context) ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput {
	return o
}

func (o ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput) Elem() ServiceTaskSpecResourcesReservationGenericResourcesOutput {
	return o.ApplyT(func (v *ServiceTaskSpecResourcesReservationGenericResources) ServiceTaskSpecResourcesReservationGenericResources { return *v }).(ServiceTaskSpecResourcesReservationGenericResourcesOutput)
}

func (o ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput) DiscreteResourcesSpecs() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesReservationGenericResources) []string { return v.DiscreteResourcesSpecs }).(pulumi.StringArrayOutput)
}

func (o ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput) NamedResourcesSpecs() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServiceTaskSpecResourcesReservationGenericResources) []string { return v.NamedResourcesSpecs }).(pulumi.StringArrayOutput)
}

type ServiceTaskSpecRestartPolicy struct {
	Condition *string `pulumi:"condition"`
	Delay *string `pulumi:"delay"`
	MaxAttempts *int `pulumi:"maxAttempts"`
	Window *string `pulumi:"window"`
}

type ServiceTaskSpecRestartPolicyInput interface {
	pulumi.Input

	ToServiceTaskSpecRestartPolicyOutput() ServiceTaskSpecRestartPolicyOutput
	ToServiceTaskSpecRestartPolicyOutputWithContext(context.Context) ServiceTaskSpecRestartPolicyOutput
}

type ServiceTaskSpecRestartPolicyArgs struct {
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	Delay pulumi.StringPtrInput `pulumi:"delay"`
	MaxAttempts pulumi.IntPtrInput `pulumi:"maxAttempts"`
	Window pulumi.StringPtrInput `pulumi:"window"`
}

func (ServiceTaskSpecRestartPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecRestartPolicy)(nil)).Elem()
}

func (i ServiceTaskSpecRestartPolicyArgs) ToServiceTaskSpecRestartPolicyOutput() ServiceTaskSpecRestartPolicyOutput {
	return i.ToServiceTaskSpecRestartPolicyOutputWithContext(context.Background())
}

func (i ServiceTaskSpecRestartPolicyArgs) ToServiceTaskSpecRestartPolicyOutputWithContext(ctx context.Context) ServiceTaskSpecRestartPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecRestartPolicyOutput)
}

func (i ServiceTaskSpecRestartPolicyArgs) ToServiceTaskSpecRestartPolicyPtrOutput() ServiceTaskSpecRestartPolicyPtrOutput {
	return i.ToServiceTaskSpecRestartPolicyPtrOutputWithContext(context.Background())
}

func (i ServiceTaskSpecRestartPolicyArgs) ToServiceTaskSpecRestartPolicyPtrOutputWithContext(ctx context.Context) ServiceTaskSpecRestartPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecRestartPolicyOutput).ToServiceTaskSpecRestartPolicyPtrOutputWithContext(ctx)
}

type ServiceTaskSpecRestartPolicyPtrInput interface {
	pulumi.Input

	ToServiceTaskSpecRestartPolicyPtrOutput() ServiceTaskSpecRestartPolicyPtrOutput
	ToServiceTaskSpecRestartPolicyPtrOutputWithContext(context.Context) ServiceTaskSpecRestartPolicyPtrOutput
}

type serviceTaskSpecRestartPolicyPtrType ServiceTaskSpecRestartPolicyArgs

func ServiceTaskSpecRestartPolicyPtr(v *ServiceTaskSpecRestartPolicyArgs) ServiceTaskSpecRestartPolicyPtrInput {	return (*serviceTaskSpecRestartPolicyPtrType)(v)
}

func (*serviceTaskSpecRestartPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecRestartPolicy)(nil)).Elem()
}

func (i *serviceTaskSpecRestartPolicyPtrType) ToServiceTaskSpecRestartPolicyPtrOutput() ServiceTaskSpecRestartPolicyPtrOutput {
	return i.ToServiceTaskSpecRestartPolicyPtrOutputWithContext(context.Background())
}

func (i *serviceTaskSpecRestartPolicyPtrType) ToServiceTaskSpecRestartPolicyPtrOutputWithContext(ctx context.Context) ServiceTaskSpecRestartPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTaskSpecRestartPolicyPtrOutput)
}

type ServiceTaskSpecRestartPolicyOutput struct { *pulumi.OutputState }

func (ServiceTaskSpecRestartPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTaskSpecRestartPolicy)(nil)).Elem()
}

func (o ServiceTaskSpecRestartPolicyOutput) ToServiceTaskSpecRestartPolicyOutput() ServiceTaskSpecRestartPolicyOutput {
	return o
}

func (o ServiceTaskSpecRestartPolicyOutput) ToServiceTaskSpecRestartPolicyOutputWithContext(ctx context.Context) ServiceTaskSpecRestartPolicyOutput {
	return o
}

func (o ServiceTaskSpecRestartPolicyOutput) ToServiceTaskSpecRestartPolicyPtrOutput() ServiceTaskSpecRestartPolicyPtrOutput {
	return o.ToServiceTaskSpecRestartPolicyPtrOutputWithContext(context.Background())
}

func (o ServiceTaskSpecRestartPolicyOutput) ToServiceTaskSpecRestartPolicyPtrOutputWithContext(ctx context.Context) ServiceTaskSpecRestartPolicyPtrOutput {
	return o.ApplyT(func(v ServiceTaskSpecRestartPolicy) *ServiceTaskSpecRestartPolicy {
		return &v
	}).(ServiceTaskSpecRestartPolicyPtrOutput)
}
func (o ServiceTaskSpecRestartPolicyOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecRestartPolicy) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecRestartPolicyOutput) Delay() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecRestartPolicy) *string { return v.Delay }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecRestartPolicyOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecRestartPolicy) *int { return v.MaxAttempts }).(pulumi.IntPtrOutput)
}

func (o ServiceTaskSpecRestartPolicyOutput) Window() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecRestartPolicy) *string { return v.Window }).(pulumi.StringPtrOutput)
}

type ServiceTaskSpecRestartPolicyPtrOutput struct { *pulumi.OutputState}

func (ServiceTaskSpecRestartPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTaskSpecRestartPolicy)(nil)).Elem()
}

func (o ServiceTaskSpecRestartPolicyPtrOutput) ToServiceTaskSpecRestartPolicyPtrOutput() ServiceTaskSpecRestartPolicyPtrOutput {
	return o
}

func (o ServiceTaskSpecRestartPolicyPtrOutput) ToServiceTaskSpecRestartPolicyPtrOutputWithContext(ctx context.Context) ServiceTaskSpecRestartPolicyPtrOutput {
	return o
}

func (o ServiceTaskSpecRestartPolicyPtrOutput) Elem() ServiceTaskSpecRestartPolicyOutput {
	return o.ApplyT(func (v *ServiceTaskSpecRestartPolicy) ServiceTaskSpecRestartPolicy { return *v }).(ServiceTaskSpecRestartPolicyOutput)
}

func (o ServiceTaskSpecRestartPolicyPtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecRestartPolicy) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecRestartPolicyPtrOutput) Delay() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecRestartPolicy) *string { return v.Delay }).(pulumi.StringPtrOutput)
}

func (o ServiceTaskSpecRestartPolicyPtrOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecRestartPolicy) *int { return v.MaxAttempts }).(pulumi.IntPtrOutput)
}

func (o ServiceTaskSpecRestartPolicyPtrOutput) Window() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceTaskSpecRestartPolicy) *string { return v.Window }).(pulumi.StringPtrOutput)
}

type ServiceUpdateConfig struct {
	Delay *string `pulumi:"delay"`
	FailureAction *string `pulumi:"failureAction"`
	MaxFailureRatio *string `pulumi:"maxFailureRatio"`
	Monitor *string `pulumi:"monitor"`
	Order *string `pulumi:"order"`
	Parallelism *int `pulumi:"parallelism"`
}

type ServiceUpdateConfigInput interface {
	pulumi.Input

	ToServiceUpdateConfigOutput() ServiceUpdateConfigOutput
	ToServiceUpdateConfigOutputWithContext(context.Context) ServiceUpdateConfigOutput
}

type ServiceUpdateConfigArgs struct {
	Delay pulumi.StringPtrInput `pulumi:"delay"`
	FailureAction pulumi.StringPtrInput `pulumi:"failureAction"`
	MaxFailureRatio pulumi.StringPtrInput `pulumi:"maxFailureRatio"`
	Monitor pulumi.StringPtrInput `pulumi:"monitor"`
	Order pulumi.StringPtrInput `pulumi:"order"`
	Parallelism pulumi.IntPtrInput `pulumi:"parallelism"`
}

func (ServiceUpdateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUpdateConfig)(nil)).Elem()
}

func (i ServiceUpdateConfigArgs) ToServiceUpdateConfigOutput() ServiceUpdateConfigOutput {
	return i.ToServiceUpdateConfigOutputWithContext(context.Background())
}

func (i ServiceUpdateConfigArgs) ToServiceUpdateConfigOutputWithContext(ctx context.Context) ServiceUpdateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUpdateConfigOutput)
}

func (i ServiceUpdateConfigArgs) ToServiceUpdateConfigPtrOutput() ServiceUpdateConfigPtrOutput {
	return i.ToServiceUpdateConfigPtrOutputWithContext(context.Background())
}

func (i ServiceUpdateConfigArgs) ToServiceUpdateConfigPtrOutputWithContext(ctx context.Context) ServiceUpdateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUpdateConfigOutput).ToServiceUpdateConfigPtrOutputWithContext(ctx)
}

type ServiceUpdateConfigPtrInput interface {
	pulumi.Input

	ToServiceUpdateConfigPtrOutput() ServiceUpdateConfigPtrOutput
	ToServiceUpdateConfigPtrOutputWithContext(context.Context) ServiceUpdateConfigPtrOutput
}

type serviceUpdateConfigPtrType ServiceUpdateConfigArgs

func ServiceUpdateConfigPtr(v *ServiceUpdateConfigArgs) ServiceUpdateConfigPtrInput {	return (*serviceUpdateConfigPtrType)(v)
}

func (*serviceUpdateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceUpdateConfig)(nil)).Elem()
}

func (i *serviceUpdateConfigPtrType) ToServiceUpdateConfigPtrOutput() ServiceUpdateConfigPtrOutput {
	return i.ToServiceUpdateConfigPtrOutputWithContext(context.Background())
}

func (i *serviceUpdateConfigPtrType) ToServiceUpdateConfigPtrOutputWithContext(ctx context.Context) ServiceUpdateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUpdateConfigPtrOutput)
}

type ServiceUpdateConfigOutput struct { *pulumi.OutputState }

func (ServiceUpdateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUpdateConfig)(nil)).Elem()
}

func (o ServiceUpdateConfigOutput) ToServiceUpdateConfigOutput() ServiceUpdateConfigOutput {
	return o
}

func (o ServiceUpdateConfigOutput) ToServiceUpdateConfigOutputWithContext(ctx context.Context) ServiceUpdateConfigOutput {
	return o
}

func (o ServiceUpdateConfigOutput) ToServiceUpdateConfigPtrOutput() ServiceUpdateConfigPtrOutput {
	return o.ToServiceUpdateConfigPtrOutputWithContext(context.Background())
}

func (o ServiceUpdateConfigOutput) ToServiceUpdateConfigPtrOutputWithContext(ctx context.Context) ServiceUpdateConfigPtrOutput {
	return o.ApplyT(func(v ServiceUpdateConfig) *ServiceUpdateConfig {
		return &v
	}).(ServiceUpdateConfigPtrOutput)
}
func (o ServiceUpdateConfigOutput) Delay() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceUpdateConfig) *string { return v.Delay }).(pulumi.StringPtrOutput)
}

func (o ServiceUpdateConfigOutput) FailureAction() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceUpdateConfig) *string { return v.FailureAction }).(pulumi.StringPtrOutput)
}

func (o ServiceUpdateConfigOutput) MaxFailureRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceUpdateConfig) *string { return v.MaxFailureRatio }).(pulumi.StringPtrOutput)
}

func (o ServiceUpdateConfigOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceUpdateConfig) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

func (o ServiceUpdateConfigOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceUpdateConfig) *string { return v.Order }).(pulumi.StringPtrOutput)
}

func (o ServiceUpdateConfigOutput) Parallelism() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceUpdateConfig) *int { return v.Parallelism }).(pulumi.IntPtrOutput)
}

type ServiceUpdateConfigPtrOutput struct { *pulumi.OutputState}

func (ServiceUpdateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceUpdateConfig)(nil)).Elem()
}

func (o ServiceUpdateConfigPtrOutput) ToServiceUpdateConfigPtrOutput() ServiceUpdateConfigPtrOutput {
	return o
}

func (o ServiceUpdateConfigPtrOutput) ToServiceUpdateConfigPtrOutputWithContext(ctx context.Context) ServiceUpdateConfigPtrOutput {
	return o
}

func (o ServiceUpdateConfigPtrOutput) Elem() ServiceUpdateConfigOutput {
	return o.ApplyT(func (v *ServiceUpdateConfig) ServiceUpdateConfig { return *v }).(ServiceUpdateConfigOutput)
}

func (o ServiceUpdateConfigPtrOutput) Delay() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceUpdateConfig) *string { return v.Delay }).(pulumi.StringPtrOutput)
}

func (o ServiceUpdateConfigPtrOutput) FailureAction() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceUpdateConfig) *string { return v.FailureAction }).(pulumi.StringPtrOutput)
}

func (o ServiceUpdateConfigPtrOutput) MaxFailureRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceUpdateConfig) *string { return v.MaxFailureRatio }).(pulumi.StringPtrOutput)
}

func (o ServiceUpdateConfigPtrOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceUpdateConfig) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

func (o ServiceUpdateConfigPtrOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceUpdateConfig) *string { return v.Order }).(pulumi.StringPtrOutput)
}

func (o ServiceUpdateConfigPtrOutput) Parallelism() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServiceUpdateConfig) *int { return v.Parallelism }).(pulumi.IntPtrOutput)
}

type VolumeLabel struct {
	Label string `pulumi:"label"`
	Value string `pulumi:"value"`
}

type VolumeLabelInput interface {
	pulumi.Input

	ToVolumeLabelOutput() VolumeLabelOutput
	ToVolumeLabelOutputWithContext(context.Context) VolumeLabelOutput
}

type VolumeLabelArgs struct {
	Label pulumi.StringInput `pulumi:"label"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (VolumeLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeLabel)(nil)).Elem()
}

func (i VolumeLabelArgs) ToVolumeLabelOutput() VolumeLabelOutput {
	return i.ToVolumeLabelOutputWithContext(context.Background())
}

func (i VolumeLabelArgs) ToVolumeLabelOutputWithContext(ctx context.Context) VolumeLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeLabelOutput)
}

type VolumeLabelArrayInput interface {
	pulumi.Input

	ToVolumeLabelArrayOutput() VolumeLabelArrayOutput
	ToVolumeLabelArrayOutputWithContext(context.Context) VolumeLabelArrayOutput
}

type VolumeLabelArray []VolumeLabelInput

func (VolumeLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeLabel)(nil)).Elem()
}

func (i VolumeLabelArray) ToVolumeLabelArrayOutput() VolumeLabelArrayOutput {
	return i.ToVolumeLabelArrayOutputWithContext(context.Background())
}

func (i VolumeLabelArray) ToVolumeLabelArrayOutputWithContext(ctx context.Context) VolumeLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeLabelArrayOutput)
}

type VolumeLabelOutput struct { *pulumi.OutputState }

func (VolumeLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeLabel)(nil)).Elem()
}

func (o VolumeLabelOutput) ToVolumeLabelOutput() VolumeLabelOutput {
	return o
}

func (o VolumeLabelOutput) ToVolumeLabelOutputWithContext(ctx context.Context) VolumeLabelOutput {
	return o
}

func (o VolumeLabelOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func (v VolumeLabel) string { return v.Label }).(pulumi.StringOutput)
}

func (o VolumeLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v VolumeLabel) string { return v.Value }).(pulumi.StringOutput)
}

type VolumeLabelArrayOutput struct { *pulumi.OutputState}

func (VolumeLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeLabel)(nil)).Elem()
}

func (o VolumeLabelArrayOutput) ToVolumeLabelArrayOutput() VolumeLabelArrayOutput {
	return o
}

func (o VolumeLabelArrayOutput) ToVolumeLabelArrayOutputWithContext(ctx context.Context) VolumeLabelArrayOutput {
	return o
}

func (o VolumeLabelArrayOutput) Index(i pulumi.IntInput) VolumeLabelOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) VolumeLabel {
		return vs[0].([]VolumeLabel)[vs[1].(int)]
	}).(VolumeLabelOutput)
}

type GetNetworkIpamConfig struct {
	AuxAddress map[string]interface{} `pulumi:"auxAddress"`
	Gateway *string `pulumi:"gateway"`
	IpRange *string `pulumi:"ipRange"`
	Subnet *string `pulumi:"subnet"`
}

type GetNetworkIpamConfigInput interface {
	pulumi.Input

	ToGetNetworkIpamConfigOutput() GetNetworkIpamConfigOutput
	ToGetNetworkIpamConfigOutputWithContext(context.Context) GetNetworkIpamConfigOutput
}

type GetNetworkIpamConfigArgs struct {
	AuxAddress pulumi.MapInput `pulumi:"auxAddress"`
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	IpRange pulumi.StringPtrInput `pulumi:"ipRange"`
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (GetNetworkIpamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIpamConfig)(nil)).Elem()
}

func (i GetNetworkIpamConfigArgs) ToGetNetworkIpamConfigOutput() GetNetworkIpamConfigOutput {
	return i.ToGetNetworkIpamConfigOutputWithContext(context.Background())
}

func (i GetNetworkIpamConfigArgs) ToGetNetworkIpamConfigOutputWithContext(ctx context.Context) GetNetworkIpamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIpamConfigOutput)
}

type GetNetworkIpamConfigArrayInput interface {
	pulumi.Input

	ToGetNetworkIpamConfigArrayOutput() GetNetworkIpamConfigArrayOutput
	ToGetNetworkIpamConfigArrayOutputWithContext(context.Context) GetNetworkIpamConfigArrayOutput
}

type GetNetworkIpamConfigArray []GetNetworkIpamConfigInput

func (GetNetworkIpamConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkIpamConfig)(nil)).Elem()
}

func (i GetNetworkIpamConfigArray) ToGetNetworkIpamConfigArrayOutput() GetNetworkIpamConfigArrayOutput {
	return i.ToGetNetworkIpamConfigArrayOutputWithContext(context.Background())
}

func (i GetNetworkIpamConfigArray) ToGetNetworkIpamConfigArrayOutputWithContext(ctx context.Context) GetNetworkIpamConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIpamConfigArrayOutput)
}

type GetNetworkIpamConfigOutput struct { *pulumi.OutputState }

func (GetNetworkIpamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIpamConfig)(nil)).Elem()
}

func (o GetNetworkIpamConfigOutput) ToGetNetworkIpamConfigOutput() GetNetworkIpamConfigOutput {
	return o
}

func (o GetNetworkIpamConfigOutput) ToGetNetworkIpamConfigOutputWithContext(ctx context.Context) GetNetworkIpamConfigOutput {
	return o
}

func (o GetNetworkIpamConfigOutput) AuxAddress() pulumi.MapOutput {
	return o.ApplyT(func (v GetNetworkIpamConfig) map[string]interface{} { return v.AuxAddress }).(pulumi.MapOutput)
}

func (o GetNetworkIpamConfigOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetNetworkIpamConfig) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o GetNetworkIpamConfigOutput) IpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetNetworkIpamConfig) *string { return v.IpRange }).(pulumi.StringPtrOutput)
}

func (o GetNetworkIpamConfigOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetNetworkIpamConfig) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type GetNetworkIpamConfigArrayOutput struct { *pulumi.OutputState}

func (GetNetworkIpamConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkIpamConfig)(nil)).Elem()
}

func (o GetNetworkIpamConfigArrayOutput) ToGetNetworkIpamConfigArrayOutput() GetNetworkIpamConfigArrayOutput {
	return o
}

func (o GetNetworkIpamConfigArrayOutput) ToGetNetworkIpamConfigArrayOutputWithContext(ctx context.Context) GetNetworkIpamConfigArrayOutput {
	return o
}

func (o GetNetworkIpamConfigArrayOutput) Index(i pulumi.IntInput) GetNetworkIpamConfigOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetNetworkIpamConfig {
		return vs[0].([]GetNetworkIpamConfig)[vs[1].(int)]
	}).(GetNetworkIpamConfigOutput)
}

type ProviderRegistryAuth struct {
	Address string `pulumi:"address"`
	ConfigFile *string `pulumi:"configFile"`
	ConfigFileContent *string `pulumi:"configFileContent"`
	Password *string `pulumi:"password"`
	Username *string `pulumi:"username"`
}

type ProviderRegistryAuthInput interface {
	pulumi.Input

	ToProviderRegistryAuthOutput() ProviderRegistryAuthOutput
	ToProviderRegistryAuthOutputWithContext(context.Context) ProviderRegistryAuthOutput
}

type ProviderRegistryAuthArgs struct {
	Address pulumi.StringInput `pulumi:"address"`
	ConfigFile pulumi.StringPtrInput `pulumi:"configFile"`
	ConfigFileContent pulumi.StringPtrInput `pulumi:"configFileContent"`
	Password pulumi.StringPtrInput `pulumi:"password"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ProviderRegistryAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderRegistryAuth)(nil)).Elem()
}

func (i ProviderRegistryAuthArgs) ToProviderRegistryAuthOutput() ProviderRegistryAuthOutput {
	return i.ToProviderRegistryAuthOutputWithContext(context.Background())
}

func (i ProviderRegistryAuthArgs) ToProviderRegistryAuthOutputWithContext(ctx context.Context) ProviderRegistryAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderRegistryAuthOutput)
}

type ProviderRegistryAuthArrayInput interface {
	pulumi.Input

	ToProviderRegistryAuthArrayOutput() ProviderRegistryAuthArrayOutput
	ToProviderRegistryAuthArrayOutputWithContext(context.Context) ProviderRegistryAuthArrayOutput
}

type ProviderRegistryAuthArray []ProviderRegistryAuthInput

func (ProviderRegistryAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderRegistryAuth)(nil)).Elem()
}

func (i ProviderRegistryAuthArray) ToProviderRegistryAuthArrayOutput() ProviderRegistryAuthArrayOutput {
	return i.ToProviderRegistryAuthArrayOutputWithContext(context.Background())
}

func (i ProviderRegistryAuthArray) ToProviderRegistryAuthArrayOutputWithContext(ctx context.Context) ProviderRegistryAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderRegistryAuthArrayOutput)
}

type ProviderRegistryAuthOutput struct { *pulumi.OutputState }

func (ProviderRegistryAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderRegistryAuth)(nil)).Elem()
}

func (o ProviderRegistryAuthOutput) ToProviderRegistryAuthOutput() ProviderRegistryAuthOutput {
	return o
}

func (o ProviderRegistryAuthOutput) ToProviderRegistryAuthOutputWithContext(ctx context.Context) ProviderRegistryAuthOutput {
	return o
}

func (o ProviderRegistryAuthOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func (v ProviderRegistryAuth) string { return v.Address }).(pulumi.StringOutput)
}

func (o ProviderRegistryAuthOutput) ConfigFile() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProviderRegistryAuth) *string { return v.ConfigFile }).(pulumi.StringPtrOutput)
}

func (o ProviderRegistryAuthOutput) ConfigFileContent() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProviderRegistryAuth) *string { return v.ConfigFileContent }).(pulumi.StringPtrOutput)
}

func (o ProviderRegistryAuthOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProviderRegistryAuth) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ProviderRegistryAuthOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProviderRegistryAuth) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProviderRegistryAuthArrayOutput struct { *pulumi.OutputState}

func (ProviderRegistryAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderRegistryAuth)(nil)).Elem()
}

func (o ProviderRegistryAuthArrayOutput) ToProviderRegistryAuthArrayOutput() ProviderRegistryAuthArrayOutput {
	return o
}

func (o ProviderRegistryAuthArrayOutput) ToProviderRegistryAuthArrayOutputWithContext(ctx context.Context) ProviderRegistryAuthArrayOutput {
	return o
}

func (o ProviderRegistryAuthArrayOutput) Index(i pulumi.IntInput) ProviderRegistryAuthOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ProviderRegistryAuth {
		return vs[0].([]ProviderRegistryAuth)[vs[1].(int)]
	}).(ProviderRegistryAuthOutput)
}

func init() {
	pulumi.RegisterOutputType(ContainerCapabilitiesOutput{})
	pulumi.RegisterOutputType(ContainerCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(ContainerDeviceOutput{})
	pulumi.RegisterOutputType(ContainerDeviceArrayOutput{})
	pulumi.RegisterOutputType(ContainerHealthcheckOutput{})
	pulumi.RegisterOutputType(ContainerHealthcheckPtrOutput{})
	pulumi.RegisterOutputType(ContainerHostOutput{})
	pulumi.RegisterOutputType(ContainerHostArrayOutput{})
	pulumi.RegisterOutputType(ContainerLabelOutput{})
	pulumi.RegisterOutputType(ContainerLabelArrayOutput{})
	pulumi.RegisterOutputType(ContainerMountOutput{})
	pulumi.RegisterOutputType(ContainerMountArrayOutput{})
	pulumi.RegisterOutputType(ContainerMountBindOptionsOutput{})
	pulumi.RegisterOutputType(ContainerMountBindOptionsPtrOutput{})
	pulumi.RegisterOutputType(ContainerMountTmpfsOptionsOutput{})
	pulumi.RegisterOutputType(ContainerMountTmpfsOptionsPtrOutput{})
	pulumi.RegisterOutputType(ContainerMountVolumeOptionsOutput{})
	pulumi.RegisterOutputType(ContainerMountVolumeOptionsPtrOutput{})
	pulumi.RegisterOutputType(ContainerMountVolumeOptionsLabelOutput{})
	pulumi.RegisterOutputType(ContainerMountVolumeOptionsLabelArrayOutput{})
	pulumi.RegisterOutputType(ContainerNetworkDataOutput{})
	pulumi.RegisterOutputType(ContainerNetworkDataArrayOutput{})
	pulumi.RegisterOutputType(ContainerNetworksAdvancedOutput{})
	pulumi.RegisterOutputType(ContainerNetworksAdvancedArrayOutput{})
	pulumi.RegisterOutputType(ContainerPortOutput{})
	pulumi.RegisterOutputType(ContainerPortArrayOutput{})
	pulumi.RegisterOutputType(ContainerUlimitOutput{})
	pulumi.RegisterOutputType(ContainerUlimitArrayOutput{})
	pulumi.RegisterOutputType(ContainerUploadOutput{})
	pulumi.RegisterOutputType(ContainerUploadArrayOutput{})
	pulumi.RegisterOutputType(ContainerVolumeOutput{})
	pulumi.RegisterOutputType(ContainerVolumeArrayOutput{})
	pulumi.RegisterOutputType(NetworkIpamConfigOutput{})
	pulumi.RegisterOutputType(NetworkIpamConfigArrayOutput{})
	pulumi.RegisterOutputType(NetworkLabelOutput{})
	pulumi.RegisterOutputType(NetworkLabelArrayOutput{})
	pulumi.RegisterOutputType(SecretLabelOutput{})
	pulumi.RegisterOutputType(SecretLabelArrayOutput{})
	pulumi.RegisterOutputType(ServiceAuthOutput{})
	pulumi.RegisterOutputType(ServiceAuthPtrOutput{})
	pulumi.RegisterOutputType(ServiceConvergeConfigOutput{})
	pulumi.RegisterOutputType(ServiceConvergeConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceEndpointSpecOutput{})
	pulumi.RegisterOutputType(ServiceEndpointSpecPtrOutput{})
	pulumi.RegisterOutputType(ServiceEndpointSpecPortOutput{})
	pulumi.RegisterOutputType(ServiceEndpointSpecPortArrayOutput{})
	pulumi.RegisterOutputType(ServiceLabelOutput{})
	pulumi.RegisterOutputType(ServiceLabelArrayOutput{})
	pulumi.RegisterOutputType(ServiceModeOutput{})
	pulumi.RegisterOutputType(ServiceModePtrOutput{})
	pulumi.RegisterOutputType(ServiceModeReplicatedOutput{})
	pulumi.RegisterOutputType(ServiceModeReplicatedPtrOutput{})
	pulumi.RegisterOutputType(ServiceRollbackConfigOutput{})
	pulumi.RegisterOutputType(ServiceRollbackConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecConfigOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecConfigArrayOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecDnsConfigOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecDnsConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecHealthcheckOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecHealthcheckPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecHostOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecHostArrayOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecLabelOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecLabelArrayOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecMountOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecMountArrayOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecMountBindOptionsOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecMountBindOptionsPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecMountTmpfsOptionsOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecMountTmpfsOptionsPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecMountVolumeOptionsOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecMountVolumeOptionsPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecMountVolumeOptionsLabelOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecMountVolumeOptionsLabelArrayOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecPrivilegesOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecPrivilegesPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecPrivilegesCredentialSpecOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecPrivilegesCredentialSpecPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecPrivilegesSeLinuxContextPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecSecretOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecContainerSpecSecretArrayOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecLogDriverOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecLogDriverPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecPlacementOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecPlacementPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecPlacementPlatformOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecPlacementPlatformArrayOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecResourcesOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecResourcesPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecResourcesLimitsOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecResourcesLimitsPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecResourcesLimitsGenericResourcesOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecResourcesLimitsGenericResourcesPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecResourcesReservationOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecResourcesReservationPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecResourcesReservationGenericResourcesOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecResourcesReservationGenericResourcesPtrOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecRestartPolicyOutput{})
	pulumi.RegisterOutputType(ServiceTaskSpecRestartPolicyPtrOutput{})
	pulumi.RegisterOutputType(ServiceUpdateConfigOutput{})
	pulumi.RegisterOutputType(ServiceUpdateConfigPtrOutput{})
	pulumi.RegisterOutputType(VolumeLabelOutput{})
	pulumi.RegisterOutputType(VolumeLabelArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkIpamConfigOutput{})
	pulumi.RegisterOutputType(GetNetworkIpamConfigArrayOutput{})
	pulumi.RegisterOutputType(ProviderRegistryAuthOutput{})
	pulumi.RegisterOutputType(ProviderRegistryAuthArrayOutput{})
}
