// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package docker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The version of the Docker builder.
type BuilderVersion string

const (
	// The first generation builder for Docker Daemon
	BuilderVersionBuilderV1 = BuilderVersion("BuilderV1")
	// The builder based on moby/buildkit project
	BuilderVersionBuilderBuildKit = BuilderVersion("BuilderBuildKit")
)

func (BuilderVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*BuilderVersion)(nil)).Elem()
}

func (e BuilderVersion) ToBuilderVersionOutput() BuilderVersionOutput {
	return pulumi.ToOutput(e).(BuilderVersionOutput)
}

func (e BuilderVersion) ToBuilderVersionOutputWithContext(ctx context.Context) BuilderVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BuilderVersionOutput)
}

func (e BuilderVersion) ToBuilderVersionPtrOutput() BuilderVersionPtrOutput {
	return e.ToBuilderVersionPtrOutputWithContext(context.Background())
}

func (e BuilderVersion) ToBuilderVersionPtrOutputWithContext(ctx context.Context) BuilderVersionPtrOutput {
	return BuilderVersion(e).ToBuilderVersionOutputWithContext(ctx).ToBuilderVersionPtrOutputWithContext(ctx)
}

func (e BuilderVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuilderVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuilderVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BuilderVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BuilderVersionOutput struct{ *pulumi.OutputState }

func (BuilderVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuilderVersion)(nil)).Elem()
}

func (o BuilderVersionOutput) ToBuilderVersionOutput() BuilderVersionOutput {
	return o
}

func (o BuilderVersionOutput) ToBuilderVersionOutputWithContext(ctx context.Context) BuilderVersionOutput {
	return o
}

func (o BuilderVersionOutput) ToBuilderVersionPtrOutput() BuilderVersionPtrOutput {
	return o.ToBuilderVersionPtrOutputWithContext(context.Background())
}

func (o BuilderVersionOutput) ToBuilderVersionPtrOutputWithContext(ctx context.Context) BuilderVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BuilderVersion) *BuilderVersion {
		return &v
	}).(BuilderVersionPtrOutput)
}

func (o BuilderVersionOutput) ToOutput(ctx context.Context) pulumix.Output[BuilderVersion] {
	return pulumix.Output[BuilderVersion]{
		OutputState: o.OutputState,
	}
}

func (o BuilderVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BuilderVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BuilderVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BuilderVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BuilderVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BuilderVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BuilderVersionPtrOutput struct{ *pulumi.OutputState }

func (BuilderVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuilderVersion)(nil)).Elem()
}

func (o BuilderVersionPtrOutput) ToBuilderVersionPtrOutput() BuilderVersionPtrOutput {
	return o
}

func (o BuilderVersionPtrOutput) ToBuilderVersionPtrOutputWithContext(ctx context.Context) BuilderVersionPtrOutput {
	return o
}

func (o BuilderVersionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BuilderVersion] {
	return pulumix.Output[*BuilderVersion]{
		OutputState: o.OutputState,
	}
}

func (o BuilderVersionPtrOutput) Elem() BuilderVersionOutput {
	return o.ApplyT(func(v *BuilderVersion) BuilderVersion {
		if v != nil {
			return *v
		}
		var ret BuilderVersion
		return ret
	}).(BuilderVersionOutput)
}

func (o BuilderVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BuilderVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BuilderVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BuilderVersionInput is an input type that accepts BuilderVersionArgs and BuilderVersionOutput values.
// You can construct a concrete instance of `BuilderVersionInput` via:
//
//	BuilderVersionArgs{...}
type BuilderVersionInput interface {
	pulumi.Input

	ToBuilderVersionOutput() BuilderVersionOutput
	ToBuilderVersionOutputWithContext(context.Context) BuilderVersionOutput
}

var builderVersionPtrType = reflect.TypeOf((**BuilderVersion)(nil)).Elem()

type BuilderVersionPtrInput interface {
	pulumi.Input

	ToBuilderVersionPtrOutput() BuilderVersionPtrOutput
	ToBuilderVersionPtrOutputWithContext(context.Context) BuilderVersionPtrOutput
}

type builderVersionPtr string

func BuilderVersionPtr(v string) BuilderVersionPtrInput {
	return (*builderVersionPtr)(&v)
}

func (*builderVersionPtr) ElementType() reflect.Type {
	return builderVersionPtrType
}

func (in *builderVersionPtr) ToBuilderVersionPtrOutput() BuilderVersionPtrOutput {
	return pulumi.ToOutput(in).(BuilderVersionPtrOutput)
}

func (in *builderVersionPtr) ToBuilderVersionPtrOutputWithContext(ctx context.Context) BuilderVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BuilderVersionPtrOutput)
}

func (in *builderVersionPtr) ToOutput(ctx context.Context) pulumix.Output[*BuilderVersion] {
	return pulumix.Output[*BuilderVersion]{
		OutputState: in.ToBuilderVersionPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BuilderVersionInput)(nil)).Elem(), BuilderVersion("BuilderV1"))
	pulumi.RegisterInputType(reflect.TypeOf((*BuilderVersionPtrInput)(nil)).Elem(), BuilderVersion("BuilderV1"))
	pulumi.RegisterOutputType(BuilderVersionOutput{})
	pulumi.RegisterOutputType(BuilderVersionPtrOutput{})
}
