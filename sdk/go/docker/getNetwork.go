// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package docker

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `Network` provides details about a specific Docker Network.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-docker/sdk/v3/go/docker"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := docker.LookupNetwork(ctx, &docker.LookupNetworkArgs{
// 			Name: "main",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// <!-- schema generated by tfplugindocs -->
// ## Schema
//
// ### Required
//
// - **name** (String) The name of the Docker network.
//
// ### Read-Only
//
// - **driver** (String) The driver of the Docker network. Possible values are `bridge`, `host`, `overlay`, `macvlan`. See [network docs](https://docs.docker.com/network/#network-drivers) for more details.
// - **id** (String) The ID of this resource.
// - **internal** (Boolean) If `true`, the network is internal.
// - **ipam_config** (Set of Object) The IPAM configuration options (see below for nested schema)
// - **options** (Map of String) Only available with bridge networks. See [bridge options docs](https://docs.docker.com/engine/reference/commandline/network_create/#bridge-driver-options) for more details.
// - **scope** (String) Scope of the network. One of `swarm`, `global`, or `local`.
//
// <a id="nestedatt--ipam_config"></a>
// ### Nested Schema for `ipamConfig`
//
// Read-Only:
//
// - **aux_address** (Map of String)
// - **gateway** (String)
// - **ip_range** (String)
// - **subnet** (String)
func LookupNetwork(ctx *pulumi.Context, args *LookupNetworkArgs, opts ...pulumi.InvokeOption) (*LookupNetworkResult, error) {
	var rv LookupNetworkResult
	err := ctx.Invoke("docker:index/getNetwork:getNetwork", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetwork.
type LookupNetworkArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by getNetwork.
type LookupNetworkResult struct {
	Driver      string                 `pulumi:"driver"`
	Id          string                 `pulumi:"id"`
	Internal    bool                   `pulumi:"internal"`
	IpamConfigs []GetNetworkIpamConfig `pulumi:"ipamConfigs"`
	Name        string                 `pulumi:"name"`
	Options     map[string]interface{} `pulumi:"options"`
	Scope       string                 `pulumi:"scope"`
}
