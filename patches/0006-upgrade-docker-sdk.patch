diff --git a/internal/provider/resource_docker_container_funcs.go b/internal/provider/resource_docker_container_funcs.go
index 9f902d4..bde327f 100644
--- a/internal/provider/resource_docker_container_funcs.go
+++ b/internal/provider/resource_docker_container_funcs.go
@@ -379,7 +379,7 @@ func resourceDockerContainerCreate(ctx context.Context, d *schema.ResourceData,
 		hostConfig.StorageOpt = mapTypeMapValsToString(v.(map[string]interface{}))
 	}

-	var retContainer container.ContainerCreateCreatedBody
+	var retContainer container.CreateResponse

 	// TODO mavogel add platform later which comes from API v1.41. Currently we pass nil
 	if retContainer, err = client.ContainerCreate(ctx, config, hostConfig, networkingConfig, nil, d.Get("name").(string)); err != nil {
diff --git a/internal/provider/resource_docker_volume.go b/internal/provider/resource_docker_volume.go
index dd010cd..fefa276 100644
--- a/internal/provider/resource_docker_volume.go
+++ b/internal/provider/resource_docker_volume.go
@@ -6,7 +6,6 @@ import (
 	"log"
 	"time"

-	"github.com/docker/docker/api/types"
 	"github.com/docker/docker/api/types/volume"
 	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
@@ -80,7 +79,7 @@ func resourceDockerVolume() *schema.Resource {
 func resourceDockerVolumeCreate(ctx context.Context, d *schema.ResourceData, meta interface{}) diag.Diagnostics {
 	client := meta.(*ProviderConfig).DockerClient

-	createOpts := volume.VolumeCreateBody{}
+	createOpts := volume.CreateOptions{}

 	if v, ok := d.GetOk("name"); ok {
 		createOpts.Name = v.(string)
@@ -96,7 +95,7 @@ func resourceDockerVolumeCreate(ctx context.Context, d *schema.ResourceData, met
 	}

 	var err error
-	var retVolume types.Volume
+	var retVolume volume.Volume
 	retVolume, err = client.VolumeCreate(ctx, createOpts)

 	if err != nil {
diff --git a/internal/provider/resource_docker_volume_test.go b/internal/provider/resource_docker_volume_test.go
index 7898747..585ca2c 100644
--- a/internal/provider/resource_docker_volume_test.go
+++ b/internal/provider/resource_docker_volume_test.go
@@ -5,13 +5,13 @@ import (
 	"fmt"
 	"testing"

-	"github.com/docker/docker/api/types"
+	"github.com/docker/docker/api/types/volume"
 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
 	"github.com/hashicorp/terraform-plugin-sdk/v2/terraform"
 )

 func TestAccDockerVolume_basic(t *testing.T) {
-	var v types.Volume
+	var v volume.Volume

 	resource.Test(t, resource.TestCase{
 		PreCheck:          func() { testAccPreCheck(t) },
@@ -39,7 +39,7 @@ func TestAccDockerVolume_basic(t *testing.T) {
 }

 func TestAccDockerVolume_full(t *testing.T) {
-	var v types.Volume
+	var v volume.Volume

 	testCheckVolumeInspect := func(*terraform.State) error {
 		if v.Driver != "local" {
@@ -88,7 +88,7 @@ func TestAccDockerVolume_full(t *testing.T) {
 }

 func TestAccDockerVolume_labels(t *testing.T) {
-	var v types.Volume
+	var v volume.Volume

 	resource.Test(t, resource.TestCase{
 		PreCheck:          func() { testAccPreCheck(t) },
@@ -127,7 +127,7 @@ func TestAccDockerVolume_labels(t *testing.T) {
 	})
 }

-func checkDockerVolumeCreated(n string, volume *types.Volume) resource.TestCheckFunc {
+func checkDockerVolumeCreated(n string, volume *volume.Volume) resource.TestCheckFunc {
 	return func(s *terraform.State) error {
 		rs, ok := s.RootModule().Resources[n]
 		if !ok {
